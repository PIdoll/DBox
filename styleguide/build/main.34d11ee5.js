(window.webpackJsonp=window.webpackJsonp||[]).push([[0],[,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1483));t.default=a.default},,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Row=t.Col=void 0;var a=_interopRequireDefault(n(662)),o=_interopRequireDefault(n(660));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var r={Col:a.default,Row:o.default};t.Col=a.default,t.Row=o.default,t.default=r},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Typography=t.Color=t.ConfigProvider=t.Empty=t.PrevPage=t.Version=t.Upload=t.TreeSelect=t.Transfer=t.Tree=t.Tooltip=t.Timeline=t.TimePicker=t.Tag=t.Tabs=t.Table=t.Switch=t.Steps=t.Spin=t.Slider=t.Select=t.Radio=t.Progress=t.Popover=t.Popconfirm=t.Pagination=t.Modal=t.Message=t.Menu=t.Layout=t.InputNumber=t.Input=t.Icon=t.Col=t.Row=t.Form=t.Drawer=t.Dropdown=t.Divider=t.DatePicker=t.Collapse=t.Checkbox=t.Cascader=t.Calendar=t.Button=t.Breadcrumb=t.Badge=t.BackTop=t.Anchor=t.Avatar=t.AutoComplete=t.Alert=t.Affix=void 0;var a=_interopRequireDefault(n(188)),o=_interopRequireDefault(n(258)),r=_interopRequireDefault(n(259)),l=_interopRequireDefault(n(260)),i=_interopRequireDefault(n(1530)),u=_interopRequireDefault(n(267)),s=_interopRequireDefault(n(268)),d=_interopRequireDefault(n(269)),c=_interopRequireDefault(n(75)),p=_interopRequireDefault(n(270)),f=_interopRequireDefault(n(524)),m=_interopRequireDefault(n(102)),h=_interopRequireDefault(n(525)),g=_interopRequireDefault(n(526)),v=_interopRequireDefault(n(655)),y=_interopRequireDefault(n(194)),b=_interopRequireDefault(n(657)),C=_interopRequireDefault(n(658)),_=_interopRequireDefault(n(662)),x=_interopRequireDefault(n(660)),R=_interopRequireDefault(n(17)),k=_interopRequireDefault(n(100)),D=_interopRequireDefault(n(663)),w=_interopRequireDefault(n(664)),S=_interopRequireDefault(n(665)),P=_interopRequireDefault(n(666)),q=_interopRequireDefault(n(668)),I=_interopRequireDefault(n(196)),E=_interopRequireDefault(n(669)),T=_interopRequireDefault(n(670)),N=_interopRequireDefault(n(807)),M=_interopRequireDefault(n(148)),B=_interopRequireDefault(n(98)),O=_interopRequireDefault(n(673)),j=_interopRequireDefault(n(197)),V=_interopRequireDefault(n(675)),F=_interopRequireDefault(n(676)),L=_interopRequireDefault(n(677)),A=_interopRequireDefault(n(678)),z=_interopRequireDefault(n(193)),$=_interopRequireDefault(n(679)),K=_interopRequireDefault(n(198)),H=_interopRequireDefault(n(76)),G=_interopRequireDefault(n(680)),W=_interopRequireDefault(n(681)),U=_interopRequireDefault(n(682)),Y=_interopRequireDefault(n(683)),J=_interopRequireDefault(n(1760)),X=_interopRequireDefault(n(1763)),Q=_interopRequireDefault(n(189)),Z=_interopRequireDefault(n(66)),ee=_interopRequireDefault(n(1765)),te=_interopRequireDefault(n(1773));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}t.Affix=a.default,t.Alert=o.default,t.AutoComplete=l.default,t.Avatar=i.default,t.Anchor=r.default,t.BackTop=u.default,t.Badge=s.default,t.Breadcrumb=d.default,t.Button=c.default,t.Calendar=p.default,t.Cascader=f.default,t.Checkbox=m.default,t.Collapse=h.default,t.DatePicker=g.default,t.Divider=v.default,t.Dropdown=y.default,t.Drawer=b.default,t.Form=C.default,t.Row=x.default,t.Col=_.default,t.Icon=R.default,t.Input=k.default,t.InputNumber=D.default,t.Layout=w.default,t.Menu=S.default,t.Message=P.default,t.Modal=q.default,t.Pagination=I.default,t.Popconfirm=E.default,t.Popover=T.default,t.Progress=N.default,t.Radio=M.default,t.Select=B.default,t.Slider=O.default,t.Spin=j.default,t.Steps=V.default,t.Switch=F.default,t.Table=L.default,t.Tabs=A.default,t.Tag=z.default,t.TimePicker=$.default,t.Timeline=K.default,t.Tooltip=H.default,t.Tree=G.default,t.Transfer=W.default,t.TreeSelect=U.default,t.Upload=Y.default,t.Version=J.default,t.PrevPage=X.default,t.Empty=Q.default,t.ConfigProvider=Z.default,t.Color=ee.default,t.Typography=te.default},,,function(e,t,n){"use strict";n(1764)},,,,,,function(e,t,n){},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.withConfigConsumer=t.ConfigConsumer=void 0;var a=n(1502),o=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(a);t.default=o.default,t.ConfigConsumer=a.ConfigConsumer,t.withConfigConsumer=a.withConfigConsumer},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(25));var o={};t.default=function(e,t){e||o[t]||((0,a.default)(!1,t),o[t]=!0)}},,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ButtonGroup=void 0;var a=_interopRequireDefault(n(1526)),o=_interopRequireDefault(n(1528));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}a.default.Group=o.default,t.ButtonGroup=o.default,t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1657));n(1660),t.default=a.default},,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1501));t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=_interopRequireDefault(n(1)),d=_interopRequireDefault(n(0)),c=_interopRequireDefault(n(261));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var p=function(e){function LocaleReceiver(){return(0,r.default)(this,LocaleReceiver),(0,i.default)(this,(LocaleReceiver.__proto__||(0,o.default)(LocaleReceiver)).apply(this,arguments))}return(0,u.default)(LocaleReceiver,e),(0,l.default)(LocaleReceiver,[{key:"getLocale",value:function getLocale(){var e=this.props,t=e.componentName,n=e.defaultLocale||c.default[t||"global"],o=this.context.idollLocale,r=t&&o?o[t]:{};return(0,a.default)({},"function"==typeof n?n():n,r||{})}},{key:"getLocaleCode",value:function getLocaleCode(){var e=this.context.idollLocale,t=e&&e.locale;return e&&e.exist&&!t?c.default.locale:t}},{key:"render",value:function render(){return this.props.children(this.getLocale(),this.getLocaleCode())}}]),LocaleReceiver}(s.default.Component);p.defaultProps={componentName:"global"},p.contextTypes={idollLocale:d.default.object},t.default=p},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(1512)),o=_interopRequireDefault(n(1513)),r=_interopRequireDefault(n(1525)),l=_interopRequireDefault(n(264));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}l.default.Group=a.default,l.default.Textarea=o.default,l.default.Search=r.default,t.default=l.default},function(e,t,n){"use strict";n(1524)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(775)),o=_interopRequireDefault(n(1569));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}a.default.CheckboxGroup=o.default,t.default=a.default},,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n(1768)},,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function interopDefault(e){return e.default||e}},,function(e,t,n){"use strict";n(30),n(1568)},function(e,t,n){"use strict";n(1651)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(672)),o=_interopRequireDefault(n(1692)),r=_interopRequireDefault(n(1693));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}a.default.RadioButton=r.default,a.default.RadioGroup=o.default,t.default=a.default},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1457));t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1506));t.default=a.default},function(e,t,n){"use strict";n(1511)},,function(e,t,n){"use strict";n(30)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(790)),o=_interopRequireDefault(n(1598));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}a.default.Group=o.default,t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(656)),o=_interopRequireDefault(n(1604)),r=_interopRequireDefault(n(1605));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}a.default.DropdownButton=o.default,a.default.DropdownNormal=r.default,t.default=a.default},,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(1683)),o=_interopRequireDefault(n(805));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}a.default.MiniSelect=o.default,t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1705));t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(1732)),o=_interopRequireDefault(n(811));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}a.default.Item=o.default,t.default=a.default},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function getScroll(e,t){if("undefined"==typeof window)return 0;var n=t?"pageYOffset":"pageXOffset",a=t?"scrollTop":"scrollLeft",o=e===window,r=o?e[n]:e[a];o&&"number"!=typeof r&&(r=window.document.documentElement[a]);return r}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1482));t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.AnchorLinkProps=t.AnchorProps=void 0;var a=n(1490);Object.defineProperty(t,"AnchorProps",{enumerable:!0,get:function get(){return a.AnchorProps}});var o=n(763);Object.defineProperty(t,"AnchorLinkProps",{enumerable:!0,get:function get(){return o.AnchorLinkProps}});var r=_interopRequireDefault(a),l=_interopRequireDefault(o);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}r.default.link=l.default,t.default=r.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.Option=void 0;var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1494));var o=a.default.Option;t.Option=o,t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(767)),o=_interopRequireDefault(n(262)),r=_interopRequireDefault(n(263)),l=_interopRequireDefault(n(768));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}t.default={locale:"zh",Pagination:a.default,DatePicker:o.default,TimePicker:r.default,Calendar:l.default,Table:{filterTitle:"筛选",filterConfirm:"确定",filterReset:"重置",emptyText:"暂无数据",selectAll:"全选当页",selectInvert:"反选当页",sortTitle:"排序"},Modal:{okText:"确定",cancelText:"取消",justOkText:"知道了"},Popconfirm:{cancelText:"取消",okText:"确定"},Transfer:{notFoundContent:"无匹配结果",searchPlaceholder:"请输入搜索内容",itemUnit:"",itemsUnit:""},Select:{notFoundContent:"无匹配结果"},Upload:{uploading:"文件上传中",removeFile:"删除文件",uploadError:"上传错误",previewFile:"预览文件"},Empty:{description:"暂无数据"}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(1507)),r=_interopRequireDefault(n(263));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var l={lang:(0,a.default)({placeholder:"请选择日期",rangePlaceholder:["开始日期","结束日期"]},o.default),timePickerLocale:(0,a.default)({},r.default)};l.lang.ok="确定",t.default=l},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.default={placeholder:"请选择时间"}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(6)),d=n(1),c=_interopRequireDefault(d),p=_interopRequireDefault(n(8)),f=n(0),m=_interopRequireDefault(n(191)),h=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function fixControlledValue(e){return null==e?"":e}n(101),document.onkeydown=function(e){var t=e||window.event;if(8===t.keyCode){var n=t.target||t.srcElement,a=n.type||n.getAttribute("type"),o=n.getAttribute("readonly")||n.readOnly,r=n.getAttribute("disabled")||n.disabled;if(!("password"!==a&&"text"!==a&&"textarea"!==a&&"email"!==a&&"url"!==a&&"number"!==a&&"range"!==a&&"Date"!==a&&"search"!==a&&"color"!==a||!0!==o&&!0!==r)||!("password"===a||"text"===a||"textarea"===a||"email"===a||"url"===a||"number"===a||"range"===a||"Date"===a||"search"===a||"color"===a))return!1}};var g=function(e){function Input(){(0,l.default)(this,Input);var e=(0,u.default)(this,(Input.__proto__||(0,r.default)(Input)).call(this));return e.isIE=function(){return!!(window.ActiveXObject||"ActiveXObject"in window)},e.isEdge=function(){return!!(navigator.userAgent.indexOf("Edge")>-1)},e.handleKeyDown=function(t){var n=e.props,a=n.onPressEnter,o=n.onKeyDown;13===t.keyCode&&a(t),o&&o(t)},e.saveInput=function(t){e.input=t},e.onClear=function(t){e.input.value="",e.onChange(t),e.setState({isHover:!1})},e.renderLaybeldIcon=function(t){var n,a=e.props;if(!("prefix"in a||"suffix"in a||"clearable"in a))return t;var r=a.prefix?c.default.createElement("span",{className:a.prefixCls+"-prefix"},a.prefix):null,l=c.default.createElement(h.default,{onMouseLeave:e.handleIconOnMouseLeave,onMouseEnter:e.handleIconOnMouseEnter,type:"close-circle",className:a.prefixCls+"-picker-clear"}),i=c.default.cloneElement(l,{onMouseDown:e.onClear,className:"icon-hover"}),u=e.input&&e.input.value&&(e.state.isOnInput||e.state.isInputHover||e.state.isIconHover)&&!e.props.disabled&&!e.props.readOnly&&!e.props.autoComplete&&!e.props.search,s=c.default.createElement("span",{style:{display:u?"block":"none"},className:a.prefixCls+"-clear-icon"},i),d=c.default.createElement("span",{style:{display:a.suffix||a.clearable&&u?"block":"none"},className:a.prefixCls+"-suffix"},s,u?null:a.suffix),f=(0,p.default)(a.className,a.prefixCls+"-affix-wrapper",(n={},(0,o.default)(n,a.prefixCls+"-affix-wrapper-sm","small"===a.size),(0,o.default)(n,a.prefixCls+"-affix-wrapper-lg","large"===a.size),n));return c.default.createElement("span",{className:f,style:a.style},r,c.default.cloneElement(t,{style:null,className:e.getInputClassName()}),d)},e.handleIconOnMouseEnter=function(){e.setState({isIconHover:!0})},e.handleIconOnMouseLeave=function(){e.setState({isIconHover:!1,isInputHover:!0})},e.handleInputonMouseLeave=function(t){e.setState({isInputHover:!1})},e.handleInputonMouseEnter=function(t){e.setState({isInputHover:!0})},e.onInput=function(t){e.setState({isOnInput:!0}),e.props.onInput(t)},e.onBlur=function(t){e.setState({isOnInput:!1}),e.props.onBlur(t)},e.onChange=function(t){e.props.onChange(t)},e.state={isOnInput:!1,isInputHover:!1,isIconHover:!1},e}return(0,s.default)(Input,e),(0,i.default)(Input,[{key:"focus",value:function focus(){this.input.focus()}},{key:"blur",value:function blur(){this.input.blur()}},{key:"getInputClassName",value:function getInputClassName(){var e,t,n=this.props,a=n.prefixCls,r=n.size,l=n.disabled,i=n.readOnly;return(0,p.default)(a,(e={},(0,o.default)(e,a+"-sm","small"===r),(0,o.default)(e,a+"-lg","large"===r),(0,o.default)(e,a+"-disabled",l),(0,o.default)(e,a+"-readOnly",i),e),(t={},(0,o.default)(t,a+"-enter-button",!0),(0,o.default)(t,a+"-"+r,!0),t))}},{key:"renderLabelInput",value:function renderLabelInput(e){var t,n=this.props;if(!n.addonBefore&&!n.addonAfter)return e;var a=n.prefixCls+"-group",r=a+"-addon",l=n.addonBefore?n.beforelength?c.default.createElement("span",{className:r,style:{width:n.beforelength}},n.addonBefore):c.default.createElement("span",{className:r},n.addonBefore):null,i=n.addonAfter?n.afterlength?c.default.createElement("span",{className:r,style:{width:n.afterlength}},n.addonAfter):c.default.createElement("span",{className:r},n.addonAfter):null,u=(0,p.default)(n.prefixCls+"-wrapper",(0,o.default)({},a,l||i)),s=(0,p.default)((t={},(0,o.default)(t,n.prefixCls+"-group-wrapper-sm","small"===n.size),(0,o.default)(t,n.prefixCls+"-group-wrapper-lg","large"===n.size),t));return l||i?c.default.createElement("span",{className:s,style:n.style},c.default.createElement("span",{className:u},l,c.default.cloneElement(e,{style:null}),i)):c.default.createElement("span",{className:u},l,e,i)}},{key:"renderInput",value:function renderInput(){var e=this.props,t=e.value,n=e.className,o=(0,m.default)(this.props,["prefixCls","onPressEnter","addonBefore","addonAfter","prefix","suffix","search"]);return"value"in this.props&&(o.value=fixControlledValue(t),delete o.defaultValue),this.renderLaybeldIcon(c.default.createElement("input",(0,a.default)({},o,{unselectable:this.props.readOnly&&(this.isEdge()||this.isIE())?"on":null,clearable:toString(o.clearable),className:(0,p.default)(this.getInputClassName(),n),onKeyDown:this.handleKeyDown,ref:this.saveInput,onMouseEnter:this.handleInputonMouseEnter,onMouseLeave:this.handleInputonMouseLeave,onInput:this.onInput,onBlur:this.onBlur})))}},{key:"render",value:function render(){return this.renderLabelInput(this.renderInput())}}]),Input}(d.Component);g.defaultProps={search:!1,disabled:!1,prefixCls:"idoll-input",type:"text",onPressEnter:function onPressEnter(){},onKeyDown:function onKeyDown(){},onChange:function onChange(){},onBlur:function onBlur(){},onInput:function onInput(){}},g.propTypes={type:f.PropTypes.string,id:f.PropTypes.oneOfType([f.PropTypes.string,f.PropTypes.number]),size:f.PropTypes.oneOf(["small","default","large"]),disabled:f.PropTypes.bool,value:f.PropTypes.any,defaultValue:f.PropTypes.any,className:f.PropTypes.string,addonBefore:f.PropTypes.node,addonAfter:f.PropTypes.node,prefixCls:f.PropTypes.string,prefix:f.PropTypes.node,suffix:f.PropTypes.node,onPressEnter:f.PropTypes.func,onKeyDown:f.PropTypes.func,onChange:f.PropTypes.func,beforelength:f.PropTypes.string,afterlength:f.PropTypes.string,clearable:f.PropTypes.bool,search:f.PropTypes.bool},t.default=g},function(e,t,n){"use strict";n(30),n(1527)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(15)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=_interopRequireWildcard(n(1)),p=_interopRequireWildcard(n(14)),f=_interopRequireDefault(n(0)),m=_interopRequireDefault(n(8)),h=_interopRequireDefault(n(17));function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1531);var g=function(e){function Avatar(e){(0,i.default)(this,Avatar);var t=(0,s.default)(this,(Avatar.__proto__||(0,l.default)(Avatar)).call(this,e));return t.setScale=function(){var e=t.avatarChildren;if(e){var n=e.offsetWidth,a=p.findDOMNode(t).getBoundingClientRect().width;a-8<n?t.setState({scale:(a-8)/n}):t.setState({scale:1})}},t.handleImgLoadError=function(){return t.setState({isImgExist:!1})},t.state={scale:1,isImgExist:!0},t}return(0,d.default)(Avatar,e),(0,u.default)(Avatar,[{key:"componentDidMount",value:function componentDidMount(){this.setScale()}},{key:"componentDidUpdate",value:function componentDidUpdate(e,t){(e.children!==this.props.children||t.scale!==this.state.scale&&1===this.state.scale)&&this.setScale()}},{key:"avatarChildren",value:function avatarChildren(){return c.createElement("span",null)}},{key:"render",value:function render(){var e,t,n=this,l=this.props,i=l.prefixCls,u=l.shape,s=l.size,d=l.src,p=l.icon,f=l.alt,g=l.className,v=(0,r.default)(l,["prefixCls","shape","size","src","icon","alt","className"]),y=(0,m.default)((e={},(0,o.default)(e,i+"-lg","large"===s),(0,o.default)(e,i+"-sm","small"===s),(0,o.default)(e,i+"-ti","tiny"===s),e)),b=(0,m.default)(i,g,y,(t={},(0,o.default)(t,i+"-"+u,u),(0,o.default)(t,i+"-image",d&&this.state.isImgExist),(0,o.default)(t,i+"-icon",p),t)),C=this.props.children;if(d)C=c.createElement("img",{src:d,onError:this.handleImgLoadError,alt:f});else if(p)C=c.createElement(h.default,{type:p});else{var _=this.avatarChildren;if(_||1!==this.state.scale){var x={msTransform:"scale("+this.state.scale+")",WebkitTransform:"scale("+this.state.scale+")",transform:"scale("+this.state.scale+")",position:"absolute",display:"inline-block",top:"calc(50% - "+Math.round(_.offsetHeight/2)+"px)",left:"calc(50% - "+Math.round(_.offsetWidth/2)+"px)"};C=c.createElement("span",{className:i+"-string",style:x,ref:function ref(e){n.avatarChildren=e}},C)}}return c.createElement("span",(0,a.default)({},v,{className:b}),C)}}]),Avatar}(c.Component);g.PropType={scale:f.default.number,prefixCls:f.default.string,shape:f.default.string,className:f.default.string,children:f.default.node,icon:f.default.string,size:f.default.string,src:f.default.string},g.defaultProps={prefixCls:"idoll-avatar",size:"default",shape:"cirecle"},t.default=g},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1533));t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1536));t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.BreadcrumbItem=t.BreadcrumbItemProps=t.BreadcrumbProps=void 0;var a=n(1541);Object.defineProperty(t,"BreadcrumbProps",{enumerable:!0,get:function get(){return a.BreadcrumbProps}});var o=n(769);Object.defineProperty(t,"BreadcrumbItemProps",{enumerable:!0,get:function get(){return o.BreadcrumbItemProps}});var r=_interopRequireDefault(a),l=_interopRequireDefault(o);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}r.default.Item=l.default,t.default=r.default,t.BreadcrumbItem=l.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1544));t.default=a.default},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n(1563),n(30)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1564));t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(6)),d=_interopRequireDefault(n(1)),c=_interopRequireDefault(n(1933)),p=_interopRequireDefault(n(8));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1573);var f=function(e){function Collapse(){return(0,l.default)(this,Collapse),(0,u.default)(this,(Collapse.__proto__||(0,r.default)(Collapse)).apply(this,arguments))}return(0,s.default)(Collapse,e),(0,i.default)(Collapse,[{key:"render",value:function render(){var e,t=this.props,n=t.prefixCls,r=t.className,l=void 0===r?"":r,i=t.bordered,u=t.bgColor,s=(0,p.default)((e={},(0,o.default)(e,n+"-borderless",!i),(0,o.default)(e,n+"-bgColor",u),e),l);return d.default.createElement(c.default,(0,a.default)({},this.props,{className:s}))}}]),Collapse}(d.default.Component);f.Panel=c.default.Panel,f.defaultProps={prefixCls:"idoll-collapse",bordered:!0},t.default=f},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(141)),o=_interopRequireDefault(n(814)),r=_interopRequireDefault(n(780)),l=_interopRequireDefault(n(1579)),i=_interopRequireDefault(n(1582)),u=_interopRequireDefault(n(1593)),s=_interopRequireDefault(n(1599));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(788);var d=(0,i.default)((0,l.default)(o.default),"date"),c=(0,i.default)((0,l.default)(r.default),"month");(0,a.default)(d,{RangePicker:(0,i.default)(u.default,"date"),MonthPicker:c,WeekPicker:(0,i.default)(s.default,"week")}),t.default=d},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1600));t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(15)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=_interopRequireDefault(n(1)),p=n(0),f=_interopRequireDefault(n(1937)),m=_interopRequireDefault(n(8));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(791);var h=function(e){function Dropdown(){return(0,i.default)(this,Dropdown),(0,s.default)(this,(Dropdown.__proto__||(0,l.default)(Dropdown)).apply(this,arguments))}return(0,d.default)(Dropdown,e),(0,u.default)(Dropdown,[{key:"render",value:function render(){var e,t=this.props,n=t.disabled,l=t.className,i=(0,r.default)(t,["disabled","className"]),u=(0,m.default)((e={},(0,o.default)(e,"idoll-dropdown-disabled",n),(0,o.default)(e,l,!!l),e));return c.default.createElement(f.default,(0,a.default)({className:u},i))}}]),Dropdown}(c.default.Component);h.defaultProps={transitionName:"slide-up",prefixCls:"idoll-dropdown",mouseEnterDelay:.15,mouseLeaveDelay:.1},h.propTypes={placement:p.PropTypes.string,trigger:p.PropTypes.array,overlay:p.PropTypes.any,disabled:p.PropTypes.bool,visible:p.PropTypes.bool,onVisibleChange:p.PropTypes.func,icon:p.PropTypes.string,block:p.PropTypes.bool},t.default=h},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1606));t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.FormItemProps=t.ValidationRule=t.ValidateCallback=t.FormCreateOption=t.FormComponentProps=t.FormProps=void 0;var a=n(1609);Object.defineProperty(t,"FormProps",{enumerable:!0,get:function get(){return a.FormProps}}),Object.defineProperty(t,"FormComponentProps",{enumerable:!0,get:function get(){return a.FormComponentProps}}),Object.defineProperty(t,"FormCreateOption",{enumerable:!0,get:function get(){return a.FormCreateOption}}),Object.defineProperty(t,"ValidateCallback",{enumerable:!0,get:function get(){return a.ValidateCallback}}),Object.defineProperty(t,"ValidationRule",{enumerable:!0,get:function get(){return a.ValidationRule}});var o=n(796);Object.defineProperty(t,"FormItemProps",{enumerable:!0,get:function get(){return o.FormItemProps}});var r=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(a);t.default=r.default},,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(15)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=n(1),p=_interopRequireDefault(c),f=_interopRequireDefault(n(0)),m=_interopRequireDefault(n(8));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(661);var h=function(e){function Row(){return(0,i.default)(this,Row),(0,s.default)(this,(Row.__proto__||(0,l.default)(Row)).apply(this,arguments))}return(0,d.default)(Row,e),(0,u.default)(Row,[{key:"render",value:function render(){var e,t=this.props,n=t.className,l=t.gutter,i=t.style,u=t.children,s=t.type,d=t.justify,f=t.align,h=(0,r.default)(t,["className","gutter","style","children","type","justify","align"]),g=(0,m.default)((e={"idoll-row":!s},(0,o.default)(e,"idoll-row-"+s,s),(0,o.default)(e,"idoll-row-"+s+"-"+d,d),(0,o.default)(e,"idoll-row-"+s+"-"+f,f),(0,o.default)(e,n,!!n),e)),v=l>0?(0,a.default)({marginLeft:l/-2,marginRight:l/-2},i):i,y=c.Children.map(u,function(e){return e?e.props?(0,c.cloneElement)(e,{style:l>0?(0,a.default)({paddingLeft:l/2,paddingRight:l/2},e.props.style):e.props.style}):e:null});return p.default.createElement("div",(0,a.default)({},h,{className:g,style:v}),y)}}]),Row}(p.default.Component);h.defulatProps={gutter:0},h.propTypes={type:f.default.string,align:f.default.string,justify:f.default.string,className:f.default.string,children:f.default.node,gutter:f.default.number,style:f.default.object},t.default=h},function(e,t,n){"use strict";n(1644)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(9)),o=_interopRequireDefault(n(3)),r=_interopRequireDefault(n(87)),l=_interopRequireDefault(n(15)),i=_interopRequireDefault(n(1)),u=_interopRequireDefault(n(0)),s=_interopRequireDefault(n(8));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(661);var d=u.default.oneOfType([u.default.string,u.default.number]),c=u.default.oneOfType([u.default.object,u.default.number]);function Colum(e){var t,n=e.span,u=e.order,d=e.offset,c=e.push,p=e.pull,f=e.className,m=e.children,h=(0,l.default)(e,["span","order","offset","push","pull","className","children"]),g={};["xs","sm","md","lg"].forEach(function(t){var n,l={};"number"==typeof e[t]?l.span=e[t]:"object"===(0,r.default)(e[t])&&(l=e[t]||{}),delete h[t],g=(0,o.default)((n={},(0,a.default)(n,"idoll-col-"+t+"-"+l.span,void 0!==l.span),(0,a.default)(n,"idoll-col-"+t+"-order-"+l.order,l.order),(0,a.default)(n,"idoll-col-"+t+"-offset-"+l.offset,l.offset),(0,a.default)(n,"idoll-col-"+t+"-push-"+l.push,l.push),(0,a.default)(n,"idoll-col-"+t+"-pull-"+l.pull,l.pull),n),g)});var v=(0,s.default)((0,o.default)((t={},(0,a.default)(t,"idoll-col-"+n,!!n),(0,a.default)(t,"idoll-col-order-"+u,u),(0,a.default)(t,"idoll-col-offset-"+d,d),(0,a.default)(t,"idoll-col-push-"+c,c),(0,a.default)(t,"idoll-col-pull-"+p,p),(0,a.default)(t,f,!!f),t),g));return i.default.createElement("div",(0,o.default)({},h,{className:v}),m)}Colum.propTypes={span:d,order:d,offset:d,push:d,pull:d,className:u.default.string,children:u.default.node,xs:c,sm:c,md:c,lg:c},t.default=Colum},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1647));t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(1650)),o=_interopRequireDefault(n(1652)),r=_interopRequireDefault(n(1653)),l=_interopRequireDefault(n(1654)),i=_interopRequireDefault(n(1655));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}a.default.Sider=o.default,a.default.Header=r.default,a.default.Content=l.default,a.default.Footer=i.default,t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(1656)),o=_interopRequireDefault(n(798)),r=_interopRequireDefault(n(799));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}a.default.SubMenu=r.default,a.default.MenuItem=o.default,t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1664));t.default=a.default},,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(804)),r=_interopRequireDefault(n(1681));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}o.default.info=function(e){var t=(0,a.default)({type:"info",iconType:"info-circle-o",okCancel:!1},e);return(0,r.default)(t)},o.default.success=function(e){var t=(0,a.default)({type:"success",iconType:"check-circle-o",okCancel:!1},e);return(0,r.default)(t)},o.default.error=function(e){var t=(0,a.default)({type:"error",iconType:"error-circle-o",okCancel:!1},e);return(0,r.default)(t)},o.default.warning=function(e){var t=(0,a.default)({type:"warning",iconType:"exclamation-circle",okCancel:!1},e);return(0,r.default)(t)},o.default.confirm=function(e){var t=(0,a.default)({type:"confirm",iconType:"exclamation-circle",okCancel:!0},e);return(0,r.default)(t)},t.default=o.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1686));t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1687));n(1688),t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(15)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=_interopRequireDefault(n(0)),p=_interopRequireDefault(n(1)),f=_interopRequireDefault(n(17)),m=n(1934),h=_interopRequireDefault(n(8));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1690);var g={normal:"#13B886",exception:"#F44336",success:"#3CCB69",active:"#42c69e"},v=function validProgress(e){return!e||e<0?0:e>100?100:e},y=function(e){function Progress(){return(0,i.default)(this,Progress),(0,s.default)(this,(Progress.__proto__||(0,l.default)(Progress)).apply(this,arguments))}return(0,d.default)(Progress,e),(0,u.default)(Progress,[{key:"render",value:function render(){var e,t=this.props,n=t.prefixCls,l=t.className,i=t.percent,u=void 0===i?0:i,s=t.status,d=t.format,c=t.trailColor,y=t.size,b=t.successPercent,C=t.type,_=t.strokeWidth,x=t.width,R=t.showInfo,k=t.strokeColor,D=t.strokeLinecap,w=void 0===D?"round":D,S=(0,r.default)(t,["prefixCls","className","percent","status","format","trailColor","size","successPercent","type","strokeWidth","width","showInfo","strokeColor","strokeLinecap"]),P=parseInt(b?b.toString():u.toString(),10)>=100&&!("status"in t)?"success":s||"normal",q=void 0,I=void 0;if(R){var E=void 0,T="circle"===C?"":"-circle";d||"exception"!==P&&"success"!==P?E=(d||function(e){return e+"%"})(v(u),v(b)):"exception"===P?E=p.default.createElement(f.default,{className:"idoll-progress-error-icon",type:"close"+T,theme:"line"===C?"filled":"outlined"}):"success"===P&&(E=p.default.createElement(f.default,{className:"idoll-progress-success-icon",type:"check"+T,theme:"line"===C?"filled":"outlined"})),q=p.default.createElement("span",{className:n+"-text",title:"string"==typeof E?E:void 0},E)}if("line"===C){var N={width:v(u)+"%",height:_||("small"===y?4:8),background:k,borderRadius:"square"===w?0:"100px"},M={width:v(b)+"%",height:_||("small"===y?4:8),borderRadius:"square"===w?0:"100px"},B=void 0!==b?p.default.createElement("div",{className:"$(prefixCls)-success-bg",style:M}):null;I=p.default.createElement("div",null,p.default.createElement("div",{className:n+"-outer"},p.default.createElement("div",{className:n+"-inner"},p.default.createElement("div",{className:n+"-bg",style:N}),B)),q)}else if("circle"===C){var O=x||120,j={width:O,height:O,fontSize:.15*O+6},V=_||6;I=p.default.createElement("div",{className:n+"-inner",style:j},p.default.createElement(m.Circle,{percent:v(u),strokeWidth:V,trailWidth:V,strokeColor:k||g[P],strokeLinecap:w,trailColor:c,prefixCls:n}),q)}var F=(0,h.default)(n,(e={},(0,o.default)(e,n+"-"+("dashboard"===C?"circle":C),!0),(0,o.default)(e,n+"-status-"+P,!0),(0,o.default)(e,n+"-show-info",R),(0,o.default)(e,n+"-"+y,y),e),l);return p.default.createElement("div",(0,a.default)({},S,{className:F}),I)}}]),Progress}(p.default.Component);y.defaultProps={type:"line",percent:0,showInfo:!0,trailColor:"#f5f5f5",prefixCls:"idoll-progress",size:"default"},y.propTypes={status:c.default.oneOf(["normal","exception","active","success"]),type:c.default.oneOf(["line","circle"]),showInfo:c.default.bool,percent:c.default.number,width:c.default.number,strokeWidth:c.default.number,strokeLinecap:c.default.oneOf(["round","square"]),format:c.default.func,default:c.default.oneOf(["default","small"])},t.default=y},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(141)),l=_interopRequireDefault(n(15)),i=_interopRequireDefault(n(11)),u=_interopRequireDefault(n(5)),s=_interopRequireDefault(n(7)),d=_interopRequireDefault(n(4)),c=_interopRequireDefault(n(6)),p=_interopRequireDefault(n(1)),f=_interopRequireDefault(n(0)),m=_interopRequireDefault(n(816)),h=_interopRequireDefault(n(8)),g=_interopRequireDefault(n(33));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(523);var v=function(e){function Radio(){var e,t,n,a;(0,u.default)(this,Radio);for(var o=arguments.length,r=Array(o),l=0;l<o;l++)r[l]=arguments[l];return t=n=(0,d.default)(this,(e=Radio.__proto__||(0,i.default)(Radio)).call.apply(e,[this].concat(r))),n.saveCheckbox=function(e){n.rcCheckbox=e},a=t,(0,d.default)(n,a)}return(0,c.default)(Radio,e),(0,s.default)(Radio,[{key:"shouldComponentUpdate",value:function shouldComponentUpdate(e,t,n){return!(0,g.default)(this.props,e)||!(0,g.default)(this.state,t)||!(0,g.default)(this.context.radioGroup,n.radioGroup)}},{key:"focus",value:function focus(){this.rcCheckbox.focus()}},{key:"blur",value:function blur(){this.rcCheckbox.blur()}},{key:"render",value:function render(){var e,t=this.props,n=this.context,i=t.prefixCls,u=t.className,s=t.children,d=t.style,c=(0,l.default)(t,["prefixCls","className","children","style"]),f=n.radioGroup,g=(0,r.default)({},c);g.readOnly&&(g.disabled=g.readOnly),f&&(g.name=f.name,g.onChange=f.onChange,g.readOnly=f.readOnly,g.checked=t.value===f.value,g.disabled=t.disabled||f.disabled||g.readOnly);var v=(0,h.default)(u,(e={},(0,o.default)(e,i+"-wrapper",!0),(0,o.default)(e,i+"-wrapper-checked",g.checked),(0,o.default)(e,i+"-wrapper-disabled",g.disabled),(0,o.default)(e,i+"-wrapper-disabled-checked",g.disabled&&g.checked),e));return p.default.createElement("label",{className:v,style:d,onMouseEnter:t.onMouseEnter,onMouseLeave:t.onMouseLeave},p.default.createElement(m.default,(0,a.default)({},g,{prefixCls:i,ref:this.saveCheckbox})),void 0!==s?p.default.createElement("span",{id:g.readOnly&&i+"-readOnly"},s):null)}}]),Radio}(p.default.Component);v.defaultProps={prefixCls:"idoll-radio",type:"radio"},v.contextTypes={radioGroup:f.default.any},v.propTypes={defaultChecked:f.default.bool,value:f.default.any,checked:f.default.bool},t.default=v},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1694));t.default=a.default},,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1706));t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1709));t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(1712)),o=_interopRequireDefault(n(1715));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1716),a.default.NumericInput=o.default,t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1720));t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(787));t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1735));t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1738));t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1752));t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(1755));n(1758),t.default=a.default},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(235)),o=_interopRequireDefault(n(3)),r=_interopRequireDefault(n(15));t.LinkRenderer=LinkRenderer;var l=_interopRequireDefault(n(1)),i=_interopRequireDefault(n(0)),u=_interopRequireDefault(n(8)),s=_interopRequireDefault(n(18)),d=_interopRequireDefault(n(735));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var c=function handleActiveLink(e){return e===window.location.hash.split("/")[window.location.hash.split("/").length-1]?{background:"rgba(19,184,134,0.1)",borderRight:"3px solid #13B886",color:"#13B886"}:{}};function LinkRenderer(e){var t=e.classes,n=e.children,i=(0,r.default)(e,["classes","children"]);console.log("props",n);var s=!0,p=!1,f=void 0;try{for(var m,h=(0,a.default)(["Components","General","Navigation","DataEntry","DataDisplay","Feedback","Others"].values());!(s=(m=h.next()).done);s=!0){if(n===m.value)return l.default.createElement("h3",{className:(0,u.default)(t.h3,i.className)},d.default[n])}}catch(e){p=!0,f=e}finally{try{!s&&h.return&&h.return()}finally{if(p)throw f}}var g=!0,v=!1,y=void 0;try{for(var b,C=(0,a.default)(["GetStarted","Version","Color","Typography"].values());!(g=(b=C.next()).done);g=!0){if(n===b.value)return l.default.createElement("a",(0,o.default)({},i,{style:c(n),className:(0,u.default)(t.link,i.className)}),d.default[n])}}catch(e){v=!0,y=e}finally{try{!g&&C.return&&C.return()}finally{if(v)throw y}}return l.default.createElement("a",(0,o.default)({},i,{style:c(n),className:(0,u.default)(t.link,i.className)}),n,l.default.createElement("span",{className:t.chinese},d.default[n]))}LinkRenderer.propTypes={children:i.default.node,className:i.default.string,classes:i.default.object.isRequired},t.default=(0,s.default)(function styles(e){e.color;return{link:{display:"block",color:"#333",lineHeight:"40px",overflow:"hidden",fontWeight:"400",fontSize:"14px",cursor:"pointer",paddingLeft:"8px"},h3:{fontSize:"12px",color:"#aaa",padding:"5px 8px"},chinese:{fontSize:"12px",marginLeft:"8px",display:"inline-block",cursor:"pointer"}}})(LinkRenderer)},,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default={Components:"组件",Button:"按钮",Icon:"图标",Grid:"栅格",Layout:"布局",Affix:"固钉",Dropdown:"下拉框",Pagination:"分页",Breadcrumb:"面包屑",Steps:"步骤条",Menu:"菜单",AutoComplete:"自动完成",Cascader:"级联选择",Input:"输入框",InputNumber:"数字输入框",Select:"选择框",TreeSelect:"树选择",Radio:"单选框",Switch:"开关",Slider:"滑动条",TimePicker:"时间选择器",DatePicker:"日期选择器",Transfer:"穿梭框",Upload:"上传",Avatar:"头像",Badge:"徽标数",Collapse:"折叠面板",Calendar:"日历",Empty:"空状态",Popover:"气泡卡片",Tree:"树形控件",Tooltip:"文字提示",Table:"表格",Tabs:"标签页",Timeline:"时间线",Tag:"标签",Alert:"警告提示",Drawer:"抽屉",Modal:"对话框",Message:"全局提示",Notification:"通知提醒框",Progress:"进度条",PopConfirm:"气泡确认框",Spin:"加载中",Anchor:"锚点",BackTop:"返回顶部",Divider:"分割线",Form:"表单",Checkbox:"多选框",Popconfirm:"气泡确认框",Color:"色彩",Typography:"字体",General:"通用",LayOut:"布局",Navigation:"导航",DataEntry:"数据录入",DataDisplay:"数据展示",Feedback:"反馈",Others:"其它",Install:"安装",GetStarted:" 快速上手",Version:"版本记录"}},,,,,,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.styles=void 0;var a=_interopRequireDefault(n(9));t.TabButtonRenderer=TabButtonRenderer;var o=_interopRequireDefault(n(1)),r=_interopRequireDefault(n(0)),l=_interopRequireDefault(n(18)),i=_interopRequireDefault(n(8));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var u=t.styles=function styles(e){var t=e.color,n=e.fontFamily,a=e.fontSize,o=e.buttonTextTransform;return{button:{fontFamily:n.base,fontSize:a.base,background:"transparent",textTransform:o,transition:"backgroundColor .3s ease",border:"none",cursor:"pointer","&:hover, &:focus":{isolate:!1,outline:0,backgroundColor:"rgba(19,184,134,.1)",color:"#13b886"},"&:focus:not($isActive)":{isolate:!1}},caret:{width:0,height:0,marginTop:"10px",borderTop:"8px solid #13b886",borderBottom:"8px solid transparent",borderLeft:"8px solid transparent",borderRight:"8px solid transparent"},isActive:{borderBottom:[[2,t.linkHover,"solid"]]}}};function TabButtonRenderer(e){var t=e.classes,n=e.name,r=e.className,l=e.onClick,u=e.active,s=e.children,d=(0,i.default)(t.button,r,(0,a.default)({},t.isActive,u));return o.default.createElement("button",{type:"button",name:n,className:d,onClick:l},s)}TabButtonRenderer.propTypes={classes:r.default.object.isRequired,name:r.default.string,className:r.default.string,onClick:r.default.func,active:r.default.bool,children:r.default.node},t.default=(0,l.default)(u)(TabButtonRenderer)},,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.LogoRenderer=LogoRenderer;var a=_interopRequireDefault(n(1)),o=_interopRequireDefault(n(0)),r=_interopRequireDefault(n(18)),l=_interopRequireDefault(n(1029));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function LogoRenderer(e){var t=e.classes;return a.default.createElement("a",{href:"/",className:t.logo},a.default.createElement("img",{className:t.image,src:l.default}))}LogoRenderer.propTypes={classes:o.default.object.isRequired},t.default=(0,r.default)(function styles(){return{logo:{display:"flex",alignItems:"center",height:"64px",margin:0,lineHeight:"64px",fontSize:20,color:"#000",cursor:"pointer","&:hover span":{color:"#000",fontSize:20,cursor:"pointer"}},image:{width:"88px",verticalAlign:"middle",marginRight:"6px"},text:{fontSize:"20px",color:"#000"}}})(LogoRenderer)},,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.styles=void 0,t.PathlineRenderer=PathlineRenderer;var a=_interopRequireDefault(n(1)),o=_interopRequireDefault(n(0)),r=_interopRequireDefault(n(18));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var l=t.styles=function styles(e){var t=e.fontFamily,n=e.fontSize,a=e.color;return{pathline:{fontFamily:t.monospace,fontSize:n.small,color:a.light,wordBreak:"break-all",display:"none"}}};function PathlineRenderer(e){var t=e.classes,n=e.children;return a.default.createElement("div",{className:t.pathline},n)}PathlineRenderer.propTypes={classes:o.default.object.isRequired,children:o.default.string},t.default=(0,r.default)(l)(PathlineRenderer)},,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(85));t.default=function getDataOrAriaProps(e){return(0,a.default)(e).reduce(function(t,n){return"data-"!==n.substr(0,5)&&"aria-"!==n.substr(0,5)&&"role"!==n||"data-_"===n.substr(0,7)||(t[n]=e[n]),t},{})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(9)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=_interopRequireDefault(n(1)),d=_interopRequireDefault(n(0)),c=_interopRequireDefault(n(8));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var p=function(e){function AnchorLink(){var e,t,n,a;(0,r.default)(this,AnchorLink);for(var l=arguments.length,u=Array(l),s=0;s<l;s++)u[s]=arguments[s];return t=n=(0,i.default)(this,(e=AnchorLink.__proto__||(0,o.default)(AnchorLink)).call.apply(e,[this].concat(u))),n.componentDidMount=function(){n.context.idollAnchor.registerLink(n.props.href)},n.componentWillUnmount=function(){n.context.idollAnchor.unregisterLink(n.props.href)},n.handleClick=function(e){var t=n.context.idollAnchor,a=t.scrollTo,o=t.onClick,r=n.props,l=r.href,i=r.title;o&&o(e,{title:i,href:l}),a(l)},a=t,(0,i.default)(n,a)}return(0,u.default)(AnchorLink,e),(0,l.default)(AnchorLink,[{key:"componentWillReceiveProps",value:function componentWillReceiveProps(e){var t=e.href;this.props.href!==t&&(this.context.idollAnchor.unregisterLink(this.props.href),this.context.idollAnchor.registerLink(t))}},{key:"render",value:function render(){var e=this.props,t=e.prefixCls,n=e.href,o=e.title,r=e.children,l=this.context.idollAnchor.activeLink===n,i=(0,c.default)(t+"-link",(0,a.default)({},t+"-link-active",l)),u=(0,c.default)(t+"-link-title",(0,a.default)({},t+"-link-title-active",l));return s.default.createElement("div",{className:i},s.default.createElement("a",{className:u,href:n,title:"string"==typeof o?o:"",onClick:this.handleClick},o),r)}}]),AnchorLink}(s.default.Component);p.propTypes={prefixCls:d.default.string,href:d.default.string,title:d.default.string,children:d.default.node},p.defaultProps={prefixCls:"idoll-anchor",href:"#"},p.contextTypes={idollAnchor:d.default.object},t.default=p},,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(262));t.default=a.default},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(15)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(6)),d=_interopRequireDefault(n(1)),c=_interopRequireDefault(n(0));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var p=function(e){function BreadcrumbItem(){return(0,l.default)(this,BreadcrumbItem),(0,u.default)(this,(BreadcrumbItem.__proto__||(0,r.default)(BreadcrumbItem)).apply(this,arguments))}return(0,s.default)(BreadcrumbItem,e),(0,i.default)(BreadcrumbItem,[{key:"render",value:function render(){var e=this.props,t=e.prefixCls,n=e.separator,r=e.children,l=(0,o.default)(e,["prefixCls","separator","children"]),i=void 0;return i="href"in this.props?d.default.createElement("a",(0,a.default)({className:t+"-link"},l),r):d.default.createElement("span",(0,a.default)({className:t+"-link"},l),r),r?d.default.createElement("span",null,i,d.default.createElement("span",{className:t+"-separator"},n)):null}}]),BreadcrumbItem}(d.default.Component);p.__IDOLL_BREADCRUMB_ITEM=!0,p.defaultProps={prefixCls:"idoll-breadcrumb",separator:"/"},p.proprTypes={prefixCls:c.default.string,separator:c.default.oneOfType([c.default.string,c.default.element]),href:c.default.string},t.default=p},,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.PREFIX_CLS="idoll-fullcalendar"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(9)),o=_interopRequireDefault(n(3)),r=_interopRequireDefault(n(15)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=_interopRequireDefault(n(1)),p=_interopRequireDefault(n(0)),f=_interopRequireDefault(n(8)),m=_interopRequireDefault(n(816)),h=_interopRequireDefault(n(33));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(146);var g=function(e){function Checkbox(){var e,t,n,a;(0,i.default)(this,Checkbox);for(var o=arguments.length,r=Array(o),u=0;u<o;u++)r[u]=arguments[u];return t=n=(0,s.default)(this,(e=Checkbox.__proto__||(0,l.default)(Checkbox)).call.apply(e,[this].concat(r))),n.saveCheckbox=function(e){n.rcCheckbox=e},a=t,(0,s.default)(n,a)}return(0,d.default)(Checkbox,e),(0,u.default)(Checkbox,[{key:"shouldComponentUpdate",value:function shouldComponentUpdate(e,t,n){return!(0,h.default)(this.props,e)||!(0,h.default)(this.state,t)||!(0,h.default)(this.context.checkboxGroup,n.checkboxGroup)}},{key:"focus",value:function focus(){this.rcCheckbox.focus()}},{key:"blur",value:function blur(){this.rcCheckbox.blur()}},{key:"render",value:function render(){var e=this.props,t=this.context,n=this.props,l=n.prefixCls,i=n.className,u=n.children,s=n.indeterminate,d=n.style,p=n.onMouseEnter,h=n.onMouseLeave,g=(0,r.default)(n,["prefixCls","className","children","indeterminate","style","onMouseEnter","onMouseLeave"]),v=t.checkboxGroup,y=(0,o.default)({},g);e.readOnly&&(y.disabled=e.readOnly),v&&(y.onChange=function(){return v.toggleOption({label:u,value:e.value})},y.checked=-1!==v.value.indexOf(e.value),y.disabled=v.disabled||v.readOnly||e.readOnly||e.disabled),console.log("checkboxGroup",v&&v.readOnly);var b=(0,f.default)(i,(0,a.default)({},l+"-wrapper",!0)),C=(0,f.default)((0,a.default)({},l+"-indeterminate",s));return c.default.createElement("label",{className:b,style:d,onMouseEnter:p,onMouseLeave:h},c.default.createElement(m.default,(0,o.default)({},y,{prefixCls:l,className:C,ref:this.saveCheckbox})),void 0!==u?c.default.createElement("span",{id:(e&&e.readOnly||v&&v.readOnly)&&l+"-text"},u):null)}}]),Checkbox}(c.default.Component);g.defaultProps={prefixCls:"idoll-checkbox",indeterminate:!1},g.contextTypes={checkboxGroup:p.default.any},t.default=g},,,,,,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(9)),o=_interopRequireDefault(n(15)),r=_interopRequireDefault(n(3)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(7)),d=_interopRequireDefault(n(6));t.generateShowHourMinuteSecond=generateShowHourMinuteSecond;var c=_interopRequireDefault(n(1)),p=_interopRequireDefault(n(12)),f=_interopRequireDefault(n(74)),m=n(19),h=_interopRequireDefault(n(1587)),g=_interopRequireDefault(n(8)),v=_interopRequireDefault(n(99)),y=n(66),b=_interopRequireDefault(n(263)),C=_interopRequireDefault(n(0)),_=_interopRequireDefault(n(144)),x=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function generateShowHourMinuteSecond(e){return{showHour:e.indexOf("H")>-1||e.indexOf("h")>-1||e.indexOf("k")>-1,showMinute:e.indexOf("m")>-1,showSecond:e.indexOf("s")>-1}}function handleTimeFormat(e){return e<10&&(e="0"+e),e}var R=function(e){function TimePicker(e){(0,i.default)(this,TimePicker);var t=(0,u.default)(this,(TimePicker.__proto__||(0,l.default)(TimePicker)).call(this,e));k.call(t);var n=e.value||e.defaultValue;if(n&&!(0,_.default)(p.default).isMoment(n))throw new Error("The value/defaultValue of TimePicker must be a moment object");return t.state={value:n},t}return(0,d.default)(TimePicker,e),(0,s.default)(TimePicker,null,[{key:"getDerivedStateFromProps",value:function getDerivedStateFromProps(e){return"value"in e?{value:e.value}:null}}]),(0,s.default)(TimePicker,[{key:"focus",value:function focus(){this.timePickerRef.focus()}},{key:"blur",value:function blur(){this.timePickerRef.blur()}},{key:"getDefaultFormat",value:function getDefaultFormat(){var e=this.props,t=e.format,n=e.use12Hours;return t||(n?"h:mm:ss a":"HH:mm:ss")}},{key:"renderInputIcon",value:function renderInputIcon(e){var t=this.props.suffixIcon,n=t&&c.default.isValidElement(t)&&c.default.cloneElement(t,{className:(0,g.default)(t.props.className,e+"-clock-icon")})||c.default.createElement(x.default,{type:"clock-o",className:e+"-clock-icon"});return c.default.createElement("span",{className:e+"-icon"},n)}},{key:"renderClearIcon",value:function renderClearIcon(e){var t=this.props.clearIcon,n=e+"-clear";return t&&c.default.isValidElement(t)?c.default.cloneElement(t,{className:(0,g.default)(t.props.className,n)}):c.default.createElement(x.default,{type:"close-circle",className:n,theme:"filled"})}},{key:"render",value:function render(){return c.default.createElement(v.default,{componentName:"TimePicker",defaultLocale:this.getDefaultLocale()},this.renderTimePicker)}}]),TimePicker}(c.default.Component);R.propTypes={className:C.default.string,size:C.default.oneOf(["large","default","small"]),open:C.default.bool,format:C.default.string,onChange:C.default.func,onOpenChange:C.default.func,disabled:C.default.bool,placeholder:C.default.string,prefixCls:C.default.string,hideDisabledOptions:C.default.bool,disabledHours:C.default.func,disabledMinutes:C.default.func,disabledSeconds:C.default.func,style:C.default.object,getPopupContainer:C.default.func,addon:C.default.func,use12Hours:C.default.bool,focusOnOpen:C.default.bool,hourStep:C.default.number,minuteStep:C.default.number,secondStep:C.default.number,allowEmpty:C.default.bool,inputReadOnly:C.default.bool,clearText:C.default.string,popupClassName:C.default.string,suffixIcon:C.default.element,align:C.default.object,placement:C.default.string,transitionName:C.default.string,autoFocus:C.default.bool},R.defaultProps={prefixCls:"idoll-time-picker",align:{offset:[0,-2]},disabled:!1,disabledHours:void 0,disabledMinutes:void 0,disabledSeconds:void 0,hideDisabledOptions:!1,placement:"bottomLeft",transitionName:"slide-up",focusOnOpen:!0};var k=function _initialiseProps(){var e=this;this.handleChange=function(t){"value"in e.props||e.setState({value:t});var n=e.props,a=n.onChange,o=n.format,r=void 0===o?"HH:mm:ss":o;a&&a(t,t&&t.format(r)||"")},this.handleOpenClose=function(t){var n=t.open,a=new Date,o=e.props.onOpenChange,r=handleTimeFormat(a.getHours())+":"+handleTimeFormat(a.getMinutes())+":"+handleTimeFormat(a.getSeconds());e.setState({defaultOpenValue:(0,p.default)(r,"HH:mm:ss")}),o&&o(n)},this.saveTimePicker=function(t){e.timePickerRef=t},this.getDefaultLocale=function(){return(0,r.default)({},b.default,e.props.locale)},this.renderTimePicker=function(t){return c.default.createElement(y.ConfigConsumer,null,function(n){var l=n.getPopupContainer,i=n.getPrefixCls,u=e.props,s=u.getPopupContainer,d=u.prefixCls,p=u.className,m=u.addon,v=u.placeholder,y=(0,o.default)(u,["getPopupContainer","prefixCls","className","addon","placeholder"]),b=y.size,C=y.allowEmpty,_=(0,f.default)(y,["defaultValue","suffixIcon","allowEmpty","allowClear"]),x=e.getDefaultFormat(),R=i("time-picker",d),k=(0,g.default)(p,(0,a.default)({},R+"-"+b,!!b));return c.default.createElement(h.default,(0,r.default)({},generateShowHourMinuteSecond(x),_,{allowEmpty:C,prefixCls:R,getPopupContainer:s||l,ref:e.saveTimePicker,format:x,className:k,value:e.state.value,placeholder:void 0===v?t.placeholder:v,onChange:e.handleChange,onOpen:e.handleOpenClose,onClose:e.handleOpenClose,addon:function pickerAddon(e){return m?c.default.createElement("div",{className:R+"-panel-addon"},m(e)):null},inputIcon:e.renderInputIcon(R),clearIcon:e.renderClearIcon(R)}))})}};(0,m.polyfill)(R),t.default=R},function(e,t,n){"use strict";n(192),n(1589),n(101),n(1590),n(789)},function(e,t,n){"use strict";n(1592)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(9)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=n(1),d=_interopRequireDefault(s),c=_interopRequireDefault(n(32)),p=_interopRequireDefault(n(0)),f=_interopRequireDefault(n(8)),m=n(14),h=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(789);var g=function(e){function Tag(e){(0,r.default)(this,Tag);var t=(0,i.default)(this,(Tag.__proto__||(0,o.default)(Tag)).call(this,e));return t.clearButton=function(e){e.className=e.className.replace(t.props.prefixCls+"-clicked","")},t.handleClick=function(){var e,n=(0,m.findDOMNode)(t);t.clearButton(n),t.clickedTimeout=setTimeout(function(){return n.className+=" "+t.props.prefixCls+"-clicked"},10),clearTimeout(t.timeout),t.timeout=setTimeout(function(){return t.clearButton(n)},500),(e=t.props).onClick.apply(e,arguments),t.setState({checked:!t.state.checked})},t.close=function(e){var n=t.props.onClose;if(n&&n(e),e.defaultPrevented)return!1;t.setState({closable:!1})},t.state={checked:t.props.checked,closable:t.props.closable},t.handleClick=t.handleClick.bind(t),t.close=t.close.bind(t),t}return(0,u.default)(Tag,e),(0,l.default)(Tag,[{key:"render",value:function render(){var e,t=this.props,n=t.children,o=t.prefixCls,r=t.target,l=t.color,i=t.href,u=t.hot,s=t.closable,p=this.state.checked,m={marginLeft:4,color:l},g=s?d.default.createElement(h.default,{style:m,type:"close",onClick:this.close}):null,v=(0,f.default)(o,(e={},(0,a.default)(e,o+"-hot",u),(0,a.default)(e,o+"-hot-checked",p&&u),(0,a.default)(e,o+"-color",l),(0,a.default)(e,o+"-closable",s),(0,a.default)(e,o+"-"+l,l),(0,a.default)(e,o+"-checkable-checked",p),e)),y=d.default.createElement("div",{style:{borderColor:(/blue|red|green|yellow/.test(l),l)},"data-show":this.state.closable,key:n,className:v,onClick:this.handleClick},d.default.createElement("div",{style:{color:(/blue|red|green|yellow/.test(l),l)}},n),g),b=this.state.closable?y:null;return d.default.createElement(c.default,{component:"",showProp:"data-show"},s?b:i?d.default.createElement("a",{target:r,style:{color:(/blue|red|green|yellow/.test(l),l),borderColor:(/blue|red|green|yellow/.test(l),l)},className:v,href:i},"链接"):d.default.createElement("div",{"data-show":this.state.closable,style:{borderColor:(/blue|red|green|yellow/.test(l),l)},key:n,className:v,onClick:this.handleClick},d.default.createElement("div",{style:{color:(/blue|red|green|yellow/.test(l),l)}},n)))}}]),Tag}(s.Component);g.propTypes={prefixCls:p.default.string,checked:p.default.bool,closable:p.default.bool},g.defaultProps={prefixCls:"idoll-tag",onClick:function onClick(){},closable:!1,hover:!1},t.default=g},function(e,t,n){"use strict";n(30),n(1603)},,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(9)),o=_interopRequireDefault(n(3)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(6)),d=_interopRequireDefault(n(1)),c=_interopRequireDefault(n(14)),p=_interopRequireDefault(n(0)),f=_interopRequireDefault(n(8)),m=_interopRequireDefault(n(32)),h=_interopRequireDefault(n(195)),g=_interopRequireDefault(n(660)),v=_interopRequireDefault(n(662)),y=_interopRequireDefault(n(67)),b=n(797);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var C=function(e){function FormItem(){var e,t,n,a;(0,l.default)(this,FormItem);for(var o=arguments.length,i=Array(o),s=0;s<o;s++)i[s]=arguments[s];return t=n=(0,u.default)(this,(e=FormItem.__proto__||(0,r.default)(FormItem)).call.apply(e,[this].concat(i))),n.onLabelClick=function(){var e=n.props.id||n.getId();if(e&&1!==document.querySelectorAll('[id="'+e+'"]').length){var t=c.default.findDOMNode(n).querySelector('[id="'+e+'"]');t&&t.focus&&t.focus()}},a=t,(0,u.default)(n,a)}return(0,s.default)(FormItem,e),(0,i.default)(FormItem,[{key:"componentDidMount",value:function componentDidMount(){(0,y.default)(this.getControls(this.props.children,!0).length<=1,"`Form.Item` cannot generate `validateStatus` and `help` automatically, while there are more than one `getFieldDecorator` in it.")}},{key:"shouldComponentUpdate",value:function shouldComponentUpdate(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return h.default.shouldComponentUpdate.apply(this,t)}},{key:"getHelpMsg",value:function getHelpMsg(){var e=this.props,t=this.getOnlyControl();if(void 0===e.help&&t){var n=this.getField().errors;return n?n.map(function(e){return e.message}).join(", "):""}return e.help}},{key:"getControls",value:function getControls(e,t){for(var n=[],a=d.default.Children.toArray(e),o=0;o<a.length&&(t||!(n.length>0));o++){var r=a[o];(!r.type||r.type!==FormItem&&"FormItem"!==r.type.displayName)&&r.props&&(b.FIELD_META_PROP in r.props?n.push(r):r.props.children&&(n=n.concat(this.getControls(r.props.children,t))))}return n}},{key:"getOnlyControl",value:function getOnlyControl(){var e=this.getControls(this.props.children,!1)[0];return void 0!==e?e:null}},{key:"getChildProp",value:function getChildProp(e){var t=this.getOnlyControl();return t&&t.props&&t.props[e]}},{key:"getId",value:function getId(){return this.getChildProp("id")}},{key:"getMeta",value:function getMeta(){return this.getChildProp(b.FIELD_META_PROP)}},{key:"getField",value:function getField(){return this.getChildProp(b.FIELD_DATA_PROP)}},{key:"renderHelp",value:function renderHelp(){var e=this.props.prefixCls,t=this.getHelpMsg(),n=t?d.default.createElement("div",{className:e+"-explain",key:"help"},t):null;return d.default.createElement(m.default,{transitionName:"show-help",component:"",transitionAppear:!0,key:"help"},n)}},{key:"renderExtra",value:function renderExtra(){var e=this.props,t=e.prefixCls,n=e.extra;return n?d.default.createElement("div",{className:t+"-extra"},n):null}},{key:"getValidateStatus",value:function getValidateStatus(){if(!this.getOnlyControl())return"";var e=this.getField();if(e.validating)return"validating";if(e.errors)return"error";var t="value"in e?e.value:this.getMeta().initialValue;return null!=t&&""!==t?"success":""}},{key:"renderValidateWrapper",value:function renderValidateWrapper(e,t,n){var a=this.props,o=this.getOnlyControl,r=void 0===a.validateStatus&&o?this.getValidateStatus():a.validateStatus,l="";return r&&(l=(0,f.default)({"has-feedback":a.hasFeedback||"validating"===r,"has-success":"success"===r,"has-warning":"warning"===r,"has-error":"error"===r,"is-validating":"validating"===r})),d.default.createElement("div",{className:this.props.prefixCls+"-item-control "+l},e,t,n)}},{key:"renderWrapper",value:function renderWrapper(e){var t=this.props,n=t.prefixCls,a=t.wrapperCol,r=(0,f.default)(n+"-item-control-wrapper",a&&a.className);return d.default.createElement(v.default,(0,o.default)({},a,{className:r,key:"wrapper"}),e)}},{key:"isRequired",value:function isRequired(){var e=this.props.required;return void 0!==e?e:!!this.getOnlyControl()&&((this.getMeta()||{}).validate||[]).filter(function(e){return!!e.rules}).some(function(e){return e.rules.some(function(e){return e.required})})}},{key:"renderLabel",value:function renderLabel(){var e=this.props,t=e.prefixCls,n=e.label,r=e.labelCol,l=e.colon,i=e.id,u=e.formType,s=this.context,c=this.isRequired(),p=(0,f.default)(r&&r.className,"compact"===u?t+"-item-label-compact":t+"-item-label"),m=(0,f.default)((0,a.default)({},t+"-item-required",c)),h=n;return l&&!s.vertical&&"string"==typeof n&&""!==n.trim()&&(h=n.replace(/[：|:]\s*$/,"")),n?d.default.createElement(v.default,(0,o.default)({},r,{className:p,key:"label"}),d.default.createElement("label",{htmlFor:i||this.getId(),className:m,title:"string"==typeof n?n:"",onClick:this.onLabelClick},h)):null}},{key:"renderChildren",value:function renderChildren(){var e=this.props.children;return[this.renderLabel(),this.renderWrapper(this.renderValidateWrapper(e,this.renderHelp(),this.renderExtra()))]}},{key:"renderFormItem",value:function renderFormItem(e){var t,n=this.props,o=n.prefixCls,r=n.style,l=(t={},(0,a.default)(t,o+"-item",!0),(0,a.default)(t,o+"-item-with-help",!!this.getHelpMsg()),(0,a.default)(t,o+"-item-no-colon",!n.colon),(0,a.default)(t,""+n.className,!!n.className),(0,a.default)(t,o+"-item-compact","compact"===n.formType),t);return d.default.createElement(g.default,{className:(0,f.default)(l),style:r},e)}},{key:"render",value:function render(){var e=this.renderChildren();return this.renderFormItem(e)}}]),FormItem}(d.default.Component);C.defaultProps={hasFeedback:!1,prefixCls:"idoll-form",colon:!0},C.propTypes={prefixCls:p.default.string,label:p.default.oneOfType([p.default.string,p.default.node]),labelCol:p.default.object,help:p.default.oneOfType([p.default.node,p.default.bool]),validateStatus:p.default.oneOf(["","success","warning","error","validating"]),hasFeedback:p.default.bool,wrapperCol:p.default.object,className:p.default.string,id:p.default.string,children:p.default.node,colon:p.default.bool,extra:p.default.node,vertical:p.default.bool,formType:p.default.string},C.contextTypes={vertical:p.default.bool},t.default=C},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});t.FIELD_META_PROP="data-__meta",t.FIELD_DATA_PROP="data-__field"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(6)),d=_interopRequireDefault(n(1)),c=n(199),p=_interopRequireDefault(n(76)),f=_interopRequireDefault(n(0)),m=_interopRequireDefault(n(8));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var h=function(e){function MenuItem(){var e,t,n,a;(0,l.default)(this,MenuItem);for(var o=arguments.length,i=Array(o),s=0;s<o;s++)i[s]=arguments[s];return t=n=(0,u.default)(this,(e=MenuItem.__proto__||(0,r.default)(MenuItem)).call.apply(e,[this].concat(i))),n.onKeyDown=function(e){n.menuItem.onKeyDown(e)},n.saveMenuItem=function(e){n.menuItem=e},a=t,(0,u.default)(n,a)}return(0,s.default)(MenuItem,e),(0,i.default)(MenuItem,[{key:"render",value:function render(){var e,t=this.context,n=t.mode,r=t.idollMenuTheme,l=this.props,i=l.level,u=l.rootPrefixCls,s=l.children,f=(0,m.default)((e={},(0,o.default)(e,u+"-inline-collapsed-tooltip","vertical"===n&&1===i),(0,o.default)(e,u+"-theme-"+r,r),e));return"vertical"===n&&1===i?d.default.createElement(p.default,{title:s,placement:"right",overlayClassName:f},d.default.createElement(c.Item,(0,a.default)({},this.props,{ref:this.saveMenuItem}))):d.default.createElement(c.Item,(0,a.default)({},this.props,{ref:this.saveMenuItem}))}}]),MenuItem}(d.default.Component);h.propTypes={disabled:f.default.bool,indexkey:f.default.string},h.contextTypes={mode:f.default.string,idollMenuTheme:f.default.string},h.isMenuItem=1,t.default=h},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=_interopRequireDefault(n(1)),d=n(199),c=_interopRequireDefault(n(0)),p=_interopRequireDefault(n(8));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var f=function(e){function SubMenu(){var e,t,n,a;(0,r.default)(this,SubMenu);for(var l=arguments.length,u=Array(l),s=0;s<l;s++)u[s]=arguments[s];return t=n=(0,i.default)(this,(e=SubMenu.__proto__||(0,o.default)(SubMenu)).call.apply(e,[this].concat(u))),n.onKeyDown=function(e){n.subMenu.onKeyDown(e)},n.saveSubMenu=function(e){n.subMenu=e},a=t,(0,i.default)(n,a)}return(0,u.default)(SubMenu,e),(0,l.default)(SubMenu,[{key:"render",value:function render(){var e=this.props,t=e.rootPrefixCls,n=e.className;return s.default.createElement(d.SubMenu,(0,a.default)({},this.props,{ref:this.saveSubMenu,popupClassName:(0,p.default)(t+"-"+this.context.idollMenuTheme,n)}))}}]),SubMenu}(s.default.Component);f.propTypes={disabled:c.default.bool,indexkey:c.default.string,children:c.default.array,onTitleClick:c.default.func},f.contextTypes={idollMenuTheme:c.default.string},t.default=f},,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=_interopRequireDefault(n(1)),d=_interopRequireDefault(n(1940)),c=_interopRequireDefault(n(118)),p=_interopRequireDefault(n(75));n(1679);var f=_interopRequireDefault(n(0));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function noop(){}var m=void 0,h=void 0,g=function(e){function Modal(){var e,t,n,a;(0,r.default)(this,Modal);for(var l=arguments.length,u=Array(l),s=0;s<l;s++)u[s]=arguments[s];return t=n=(0,i.default)(this,(e=Modal.__proto__||(0,o.default)(Modal)).call.apply(e,[this].concat(u))),n.state={confirmLoading:!1},n.handleCancel=function(e){n.props.onCancel(e)},n.handleOk=function(){n.props.onOk(),n.setState({confirmLoading:!0})},a=t,(0,i.default)(n,a)}return(0,u.default)(Modal,e),(0,l.default)(Modal,[{key:"componentDidMount",value:function componentDidMount(){h||((0,c.default)(document.documentElement,"click",function(e){m={x:e.pageX,y:e.pageY},setTimeout(function(){return m=null},20)}),h=!0)}},{key:"render",value:function render(){var e=this.props,t=e.style,n=e.okText,o=e.confirmLoading,r=e.cancelText,l=e.footer,i=e.visible;this.context.idollLocale&&this.context.idollLocale.Modal&&(n=n||this.context.idollLocale.Modal.okText,r=r||this.context.idollLocale.Modal.cancelText);var u=[s.default.createElement(p.default,{key:"cancel",onClick:this.handleCancel},r||"取消"),s.default.createElement(p.default,{key:"confirm",type:"primary",className:o?"loading":"",loading:o,onClick:this.handleOk},n||"确定")];return s.default.createElement(d.default,(0,a.default)({onClose:this.handleCancel,footer:l||u},this.props,{style:t,visible:i,mousePosition:m}))}}]),Modal}(s.default.Component);g.defaultProps={prefixCls:"idoll-modal",onOk:noop,onCancel:noop,transitionName:"zoom",maskTransitionName:"fade",visible:!1},g.propTypes={prefixCls:f.default.string,onOk:f.default.func,onCancel:f.default.func,okText:f.default.node,cancelText:f.default.node,width:f.default.oneOfType([f.default.number,f.default.string]),confirmLoading:f.default.bool,visible:f.default.bool,align:f.default.object,footer:f.default.node,title:f.default.node,closable:f.default.bool},g.contextTypes={idollLocale:f.default.object},t.default=g},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=_interopRequireDefault(n(1)),d=_interopRequireDefault(n(98));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function MiniSelect(){return(0,r.default)(this,MiniSelect),(0,i.default)(this,(MiniSelect.__proto__||(0,o.default)(MiniSelect)).apply(this,arguments))}return(0,u.default)(MiniSelect,e),(0,l.default)(MiniSelect,[{key:"render",value:function render(){return s.default.createElement(d.default,(0,a.default)({size:"small"},this.props))}}]),MiniSelect}(s.default.Component);c.Option=d.default.Option,t.default=c},function(e,t,n){"use strict";n(192),n(1685),n(190),n(101)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(671));t.default=a.default},,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(15)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=_interopRequireDefault(n(1)),p=_interopRequireDefault(n(8)),f=_interopRequireDefault(n(0));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var m=function(e){function TimelineItem(){return(0,i.default)(this,TimelineItem),(0,s.default)(this,(TimelineItem.__proto__||(0,l.default)(TimelineItem)).apply(this,arguments))}return(0,d.default)(TimelineItem,e),(0,u.default)(TimelineItem,[{key:"render",value:function render(){var e,t,n=this.props,l=n.prefixCls,i=n.color,u=n.last,s=n.children,d=n.pending,f=n.className,m=n.dot,h=(0,r.default)(n,["prefixCls","color","last","children","pending","className","dot"]),g=(0,p.default)((e={},(0,o.default)(e,l+"-item",!0),(0,o.default)(e,l+"-item-last",u),(0,o.default)(e,l+"-item-pending",d),(0,o.default)(e,f,f),e)),v=(0,p.default)((t={},(0,o.default)(t,l+"-item-head",!0),(0,o.default)(t,l+"-item-head-custom",m),(0,o.default)(t,l+"-item-head-"+i,!0),t));return c.default.createElement("li",(0,a.default)({},h,{className:g}),c.default.createElement("div",{className:l+"-item-tail"}),c.default.createElement("div",{className:v,style:{borderColor:/blue|red|green/.test(i)?null:i}},m),c.default.createElement("div",{className:l+"-item-content"},s))}}]),TimelineItem}(c.default.Component);m.defaultProps={prefixCls:"idoll-timeline",color:"blue",last:!1,pending:!1},m.propTypes={prefixCls:f.default.string,color:f.default.string,last:f.default.bool,pending:f.default.bool,className:f.default.string,dot:f.default.node},t.default=m},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=_interopRequireDefault(n(17)),d=_interopRequireDefault(n(100));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var c=function(e){function Search(){var e,t,n,r;(0,o.default)(this,Search);for(var i=arguments.length,u=Array(i),s=0;s<i;s++)u[s]=arguments[s];return t=n=(0,l.default)(this,(e=Search.__proto__||(0,a.default)(Search)).call.apply(e,[this].concat(u))),n.handleChange=function(e){var t=n.props.onChange;t&&t(e)},n.handleClear=function(e){e.preventDefault();var t=n.props.handleClear;t&&t(e)},r=t,(0,l.default)(n,r)}return(0,i.default)(Search,e),(0,r.default)(Search,[{key:"render",value:function render(){var e=this.props,t=e.placeholder,n=e.value,a=e.prefixCls,o=n&&n.length>0?u.default.createElement("a",{href:"#",className:a+"-action",onClick:this.handleClear},u.default.createElement(s.default,{type:"close-circle"})):u.default.createElement("span",{className:a+"-action"},u.default.createElement(s.default,{type:"search"}));return u.default.createElement("div",null,u.default.createElement(d.default,{placeholder:t,className:a,value:n,ref:"input",onChange:this.handleChange}),o)}}]),Search}(u.default.Component);c.defaultProps={placeholder:""},t.default=c},,,,,,,,,,,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(9));t.ComponentsListRenderer=ComponentsListRenderer;var o=_interopRequireDefault(n(1)),r=_interopRequireDefault(n(0)),l=_interopRequireDefault(n(8)),i=_interopRequireDefault(n(686)),u=_interopRequireDefault(n(18)),s=n(1022);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function ComponentsListRenderer(e){var t=e.classes,n=e.items;if(!(n=n.filter(function(e){return e.visibleName})).length)return null;var a=window.location.pathname+(0,s.getHash)(window.location.hash);return o.default.createElement("ul",{className:t.list},n.map(function(e){var n=e.heading,r=e.visibleName,u=e.href,d=e.content,c=e.external,p=(0,s.hasInHash)(a,u);return o.default.createElement("li",{className:(0,l.default)(t.item,(!d||!d.props.items.length)&&t.isChild,p&&t.isSelected),key:u},o.default.createElement(i.default,{className:(0,l.default)(n&&t.heading),href:u,target:c?"_blank":void 0},r),d)}))}ComponentsListRenderer.propTypes={items:r.default.array.isRequired,classes:r.default.object.isRequired},t.default=(0,u.default)(function styles(e){var t=e.color,n=e.fontFamily,o=e.fontSize,r=e.space,l=e.mq;return{list:{margin:"0 0 8px 0",paddingLeft:0},item:{color:t.base,display:"block",fontFamily:n.base,fontSize:o.base,listStyle:"none",overflow:"hidden",textOverflow:"ellipsis"},isChild:(0,a.default)({margin:0,height:"40px",lineHeight:"40px"},l.small,{display:"inline-block"}),heading:{color:"#999",marginTop:r[1],fontFamily:n.base,fontWeight:"bold"}}})(ComponentsListRenderer)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.TableOfContentsRenderer=TableOfContentsRenderer;var a=_interopRequireDefault(n(1)),o=_interopRequireDefault(n(0)),r=_interopRequireDefault(n(18));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function TableOfContentsRenderer(e){var t=e.classes,n=e.children,o=e.searchTerm,r=e.onSearchTermChange;return a.default.createElement(a.default.Fragment,null,a.default.createElement("div",{className:t.search},a.default.createElement("input",{value:o,className:t.input,placeholder:"在dbox-ui中搜索","aria-label":"在dbox-ui中搜索",onChange:function onChange(e){return r(e.target.value)}})),a.default.createElement("nav",null,n))}TableOfContentsRenderer.propTypes={classes:o.default.object.isRequired,children:o.default.node,searchTerm:o.default.string.isRequired,onSearchTermChange:o.default.func.isRequired},t.default=(0,r.default)(function styles(e){var t=e.space,n=e.color,a=e.fontFamily,o=e.fontSize,r=e.borderRadius;return{search:{padding:"24px 16px 8px 0"},input:{display:"block",width:"100%",padding:t[1],color:n.base,backgroundColor:n.baseBackground,fontFamily:a.base,fontSize:o.base,border:[[1,n.border,"solid"]],borderRadius:r,transition:"all ease-in-out .1s","&:focus":{isolate:!1,borderColor:n.link,boxShadow:[[0,0,0,2,n.focus]],outline:0},"&::placeholder":{isolate:!1,fontFamily:a.base,fontSize:o.base,color:"#dedede"}}}})(TableOfContentsRenderer)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(9));t.StyleGuideRenderer=StyleGuideRenderer;var o=_interopRequireDefault(n(1)),r=_interopRequireDefault(n(0)),l=_interopRequireDefault(n(1028)),i=_interopRequireDefault(n(18));_interopRequireDefault(n(1030));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function StyleGuideRenderer(e){var t=e.classes,n=e.title,a=e.children,r=e.toc;return o.default.createElement("div",{className:t.root},o.default.createElement("header",{className:t.header},o.default.createElement("div",{className:t.bar},o.default.createElement(l.default,null,n),o.default.createElement("nav",{className:t.nav},o.default.createElement("a",{className:t.headerLink,href:"index.html"},"首页"),o.default.createElement("a",{className:t.headerLink,href:"design.html"},"设计原则"),o.default.createElement("a",{className:t.headerLink,href:"doc.html",style:{color:"#13B886",cursor:"pointer",height:"64px",display:"inline-block",borderBottom:"3px solid #13B886"}},"组件文档"),o.default.createElement("a",{className:t.headerLink,href:"resource.html"},"设计资源")))),o.default.createElement("div",{className:t.mainCont},o.default.createElement("aside",{className:t.sidebar},r),o.default.createElement("main",{className:t.content},o.default.createElement("div",{className:t.innerCont},a))))}StyleGuideRenderer.propTypes={classes:r.default.object.isRequired,title:r.default.string.isRequired,children:r.default.node.isRequired},t.default=(0,i.default)(function styles(e){var t,n=e.mq;return{root:{minHeight:"100vh",backgroundColor:"#fff"},header:{position:"fixed",top:0,left:0,bottom:0,width:"100%",height:"64px",zIndex:"1",lineHeight:"64px",background:"rgba(255,255,255,1)"},bar:(0,a.default)({padding:"0 120px",height:"64px",margin:"0 auto",display:"flex",alignItems:"center"},"@media (max-width: 600px)",{flexDirection:"column",alignItems:"center"}),nav:{marginLeft:"auto"},mainCont:{width:"90%",margin:"100px auto 0",minWidth:"640px"},sidebar:(t={borderRight:"1px solid #eaeefb",minWidth:"120px",position:"fixed",top:"10px",left:"5%",marginRight:"-16%",marginTop:"72px",paddingBottom:"100px",width:"16%",overflowY:"scroll",height:"100%",WebkitOverflowScrolling:"touch"},(0,a.default)(t,n.small,{position:"static",width:"auto",borderWidth:[[1,0,0,0]],paddingBottom:"20"}),(0,a.default)(t,"& search",{marginTop:"64px"}),t),content:{width:"100%"},innerCont:{marginLeft:"22%"},footer:{display:"flex",alignItems:"middle",height:"50px",lineHeight:"50px",backgroundColor:"#000",marginLeft:"18%",paddingLeft:"calc(78%/2)","& > a":{color:"#fff",display:"block",cursor:"pointer"}},images:{width:"22px",margin:"0 8px",verticalAlign:"middle"},aboutUs:{marginRight:"20px"},headerLink:{"&":{display:"inline-block",color:"rgba(0,0,0,.6)",width:"80px",fontSize:"14px",fontWeight:"400",textAlign:"center"},"&:hover, &:active":{color:"#13B886",textAlign:"center",width:"80px",cursor:"pointer",height:"64px",display:"inline-block"}}}})(StyleGuideRenderer)},,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(235)),o=_interopRequireDefault(n(1)),r=_interopRequireDefault(n(0)),l=_interopRequireDefault(n(8)),i=_interopRequireDefault(n(18)),u=_interopRequireDefault(n(735));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function SectionHeadingRenderer(e){var t=e.classes,n=e.children,r=(0,l.default)(t.sectionName),i=!0,s=!1,d=void 0;try{for(var c,p=(0,a.default)(["GetStarted","Version","Color","Typography"].values());!(i=(c=p.next()).done);i=!0){if(n===c.value)return o.default.createElement("div",{className:t.wrapper},o.default.createElement("h3",{className:r},u.default[n]))}}catch(e){s=!0,d=e}finally{try{!i&&p.return&&p.return()}finally{if(s)throw d}}return o.default.createElement("div",{className:t.wrapper},o.default.createElement("h3",{className:r},n," ",u.default[n]))}SectionHeadingRenderer.propTypes={classes:r.default.object.isRequired,children:r.default.node},t.default=(0,i.default)(function styles(){return{wrapper:{display:"flex",flexDirection:"row",alignItems:"center"}}})(SectionHeadingRenderer)},,,,,,,,,,function(e,t,n){e.exports=n(1925)},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.getParameterByName=t.getHashAsArray=t.getHash=t.hasInHash=void 0;var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(687));var o="#/",r=/(.*)\?/;function trimHash(e,t){if(!e)return"";var n=new RegExp("^"+(0,a.default)(t||o),"g");return e.replace(n,"")}var l=function trimParams(e){var t=r.exec(e);return t&&t[1]||e},i=(t.hasInHash=function hasInHash(e,t){return""!==e&&e.indexOf(t)>-1},t.getHash=function getHash(e,t){return decodeURIComponent(l(trimHash(e,t)))});t.getHashAsArray=function getHashAsArray(e,t){return i(e,t).split("/")},t.getParameterByName=function getParameterByName(e,t){t=t.replace(/[[\]]/g,"\\$&");var n=new RegExp("[?&]"+t+"(=([^&#]*)|&|#|$)").exec(e);return n?n[2]?decodeURIComponent(n[2].replace(/\+/g," ")):"":null}},,,,,,,function(e,t,n){e.exports=n.p+"eee43608d447a591378a712950b7b638.png"},function(e,t,n){e.exports=n.p+"ed796b6a8a1535084f2367d584ffcef8.png"},,,,,,,,,,,,,,,function(e,t,n){var a={"./Binary_Property/ASCII.js":1046,"./Binary_Property/ASCII_Hex_Digit.js":1047,"./Binary_Property/Alphabetic.js":1048,"./Binary_Property/Any.js":1049,"./Binary_Property/Assigned.js":1050,"./Binary_Property/Bidi_Control.js":1051,"./Binary_Property/Bidi_Mirrored.js":1052,"./Binary_Property/Case_Ignorable.js":1053,"./Binary_Property/Cased.js":1054,"./Binary_Property/Changes_When_Casefolded.js":1055,"./Binary_Property/Changes_When_Casemapped.js":1056,"./Binary_Property/Changes_When_Lowercased.js":1057,"./Binary_Property/Changes_When_NFKC_Casefolded.js":1058,"./Binary_Property/Changes_When_Titlecased.js":1059,"./Binary_Property/Changes_When_Uppercased.js":1060,"./Binary_Property/Dash.js":1061,"./Binary_Property/Default_Ignorable_Code_Point.js":1062,"./Binary_Property/Deprecated.js":1063,"./Binary_Property/Diacritic.js":1064,"./Binary_Property/Emoji.js":1065,"./Binary_Property/Emoji_Component.js":1066,"./Binary_Property/Emoji_Modifier.js":1067,"./Binary_Property/Emoji_Modifier_Base.js":1068,"./Binary_Property/Emoji_Presentation.js":1069,"./Binary_Property/Extended_Pictographic.js":1070,"./Binary_Property/Extender.js":1071,"./Binary_Property/Grapheme_Base.js":1072,"./Binary_Property/Grapheme_Extend.js":1073,"./Binary_Property/Hex_Digit.js":1074,"./Binary_Property/IDS_Binary_Operator.js":1075,"./Binary_Property/IDS_Trinary_Operator.js":1076,"./Binary_Property/ID_Continue.js":1077,"./Binary_Property/ID_Start.js":1078,"./Binary_Property/Ideographic.js":1079,"./Binary_Property/Join_Control.js":1080,"./Binary_Property/Logical_Order_Exception.js":1081,"./Binary_Property/Lowercase.js":1082,"./Binary_Property/Math.js":1083,"./Binary_Property/Noncharacter_Code_Point.js":1084,"./Binary_Property/Pattern_Syntax.js":1085,"./Binary_Property/Pattern_White_Space.js":1086,"./Binary_Property/Quotation_Mark.js":1087,"./Binary_Property/Radical.js":1088,"./Binary_Property/Regional_Indicator.js":1089,"./Binary_Property/Sentence_Terminal.js":1090,"./Binary_Property/Soft_Dotted.js":1091,"./Binary_Property/Terminal_Punctuation.js":1092,"./Binary_Property/Unified_Ideograph.js":1093,"./Binary_Property/Uppercase.js":1094,"./Binary_Property/Variation_Selector.js":1095,"./Binary_Property/White_Space.js":1096,"./Binary_Property/XID_Continue.js":1097,"./Binary_Property/XID_Start.js":1098,"./General_Category/Cased_Letter.js":1099,"./General_Category/Close_Punctuation.js":1100,"./General_Category/Connector_Punctuation.js":1101,"./General_Category/Control.js":1102,"./General_Category/Currency_Symbol.js":1103,"./General_Category/Dash_Punctuation.js":1104,"./General_Category/Decimal_Number.js":1105,"./General_Category/Enclosing_Mark.js":1106,"./General_Category/Final_Punctuation.js":1107,"./General_Category/Format.js":1108,"./General_Category/Initial_Punctuation.js":1109,"./General_Category/Letter.js":1110,"./General_Category/Letter_Number.js":1111,"./General_Category/Line_Separator.js":1112,"./General_Category/Lowercase_Letter.js":1113,"./General_Category/Mark.js":1114,"./General_Category/Math_Symbol.js":1115,"./General_Category/Modifier_Letter.js":1116,"./General_Category/Modifier_Symbol.js":1117,"./General_Category/Nonspacing_Mark.js":1118,"./General_Category/Number.js":1119,"./General_Category/Open_Punctuation.js":1120,"./General_Category/Other.js":1121,"./General_Category/Other_Letter.js":1122,"./General_Category/Other_Number.js":1123,"./General_Category/Other_Punctuation.js":1124,"./General_Category/Other_Symbol.js":1125,"./General_Category/Paragraph_Separator.js":1126,"./General_Category/Private_Use.js":1127,"./General_Category/Punctuation.js":1128,"./General_Category/Separator.js":1129,"./General_Category/Space_Separator.js":1130,"./General_Category/Spacing_Mark.js":1131,"./General_Category/Surrogate.js":1132,"./General_Category/Symbol.js":1133,"./General_Category/Titlecase_Letter.js":1134,"./General_Category/Unassigned.js":1135,"./General_Category/Uppercase_Letter.js":1136,"./Script/Adlam.js":1137,"./Script/Ahom.js":1138,"./Script/Anatolian_Hieroglyphs.js":1139,"./Script/Arabic.js":1140,"./Script/Armenian.js":1141,"./Script/Avestan.js":1142,"./Script/Balinese.js":1143,"./Script/Bamum.js":1144,"./Script/Bassa_Vah.js":1145,"./Script/Batak.js":1146,"./Script/Bengali.js":1147,"./Script/Bhaiksuki.js":1148,"./Script/Bopomofo.js":1149,"./Script/Brahmi.js":1150,"./Script/Braille.js":1151,"./Script/Buginese.js":1152,"./Script/Buhid.js":1153,"./Script/Canadian_Aboriginal.js":1154,"./Script/Carian.js":1155,"./Script/Caucasian_Albanian.js":1156,"./Script/Chakma.js":1157,"./Script/Cham.js":1158,"./Script/Cherokee.js":1159,"./Script/Common.js":1160,"./Script/Coptic.js":1161,"./Script/Cuneiform.js":1162,"./Script/Cypriot.js":1163,"./Script/Cyrillic.js":1164,"./Script/Deseret.js":1165,"./Script/Devanagari.js":1166,"./Script/Dogra.js":1167,"./Script/Duployan.js":1168,"./Script/Egyptian_Hieroglyphs.js":1169,"./Script/Elbasan.js":1170,"./Script/Elymaic.js":1171,"./Script/Ethiopic.js":1172,"./Script/Georgian.js":1173,"./Script/Glagolitic.js":1174,"./Script/Gothic.js":1175,"./Script/Grantha.js":1176,"./Script/Greek.js":1177,"./Script/Gujarati.js":1178,"./Script/Gunjala_Gondi.js":1179,"./Script/Gurmukhi.js":1180,"./Script/Han.js":1181,"./Script/Hangul.js":1182,"./Script/Hanifi_Rohingya.js":1183,"./Script/Hanunoo.js":1184,"./Script/Hatran.js":1185,"./Script/Hebrew.js":1186,"./Script/Hiragana.js":1187,"./Script/Imperial_Aramaic.js":1188,"./Script/Inherited.js":1189,"./Script/Inscriptional_Pahlavi.js":1190,"./Script/Inscriptional_Parthian.js":1191,"./Script/Javanese.js":1192,"./Script/Kaithi.js":1193,"./Script/Kannada.js":1194,"./Script/Katakana.js":1195,"./Script/Kayah_Li.js":1196,"./Script/Kharoshthi.js":1197,"./Script/Khmer.js":1198,"./Script/Khojki.js":1199,"./Script/Khudawadi.js":1200,"./Script/Lao.js":1201,"./Script/Latin.js":1202,"./Script/Lepcha.js":1203,"./Script/Limbu.js":1204,"./Script/Linear_A.js":1205,"./Script/Linear_B.js":1206,"./Script/Lisu.js":1207,"./Script/Lycian.js":1208,"./Script/Lydian.js":1209,"./Script/Mahajani.js":1210,"./Script/Makasar.js":1211,"./Script/Malayalam.js":1212,"./Script/Mandaic.js":1213,"./Script/Manichaean.js":1214,"./Script/Marchen.js":1215,"./Script/Masaram_Gondi.js":1216,"./Script/Medefaidrin.js":1217,"./Script/Meetei_Mayek.js":1218,"./Script/Mende_Kikakui.js":1219,"./Script/Meroitic_Cursive.js":1220,"./Script/Meroitic_Hieroglyphs.js":1221,"./Script/Miao.js":1222,"./Script/Modi.js":1223,"./Script/Mongolian.js":1224,"./Script/Mro.js":1225,"./Script/Multani.js":1226,"./Script/Myanmar.js":1227,"./Script/Nabataean.js":1228,"./Script/Nandinagari.js":1229,"./Script/New_Tai_Lue.js":1230,"./Script/Newa.js":1231,"./Script/Nko.js":1232,"./Script/Nushu.js":1233,"./Script/Nyiakeng_Puachue_Hmong.js":1234,"./Script/Ogham.js":1235,"./Script/Ol_Chiki.js":1236,"./Script/Old_Hungarian.js":1237,"./Script/Old_Italic.js":1238,"./Script/Old_North_Arabian.js":1239,"./Script/Old_Permic.js":1240,"./Script/Old_Persian.js":1241,"./Script/Old_Sogdian.js":1242,"./Script/Old_South_Arabian.js":1243,"./Script/Old_Turkic.js":1244,"./Script/Oriya.js":1245,"./Script/Osage.js":1246,"./Script/Osmanya.js":1247,"./Script/Pahawh_Hmong.js":1248,"./Script/Palmyrene.js":1249,"./Script/Pau_Cin_Hau.js":1250,"./Script/Phags_Pa.js":1251,"./Script/Phoenician.js":1252,"./Script/Psalter_Pahlavi.js":1253,"./Script/Rejang.js":1254,"./Script/Runic.js":1255,"./Script/Samaritan.js":1256,"./Script/Saurashtra.js":1257,"./Script/Sharada.js":1258,"./Script/Shavian.js":1259,"./Script/Siddham.js":1260,"./Script/SignWriting.js":1261,"./Script/Sinhala.js":1262,"./Script/Sogdian.js":1263,"./Script/Sora_Sompeng.js":1264,"./Script/Soyombo.js":1265,"./Script/Sundanese.js":1266,"./Script/Syloti_Nagri.js":1267,"./Script/Syriac.js":1268,"./Script/Tagalog.js":1269,"./Script/Tagbanwa.js":1270,"./Script/Tai_Le.js":1271,"./Script/Tai_Tham.js":1272,"./Script/Tai_Viet.js":1273,"./Script/Takri.js":1274,"./Script/Tamil.js":1275,"./Script/Tangut.js":1276,"./Script/Telugu.js":1277,"./Script/Thaana.js":1278,"./Script/Thai.js":1279,"./Script/Tibetan.js":1280,"./Script/Tifinagh.js":1281,"./Script/Tirhuta.js":1282,"./Script/Ugaritic.js":1283,"./Script/Vai.js":1284,"./Script/Wancho.js":1285,"./Script/Warang_Citi.js":1286,"./Script/Yi.js":1287,"./Script/Zanabazar_Square.js":1288,"./Script_Extensions/Adlam.js":1289,"./Script_Extensions/Ahom.js":1290,"./Script_Extensions/Anatolian_Hieroglyphs.js":1291,"./Script_Extensions/Arabic.js":1292,"./Script_Extensions/Armenian.js":1293,"./Script_Extensions/Avestan.js":1294,"./Script_Extensions/Balinese.js":1295,"./Script_Extensions/Bamum.js":1296,"./Script_Extensions/Bassa_Vah.js":1297,"./Script_Extensions/Batak.js":1298,"./Script_Extensions/Bengali.js":1299,"./Script_Extensions/Bhaiksuki.js":1300,"./Script_Extensions/Bopomofo.js":1301,"./Script_Extensions/Brahmi.js":1302,"./Script_Extensions/Braille.js":1303,"./Script_Extensions/Buginese.js":1304,"./Script_Extensions/Buhid.js":1305,"./Script_Extensions/Canadian_Aboriginal.js":1306,"./Script_Extensions/Carian.js":1307,"./Script_Extensions/Caucasian_Albanian.js":1308,"./Script_Extensions/Chakma.js":1309,"./Script_Extensions/Cham.js":1310,"./Script_Extensions/Cherokee.js":1311,"./Script_Extensions/Common.js":1312,"./Script_Extensions/Coptic.js":1313,"./Script_Extensions/Cuneiform.js":1314,"./Script_Extensions/Cypriot.js":1315,"./Script_Extensions/Cyrillic.js":1316,"./Script_Extensions/Deseret.js":1317,"./Script_Extensions/Devanagari.js":1318,"./Script_Extensions/Dogra.js":1319,"./Script_Extensions/Duployan.js":1320,"./Script_Extensions/Egyptian_Hieroglyphs.js":1321,"./Script_Extensions/Elbasan.js":1322,"./Script_Extensions/Elymaic.js":1323,"./Script_Extensions/Ethiopic.js":1324,"./Script_Extensions/Georgian.js":1325,"./Script_Extensions/Glagolitic.js":1326,"./Script_Extensions/Gothic.js":1327,"./Script_Extensions/Grantha.js":1328,"./Script_Extensions/Greek.js":1329,"./Script_Extensions/Gujarati.js":1330,"./Script_Extensions/Gunjala_Gondi.js":1331,"./Script_Extensions/Gurmukhi.js":1332,"./Script_Extensions/Han.js":1333,"./Script_Extensions/Hangul.js":1334,"./Script_Extensions/Hanifi_Rohingya.js":1335,"./Script_Extensions/Hanunoo.js":1336,"./Script_Extensions/Hatran.js":1337,"./Script_Extensions/Hebrew.js":1338,"./Script_Extensions/Hiragana.js":1339,"./Script_Extensions/Imperial_Aramaic.js":1340,"./Script_Extensions/Inherited.js":1341,"./Script_Extensions/Inscriptional_Pahlavi.js":1342,"./Script_Extensions/Inscriptional_Parthian.js":1343,"./Script_Extensions/Javanese.js":1344,"./Script_Extensions/Kaithi.js":1345,"./Script_Extensions/Kannada.js":1346,"./Script_Extensions/Katakana.js":1347,"./Script_Extensions/Kayah_Li.js":1348,"./Script_Extensions/Kharoshthi.js":1349,"./Script_Extensions/Khmer.js":1350,"./Script_Extensions/Khojki.js":1351,"./Script_Extensions/Khudawadi.js":1352,"./Script_Extensions/Lao.js":1353,"./Script_Extensions/Latin.js":1354,"./Script_Extensions/Lepcha.js":1355,"./Script_Extensions/Limbu.js":1356,"./Script_Extensions/Linear_A.js":1357,"./Script_Extensions/Linear_B.js":1358,"./Script_Extensions/Lisu.js":1359,"./Script_Extensions/Lycian.js":1360,"./Script_Extensions/Lydian.js":1361,"./Script_Extensions/Mahajani.js":1362,"./Script_Extensions/Makasar.js":1363,"./Script_Extensions/Malayalam.js":1364,"./Script_Extensions/Mandaic.js":1365,"./Script_Extensions/Manichaean.js":1366,"./Script_Extensions/Marchen.js":1367,"./Script_Extensions/Masaram_Gondi.js":1368,"./Script_Extensions/Medefaidrin.js":1369,"./Script_Extensions/Meetei_Mayek.js":1370,"./Script_Extensions/Mende_Kikakui.js":1371,"./Script_Extensions/Meroitic_Cursive.js":1372,"./Script_Extensions/Meroitic_Hieroglyphs.js":1373,"./Script_Extensions/Miao.js":1374,"./Script_Extensions/Modi.js":1375,"./Script_Extensions/Mongolian.js":1376,"./Script_Extensions/Mro.js":1377,"./Script_Extensions/Multani.js":1378,"./Script_Extensions/Myanmar.js":1379,"./Script_Extensions/Nabataean.js":1380,"./Script_Extensions/Nandinagari.js":1381,"./Script_Extensions/New_Tai_Lue.js":1382,"./Script_Extensions/Newa.js":1383,"./Script_Extensions/Nko.js":1384,"./Script_Extensions/Nushu.js":1385,"./Script_Extensions/Nyiakeng_Puachue_Hmong.js":1386,"./Script_Extensions/Ogham.js":1387,"./Script_Extensions/Ol_Chiki.js":1388,"./Script_Extensions/Old_Hungarian.js":1389,"./Script_Extensions/Old_Italic.js":1390,"./Script_Extensions/Old_North_Arabian.js":1391,"./Script_Extensions/Old_Permic.js":1392,"./Script_Extensions/Old_Persian.js":1393,"./Script_Extensions/Old_Sogdian.js":1394,"./Script_Extensions/Old_South_Arabian.js":1395,"./Script_Extensions/Old_Turkic.js":1396,"./Script_Extensions/Oriya.js":1397,"./Script_Extensions/Osage.js":1398,"./Script_Extensions/Osmanya.js":1399,"./Script_Extensions/Pahawh_Hmong.js":1400,"./Script_Extensions/Palmyrene.js":1401,"./Script_Extensions/Pau_Cin_Hau.js":1402,"./Script_Extensions/Phags_Pa.js":1403,"./Script_Extensions/Phoenician.js":1404,"./Script_Extensions/Psalter_Pahlavi.js":1405,"./Script_Extensions/Rejang.js":1406,"./Script_Extensions/Runic.js":1407,"./Script_Extensions/Samaritan.js":1408,"./Script_Extensions/Saurashtra.js":1409,"./Script_Extensions/Sharada.js":1410,"./Script_Extensions/Shavian.js":1411,"./Script_Extensions/Siddham.js":1412,"./Script_Extensions/SignWriting.js":1413,"./Script_Extensions/Sinhala.js":1414,"./Script_Extensions/Sogdian.js":1415,"./Script_Extensions/Sora_Sompeng.js":1416,"./Script_Extensions/Soyombo.js":1417,"./Script_Extensions/Sundanese.js":1418,"./Script_Extensions/Syloti_Nagri.js":1419,"./Script_Extensions/Syriac.js":1420,"./Script_Extensions/Tagalog.js":1421,"./Script_Extensions/Tagbanwa.js":1422,"./Script_Extensions/Tai_Le.js":1423,"./Script_Extensions/Tai_Tham.js":1424,"./Script_Extensions/Tai_Viet.js":1425,"./Script_Extensions/Takri.js":1426,"./Script_Extensions/Tamil.js":1427,"./Script_Extensions/Tangut.js":1428,"./Script_Extensions/Telugu.js":1429,"./Script_Extensions/Thaana.js":1430,"./Script_Extensions/Thai.js":1431,"./Script_Extensions/Tibetan.js":1432,"./Script_Extensions/Tifinagh.js":1433,"./Script_Extensions/Tirhuta.js":1434,"./Script_Extensions/Ugaritic.js":1435,"./Script_Extensions/Vai.js":1436,"./Script_Extensions/Wancho.js":1437,"./Script_Extensions/Warang_Citi.js":1438,"./Script_Extensions/Yi.js":1439,"./Script_Extensions/Zanabazar_Square.js":1440,"./index.js":1441,"./unicode-version.js":1442};function webpackContext(e){var t=webpackContextResolve(e);return n(t)}function webpackContextResolve(e){if(!n.o(a,e)){var t=new Error("Cannot find module '"+e+"'");throw t.code="MODULE_NOT_FOUND",t}return a[e]}webpackContext.keys=function webpackContextKeys(){return Object.keys(a)},webpackContext.resolve=webpackContextResolve,e.exports=webpackContext,webpackContext.id=1045},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){var a={react:n(1)},o=n(22).default.bind(null,a);n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);",o);e.exports=[{type:"markdown",content:'dbox-ui是一套基于React实现的PC端UI组件库，致力于高效的创建简约美观的产品体验。\n\n##### **特性**\n\n-   高效。打造丰富的、开箱即用的组件资源，拒绝重复造轮子；简化和优化工作流程，智能预测用户行为，让用户操作更自然。\n\n-   清晰。消除歧义，让人们直观的看到、理解并采取行动；页面结构清晰，信息层级一目了然。\n\n-   美观。提供细致入微和优雅​​协调的视觉表现，体现对用户的时间和工作的尊重。\n\n-   灵活。设计周全的布局，规整和模块化的信息排布，为多变的需求提供良好的扩展性。\n\n##### **环境**\n\n-   现代浏览器和IE11及以上\n-   React >= 15.6\n\n##### **安装**\n\n```jsx\nnpm install dbox<span class="token operator">-</span>ui <span class="token operator">--</span>save\n```\n\n##### **使用组件**\n\n```jsx\n<span class="token keyword">import</span> <span class="token punctuation">{</span> Button <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'dbox-ui\'</span><span class="token punctuation">;</span>\nReactDOM<span class="token punctuation">.</span><span class="token function">render</span><span class="token punctuation">(</span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Button</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">,</span> node<span class="token punctuation">)</span><span class="token punctuation">;</span>\n```\n\n##### **按需加载**\n\n```jsx\n<span class="token keyword">import</span>  Button  <span class="token keyword">from</span> <span class="token string">\'dbox-ui/lib/button\'</span><span class="token punctuation">;</span>\n<span class="token keyword">import</span> <span class="token string">\'dbox-ui/lib/button/style\'</span><span class="token punctuation">;</span>\n```\n\n引入样式:\n\n```jsx\n@<span class="token keyword">import</span> <span class="token operator">~</span>dbox<span class="token operator">-</span>ui<span class="token operator">/</span>dist<span class="token operator">/</span>css<span class="token operator">/</span>dbox<span class="token operator">-</span>ui<span class="token punctuation">.</span>main<span class="token punctuation">.</span>css\n```'}]},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/version":n(1778),react:n(1)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);",o);e.exports=[{type:"markdown",content:"#### **发布周期**\n\n-   修改版本号： 每周进行日常bugfix更新。\n-   每月发布一个带有新特性的向下兼容的版本。\n-   含有破坏性更新和新特性，不在发布周期内。\n\n#### **更新记录**"},{type:"code",content:"import { Version } from 'dbox-ui';\n\n<Version />",settings:{noeditor:!0},evalInContext:r},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport VersionView from '../prevPage/version';\n<div>\n   <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <VersionView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(9)),o=_interopRequireDefault(n(3)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(6)),d=_interopRequireDefault(n(1)),c=_interopRequireDefault(n(14)),p=_interopRequireDefault(n(0)),f=_interopRequireDefault(n(8)),m=_interopRequireDefault(n(74)),h=_interopRequireDefault(n(25)),g=_interopRequireDefault(n(33)),v=_interopRequireDefault(n(118)),y=_interopRequireDefault(n(257));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function getTargetRect(e){return e!==window&&1===e.nodeType?e.getBoundingClientRect():{top:0,left:0,bottom:0}}function getOffset(e,t){var n=e.getBoundingClientRect(),a=getTargetRect(t),o=(0,y.default)(t,!0),r=(0,y.default)(t,!1),l=window.document.body,i=l.clientTop||0,u=l.clientLeft||0;return{top:n.top-a.top+o+i,left:n.left-a.left+r+u,width:n.width,height:n.height}}function noop(){}function getDefaultTarget(){return"undefined"!=typeof window?window:null}n(1480);var b=function(e){function Affix(e){(0,l.default)(this,Affix);var t=(0,u.default)(this,(Affix.__proto__||(0,r.default)(Affix)).call(this,e));return t.events=["resize","scroll","touchstart","touchmove","pageshow","load"],t.eventHandlers={},t.state={affixStyle:void 0,placeholderStyle:void 0},t.componentWillReceiveProps=function(e){t.props.target!==e.target&&(t.clearEventListeners(),t.setTargetEventListeners(e.target),t.updatePosition({})),t.props.offsetTop===e.offsetTop&&t.props.offsetBottom===e.offsetBottom||t.updatePosition()},t.updatePosition=function(e){var n=t.props,a=n.offsetTop,r=n.offsetBottom,l=n.offset,i=(0,n.target)();a=a||l;var u=(0,y.default)(i,!0),s=c.default.findDOMNode(t),d=getOffset(c.default.findDOMNode(t),i),p=(t.fixedNode.offsetWidth,t.fixedNode.offsetHeight),f={top:!1,bottom:!1};"number"!=typeof a&&"number"!=typeof r?(f.top=!0,a=0):(f.top="number"==typeof a,f.bottom="number"==typeof r);var m=getTargetRect(i),h=i.innerHeight||i.clientHeight;if(u>d.top-a&&f.top)t.setAffixStyle(e,{position:"fixed",top:m.top+a,left:m.left+d.left,width:c.default.findDOMNode(t).offsetWidth}),t.setPlaceholderStyle(e,{width:c.default.findDOMNode(t).offsetWidth,height:c.default.findDOMNode(t).offsetHeight});else if(u>d.top+p+r-h&&f.bottom){var g=i===window?0:window.innerHeight-m.bottom,v=d.width;t.setAffixStyle(e,{position:"fixed",bottom:g+r,left:m.left+d.left,width:v}),t.setPlaceholderStyle({width:v,height:d.height})}else{var b=t.state.affixStyle;"resize"===e.type&&b&&"fixed"===b.position&&s.offsetWidth?t.setAffixStyle(e,(0,o.default)({},b,{width:s.offsetWidth})):t.setAffixStyle(e,null),t.setPlaceholderStyle(null)}},t.saveFixedNode=function(e){t.fixedNode=e},t.state={affixStyle:null,placeholderStyle:null},t}return(0,s.default)(Affix,e),(0,i.default)(Affix,[{key:"componentDidMount",value:function componentDidMount(){(0,h.default)(!("offset"in this.props),"'offset'属性已经被分离了，请用'offsetTop'代替");var e=this.props.target;this.setTargetEventListeners(e)}},{key:"componentWillUnmount",value:function componentWillUnmount(){this.clearEventListeners(),clearTimeout(this.timeout)}},{key:"setTargetEventListeners",value:function setTargetEventListeners(e){var t=this,n=e();n&&(this.clearEventListeners(),this.events.forEach(function(e){t.eventHandlers[e]=(0,v.default)(n,e,t.updatePosition)}))}},{key:"clearEventListeners",value:function clearEventListeners(){var e=this;this.events.forEach(function(t){var n=e.eventHandlers[t];n&&n.remove&&n.remove()})}},{key:"setAffixStyle",value:function setAffixStyle(e,t){var n=this,a=this.props,o=a.onChange,r=void 0===o?noop:o,l=a.target,i=void 0===l?getDefaultTarget:l,u=this.state.affixStyle,s=i()===window;"scroll"===e.type&&u&&t&&s||(0,g.default)(t,u)||this.setState({affixStyle:t},function(){var e=!!n.state.affixStyle;(t&&!u||!t&&u)&&r(e)})}},{key:"setPlaceholderStyle",value:function setPlaceholderStyle(e,t){var n=this.state.placeholderStyle;(0,g.default)(t,n)||this.setState({placeholderStyle:t})}},{key:"render",value:function render(){var e=(0,f.default)((0,a.default)({},this.props.prefixCls||"idoll-affix",this.state.affixStyle)),t=(0,m.default)(this.props,["prefixCls","offsetTop","offsetBottom","target","onChange"]),n=(0,o.default)({},this.state.placeholderStyle,this.props.style);return d.default.createElement("div",(0,o.default)({},t,{style:n}),d.default.createElement("div",{className:e,ref:this.saveFixedNode,style:this.state.affixStyle},this.props.children))}}]),Affix}(d.default.Component);b.propTypes={offsetTop:p.default.number,offsetBottom:p.default.number,target:p.default.func},b.defaultProps={target:function target(){return window},onChange:function onChange(){}},t.default=b},,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){"use strict";n(1481)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(6)),d=_interopRequireDefault(n(1)),c=_interopRequireDefault(n(14)),p=_interopRequireDefault(n(32)),f=_interopRequireDefault(n(17)),m=_interopRequireDefault(n(8)),h=_interopRequireDefault(n(0)),g=_interopRequireDefault(n(762));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function noop(){}n(1488);var v=function(e){function Alert(e){(0,l.default)(this,Alert);var t=(0,u.default)(this,(Alert.__proto__||(0,r.default)(Alert)).call(this,e));return t.handleClose=function(e){e.preventDefault();var n=c.default.findDOMNode(t);n.style.height=n.offsetHeight+"px",n.style.height=n.offsetHeight+"px",t.setState({closing:!1}),(t.props.onClose||noop)(e)},t.animationEnd=function(){t.setState({closed:!0,closing:!0}),(t.props.afterClose||noop)()},t.state={closing:!0,closed:!1},t}return(0,s.default)(Alert,e),(0,i.default)(Alert,[{key:"render",value:function render(){var e,t,n=this.props,r=n.closable,l=n.description,i=n.type,u=n.prefixCls,s=void 0===u?"idoll-alert":u,c=n.message,h=n.closeText,v=n.showIcon,y=n.banner,b=n.className,C=void 0===b?"":b,_=n.style,x=n.iconType,R=n.icon;if(v=!(!y||void 0!==v)||v,i=y&&void 0===i?"warning":i||"info",!x)switch(i){case"success":x="check";break;case"info":x="info-circle";break;case"error":x="error-circle";break;case"warning":x="warning";break;default:x="default"}var k=(0,m.default)(s,s+"-"+i,(e={},(0,o.default)(e,s+"-close",!this.state.closing),(0,o.default)(e,s+"-with-description",!!l),(0,o.default)(e,s+"-no-description",!l),(0,o.default)(e,s+"-no-icon",!v),(0,o.default)(e,s+"-banner",!!y),(0,o.default)(e,s+"-hasicon",v&&!l),(0,o.default)(e,s+"-hasicon-description",v&&l),e),C);h&&(r=!0);var D=r?d.default.createElement("a",{onClick:this.handleClose,className:s+"-close-icon"},h||d.default.createElement(f.default,{type:"close"})):null,w=(0,g.default)(this.props),S=R&&(d.default.isValidElement(R)?d.default.cloneElement(R,{className:(0,m.default)((t={},(0,o.default)(t,R.props.className,R.props.className),(0,o.default)(t,s+"-icon",!0),t))}):d.default.createElement("span",{className:s+"-icon"},R))||d.default.createElement(f.default,{className:s+"-icon",type:x});return this.state.closed?null:d.default.createElement(p.default,{component:"",showProp:"data-show",transitionName:s+"-slide-up",onEnd:this.animationEnd},d.default.createElement("div",(0,a.default)({"data-show":this.state.closing,className:k,style:_},w),v?S:null,d.default.createElement("span",{className:s+"-message"},c),d.default.createElement("span",{className:s+"-description"},l),D))}}]),Alert}(d.default.Component);v.propTypes={closable:h.default.bool,description:h.default.oneOfType([h.default.node,h.default.string]),type:h.default.oneOf(["success","info","warning","error"]),message:h.default.node,closeText:h.default.node,showIcon:h.default.bool,banner:h.default.bool,style:h.default.object,prefixCls:h.default.string,className:h.default.string,onClose:h.default.func,afterClose:h.default.func,icon:h.default.node,iconType:h.default.string},t.default=v},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(15)),r=_interopRequireDefault(n(1));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1484),t.default=function(e){var t=e.type,n=e.className,l=void 0===n?"":n,i=(0,o.default)(e,["type","className"]);return l+=" idoll-icon idoll-icon-"+t,r.default.createElement("i",(0,a.default)({className:l.trim()},i))}},function(e,t,n){"use strict";n(1485)},function(e,t,n){},,,function(e,t,n){"use strict";n(30),n(1489)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=_interopRequireDefault(n(1)),d=_interopRequireDefault(n(14)),c=_interopRequireDefault(n(0)),p=_interopRequireDefault(n(8)),f=_interopRequireDefault(n(118)),m=_interopRequireDefault(n(257)),h=_interopRequireDefault(n(28)),g=_interopRequireDefault(n(763)),v=_interopRequireDefault(n(188));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function getOffsetTop(e,t){if(!e)return 0;if(!e.getClientRects().length)return 0;var n=e.getBoundingClientRect();return n.width||n.height?t===window?(t=e.ownerDocument.documentElement,n.top-t.clientTop):n.top-t.getBoundingClientRect().top:n.top}n(1492);var y=/#([^#]+)$/;function scrollTo(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:0,n=arguments[2],a=arguments[3],o=n(),r=(0,m.default)(o,!0),l=y.exec(e);if(l){var i=document.getElementById(l[1]);if(i){var u=getOffsetTop(i,o),s=r+u-t,d=Date.now();(0,h.default)(function frameFunc(){var e,t,n,l=Date.now()-d,i=(e=l,n=s-(t=r),(e/=450/2)<1?n/2*e*e*e+t:n/2*((e-=2)*e*e+2)+t);o===window?window.scrollTo(window.pageXOffset,i):o.scrollTop=i,l<450?(0,h.default)(frameFunc):a()})}}}var b=function(e){function Anchor(e){(0,r.default)(this,Anchor);var t=(0,i.default)(this,(Anchor.__proto__||(0,o.default)(Anchor)).call(this,e));return t.handleScroll=function(){if(!t.animating){var e=t.props,n=e.offsetTop,a=e.bounds;t.setState({activeLink:t.getCurrentAnchor(n,a)})}},t.handleScrollTo=function(e){var n=t.props,a=n.offsetTop,o=n.getContainer;t.animating=!0,t.setState({activeLink:e}),scrollTo(e,a,o,function(){t.animating=!1})},t.updateInk=function(){if("undefined"!=typeof document){var e=t.props.prefixCls,n=d.default.findDOMNode(t).getElementsByClassName(e+"-link-title-active")[0];n&&(t.inkNode.style.top=n.offsetTop+n.clientHeight/2-4.5+"px")}},t.saveInkNode=function(e){t.inkNode=e},t.state={activeLink:null},t.links=[],t}return(0,u.default)(Anchor,e),(0,l.default)(Anchor,[{key:"getChildContext",value:function getChildContext(){var e=this;return{idollAnchor:{registerLink:function registerLink(t){-1!==e.links.indexOf(t)&&e.links.push(t)},unregisterLink:function unregisterLink(t){var n=e.links.indexOf(t);-1!==n&&e.links.splice(n,1)},activeLink:this.state.activeLink,scrollTo:this.handleScrollTo,onClick:this.props.onClick}}}},{key:"componentDidMount",value:function componentDidMount(){var e=this.props.getContainer;this.scrollEvent=(0,f.default)(e(),"scroll",this.handleScroll),this.handleScroll()}},{key:"componentWillUnmount",value:function componentWillUnmount(){this.scrollEvent&&this.scrollEvent.remove()}},{key:"componentDidUpdate",value:function componentDidUpdate(){this.updateInk()}},{key:"getCurrentAnchor",value:function getCurrentAnchor(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:0,t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:5,n="";if("undefined"==typeof document)return n;var a=[],o=this.props.getContainer,r=o();if(this.links.forEach(function(n){var o=y.exec(n.toString());if(o){var l=document.getElementById(o[1]);if(l){var i=getOffsetTop(l,r);i<e+t&&a.push({link:n,top:i})}}}),a.length){var l=a.reduce(function(e,t){return t.top>e.top?t:e});return l.link}return""}},{key:"render",value:function render(){var e=this.props,t=e.prefixCls,n=e.className,o=void 0===n?"":n,r=e.style,l=e.offsetTop,i=e.affix,u=e.showInkInFixed,d=e.children,c=e.getContainer,f=this.state.activeLink,m=(0,p.default)(t+"-ink-ball",{visible:f}),h=(0,p.default)(o,t+"-wrapper"),g=(0,p.default)(t,{fixed:!i&&!u}),y=(0,a.default)({maxHeight:l?"calc(100vh - "+l+"px)":"100vh"},r),b=s.default.createElement("div",{className:h,style:y},s.default.createElement("div",{className:g},s.default.createElement("div",{className:t+"-ink"},s.default.createElement("span",{className:m,ref:this.saveInkNode})),d));return i?s.default.createElement(v.default,{offsetTop:l,target:c},b):b}}]),Anchor}(s.default.Component);b.Link=g.default,b.propTypes={prefixCls:c.default.string,getContainer:c.default.func,className:c.default.string,style:c.default.object,children:c.default.node,offsetTop:c.default.number,onClick:c.default.func,bounds:c.default.number},b.defaultProps={prefixCls:"idoll-anchor",affix:!0,showInkInFixed:!1,getContainer:function getDefaultContainer(){return window}},b.childContextTypes={idollAnchor:c.default.object},t.default=b},,function(e,t,n){"use strict";n(1493)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(87)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(3)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(1)),p=n(815),f=_interopRequireDefault(n(8)),m=_interopRequireDefault(n(98)),h=_interopRequireDefault(n(100)),g=_interopRequireDefault(n(1529));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var v=function(e){function AutoComplete(){var e,t,n,a;(0,i.default)(this,AutoComplete);for(var o=arguments.length,u=Array(o),d=0;d<o;d++)u[d]=arguments[d];return t=n=(0,s.default)(this,(e=AutoComplete.__proto__||(0,l.default)(AutoComplete)).call.apply(e,[this].concat(u))),n.getInputElement=function(){var e=n.props.children,t=e&&c.isValidElement(e)&&e.type!==p.Option?c.Children.only(n.props.children):c.createElement(h.default,null),a=(0,r.default)({},t.props,{autoComplete:"true"});return delete a.children,c.createElement(g.default,a,t)},n.saveSelect=function(e){n.select=e},a=t,(0,s.default)(n,a)}return(0,d.default)(AutoComplete,e),(0,u.default)(AutoComplete,[{key:"focus",value:function focus(){this.select.focus()}},{key:"blur",value:function blur(){this.select.blur()}},{key:"render",value:function render(){var e,t,n=this.props,l=n.size,i=n.className,u=void 0===i?"":i,s=n.notFoundContent,d=n.prefixCls,h=n.optionLabelProp,g=n.dataSource,v=n.children,y=(0,f.default)((e={},(0,o.default)(e,d+"-lg","large"===l),(0,o.default)(e,d+"-sm","small"===l),(0,o.default)(e,u,!!u),(0,o.default)(e,d+"-show-search",!0),(0,o.default)(e,d+"-auto-complete",!0),(0,o.default)(e,d+"-hasSearch",v),e)),b=void 0,C=c.Children.toArray(v);return b=C.length&&((t=C[0])&&t.type&&(t.type.isSelectOption||t.type.isSelectOptGroup))?v:g?g.map(function(e){if(c.isValidElement(e))return e;switch(void 0===e?"undefined":(0,a.default)(e)){case"string":return c.createElement(p.Option,{key:e},e);case"object":return c.createElement(p.Option,{key:e.value},e.text);default:throw new Error("AutoComplete[dataSource] only supports type `string[] | Object[]`. ")}}):[],c.createElement(m.default,(0,r.default)({},this.props,{className:y,mode:"combobox",optionLabelProp:h,getInputElement:this.getInputElement,notFoundContent:s,ref:this.saveSelect}),b)}}]),AutoComplete}(c.Component);v.Option=p.Option,v.OptGroup=p.OptGroup,v.defaultProps={prefixCls:"idoll-select",transitionName:"slide-up",optionLabelProp:"children",choiceTransitionName:"zoom",showSearch:!0,filterOption:!1},t.default=v},,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(15)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=_interopRequireDefault(n(1)),p=_interopRequireDefault(n(0)),f=n(815),m=_interopRequireDefault(f),h=_interopRequireDefault(n(8)),g=n(66),v=_interopRequireDefault(n(74)),y=_interopRequireDefault(n(67)),b=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(190);var C=function(e){function Select(e){(0,i.default)(this,Select);var t=(0,s.default)(this,(Select.__proto__||(0,l.default)(Select)).call(this,e));return t.saveSelect=function(e){t.rcSelect=e},t.renderSelect=function(e){var n,l=e.getPopupContainer,i=e.getPrefixCls,u=e.renderEmpty,s=t.props,d=s.prefixCls,p=s.className,f=void 0===p?"":p,g=s.size,y=s.mode,C=s.getPopupContainer,_=s.removeIcon,x=s.clearIcon,R=s.menuItemSelectedIcon,k=s.showArrow,D=(0,r.default)(s,["prefixCls","className","size","mode","getPopupContainer","removeIcon","clearIcon","menuItemSelectedIcon","showArrow"]),w=(0,v.default)(D,["imputIcon"]),S=i("select",d),P=(0,h.default)((n={},(0,o.default)(n,S+"-lg","large"===g),(0,o.default)(n,S+"-sm","small"===g),(0,o.default)(n,S+"-show-arrow",k),n),f),q=t.props.optionLabelProp;t.isCombobox()&&(q=q||"value");var I={multiple:"multiple"===y,tags:"tags"===y,combobox:t.isCombobox()},E=_&&(c.default.isValidElement(_)?c.default.cloneElement(_,{className:(0,h.default)(_.props.className,S+"-remove-icon")}):_)||c.default.createElement(b.default,{type:"close",className:S+"-remove-icon"}),T=x&&(c.default.isValidElement(x)?c.default.cloneElement(x,{className:(0,h.default)(x.props.className,S+"-clear-icon")}):x)||c.default.createElement(b.default,{type:"close-circle",theme:"filled",className:S+"-clear-icon"}),N=R&&(c.default.isValidElement(R)?c.default.cloneElement(R,{className:(0,h.default)(R.props.className,S+"-selected-icon")}):R)||c.default.createElement(b.default,{type:"check",className:S+"-selected-icon"});return c.default.createElement(m.default,(0,a.default)({inputIcon:t.renderSuffixIcon(S),removeIcon:E,clearIcon:T,menuItemSelectedIcon:N,showArrow:k},w,I,{prefixCls:S,className:P,optionLabelProp:q||"children",notFoundContent:t.getNotFoundContent(u),ref:t.saveSelect,getPopupContainer:C||l}))},(0,y.default)("combobox"!==e.mode,"Select","The combobox mode is deprecated,it will be removed in next major, version, please use AutoComplete instead"),t}return(0,d.default)(Select,e),(0,u.default)(Select,[{key:"focus",value:function focus(){this.rcSelect.focus()}},{key:"blur",value:function blur(){this.rcSelect.blur()}},{key:"getNotFoundContent",value:function getNotFoundContent(e){var t=this.props.notFoundContent;return void 0!==t?t:this.isCombobox()?null:e("Select")}},{key:"isCombobox",value:function isCombobox(){var e=this.props.mode;return"combobox"===e||e===Select.SECRET_COMBOBOX_MODE_DO_NOT_USE}},{key:"renderSuffixIcon",value:function renderSuffixIcon(e){var t=this.props,n=t.loading,a=t.suffixIcon;return a?c.default.isValidElement(a)?c.default.cloneElement(a,{className:(0,h.default)(a.props.className,e+"-arrow-icon")}):a:n?c.default.createElement(b.default,{type:"loading"}):c.default.createElement(b.default,{type:"down",className:e+"-arrow-icon"})}},{key:"render",value:function render(){return c.default.createElement(g.ConfigConsumer,null,this.renderSelect)}}]),Select}(c.default.Component);C.propTypes={prefixCls:p.default.string,className:p.default.string,size:p.default.oneOf(["default","large","small"]),notFoundContent:p.default.any,showSearch:p.default.bool,optionLabelProp:p.default.string,transitionName:p.default.string,choiceTransitionName:p.default.string,id:p.default.string},C.defaultProps={prefixCls:"idoll-select",transitionName:"slide-up",choiceTransitionName:"zoom",showSearch:!1},C.Option=f.Option,C.OptGroup=f.OptGroup,C.SECRET_COMBOBOX_MODE_DO_NOT_USE="SECRET_COMBOBOX_MODE_DO_NOT_USE",t.default=C},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.ConfigConsumer=void 0;var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6));t.withConfigConsumer=function withConfigConsumer(e){return function(t){var n=function SFC(n){return s.default.createElement(f,null,function(o){var r=e.prefixCls,l=(0,o.getPrefixCls)(r,n.prefixCls);return s.default.createElement(t,(0,a.default)({},o,n,{prefixCls:l}))})},o=t.constructor,r=o&&o.displayName||t.name||"Component";return n.displayName="withConfigConsumer("+r+")",n}};var s=_interopRequireDefault(n(1)),d=_interopRequireDefault(n(1503)),c=_interopRequireDefault(n(1505));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var p=(0,d.default)({getPrefixCls:function getPrefixCls(e,t){return t||"idoll-"+e},renderEmpty:c.default}),f=t.ConfigConsumer=p.Consumer,m=function(e){function ConfigProvider(){var e,t,n,l;(0,r.default)(this,ConfigProvider);for(var u=arguments.length,d=Array(u),c=0;c<u;c++)d[c]=arguments[c];return t=n=(0,i.default)(this,(e=ConfigProvider.__proto__||(0,o.default)(ConfigProvider)).call.apply(e,[this].concat(d))),n.getPrefixCls=function(e,t){var a=n.props.prefixCls,o=void 0===a?"idoll":a;return t||(e?o+"-"+e:o)},n.renderProvider=function(e){var t=n.props,o=t.children,r=t.getPopupContainer,l=t.renderEmpty,i=t.csp,u=t.autoInsertSpaceInButton,d=(0,a.default)({},e,{getPrefixCls:n.getPrefixCls,csp:i,autoInsertSpaceInButton:u});return r&&(d.getPopupContainer=r),l&&(d.renderEmpty=l),s.default.createElement(p.Provider,{value:d},o)},l=t,(0,i.default)(n,l)}return(0,u.default)(ConfigProvider,e),(0,l.default)(ConfigProvider,[{key:"render",value:function render(){return s.default.createElement(f,null,this.renderProvider)}}]),ConfigProvider}(s.default.Component);t.default=m},,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(1)),o=n(66),r=_interopRequireDefault(n(189));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}t.default=function renderEmpty(e){return a.default.createElement(o.ConfigConsumer,null,function(t){var n=(0,t.getPrefixCls)("empty");switch(e){case"Table":case"List":return a.default.createElement(r.default,{image:r.default.PRESENTED_IMAGE_DEFAULT,className:n+"-normal"});case"Select":case"TreeSelect":case"Cascader":case"Transfer":return a.default.createElement(r.default,{image:r.default.PRESENTED_IMAGE_DEFAULT,className:n+"-small"});default:return a.default.createElement(r.default,null)}})}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(15)),r=_interopRequireDefault(n(141)),l=_interopRequireDefault(n(1)),i=_interopRequireDefault(n(8)),u=n(66),s=_interopRequireDefault(n(99)),d=_interopRequireDefault(n(1508));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1509);var c=l.default.createElement(d.default,null),p=function Empty(e){return l.default.createElement(u.ConfigConsumer,null,function(t){var n=t.getPrefixCls,u=(0,r.default)({},e);delete u.imageStyle;var d=u.className,p=u.prefixCls,f=u.image,m=void 0===f?c:f,h=u.description,g=u.children,v=(0,o.default)(u,["className","prefixCls","image","description","children"]),y=n("empty",p);return l.default.createElement(s.default,{componentName:"Empty"},function(e){var t=h||e.description,n="string"==typeof t?t:"empty",o=null;return o=m?"string"==typeof m?l.default.createElement("img",{alt:n,src:m}):m:l.default.createElement("img",{alt:n,src:m}),l.default.createElement("div",(0,a.default)({className:(0,i.default)(y,d)},v),l.default.createElement("div",{className:y+"-image"},o),l.default.createElement("p",{className:y+"-description"},t),g&&l.default.createElement("div",{className:y+"-footer"},g))})})};p.PRESENTED_IMAGE_DEFAULT=c,t.default=p},,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(1));t.default=function DefaultEmptyImg(){return a.createElement("svg",{width:"184",height:"152",viewBox:"0 0 184 152",xmlns:"http://www.w3.org/2000/svg"},a.createElement("g",{fill:"none",fillRule:"evenodd"},a.createElement("g",{transform:"translate(24 31.67)"},a.createElement("ellipse",{fillOpacity:".8",fill:"#F5F5F7",cx:"67.797",cy:"106.89",rx:"67.797",ry:"12.668"}),a.createElement("path",{d:"M122.034 69.674L98.109 40.229c-1.148-1.386-2.826-2.225-4.593-2.225h-51.44c-1.766 0-3.444.839-4.592 2.225L13.56 69.674v15.383h108.475V69.674z",fill:"#AEB8C2"}),a.createElement("path",{d:"M101.537 86.214L80.63 61.102c-1.001-1.207-2.507-1.867-4.048-1.867H31.724c-1.54 0-3.047.66-4.048 1.867L6.769 86.214v13.792h94.768V86.214z",fill:"url(#linearGradient-1)",transform:"translate(13.56)"}),a.createElement("path",{d:"M33.83 0h67.933a4 4 0 0 1 4 4v93.344a4 4 0 0 1-4 4H33.83a4 4 0 0 1-4-4V4a4 4 0 0 1 4-4z",fill:"#F5F5F7"}),a.createElement("path",{d:"M42.678 9.953h50.237a2 2 0 0 1 2 2V36.91a2 2 0 0 1-2 2H42.678a2 2 0 0 1-2-2V11.953a2 2 0 0 1 2-2zM42.94 49.767h49.713a2.262 2.262 0 1 1 0 4.524H42.94a2.262 2.262 0 0 1 0-4.524zM42.94 61.53h49.713a2.262 2.262 0 1 1 0 4.525H42.94a2.262 2.262 0 0 1 0-4.525zM121.813 105.032c-.775 3.071-3.497 5.36-6.735 5.36H20.515c-3.238 0-5.96-2.29-6.734-5.36a7.309 7.309 0 0 1-.222-1.79V69.675h26.318c2.907 0 5.25 2.448 5.25 5.42v.04c0 2.971 2.37 5.37 5.277 5.37h34.785c2.907 0 5.277-2.421 5.277-5.393V75.1c0-2.972 2.343-5.426 5.25-5.426h26.318v33.569c0 .617-.077 1.216-.221 1.789z",fill:"#DCE0E6"})),a.createElement("path",{d:"M149.121 33.292l-6.83 2.65a1 1 0 0 1-1.317-1.23l1.937-6.207c-2.589-2.944-4.109-6.534-4.109-10.408C138.802 8.102 148.92 0 161.402 0 173.881 0 184 8.102 184 18.097c0 9.995-10.118 18.097-22.599 18.097-4.528 0-8.744-1.066-12.28-2.902z",fill:"#DCE0E6"}),a.createElement("g",{transform:"translate(149.65 15.383)",fill:"#FFF"},a.createElement("ellipse",{cx:"20.654",cy:"3.167",rx:"2.849",ry:"2.815"}),a.createElement("path",{d:"M5.698 5.63H0L2.898.704zM9.259.704h4.985V5.63H9.259z"}))))}},function(e,t,n){"use strict";n(1510)},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(9));t.default=Group;var o=_interopRequireDefault(n(1)),r=_interopRequireDefault(n(0)),l=_interopRequireDefault(n(8));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function Group(e){var t,n=e.prefixCls,r=void 0===n?"idoll-input-group":n,i=e.className,u=void 0===i?"":i,s=(0,l.default)(r,(t={},(0,a.default)(t,r+"-lg","large"===e.size),(0,a.default)(t,r+"-sm","small"===e.size),(0,a.default)(t,r+"-compact",e.compact),t),u);return o.default.createElement("span",{className:s,style:e.style},e.children)}Group.propTypes={children:r.default.any,size:r.default.oneOf(["small","default","large"]),className:r.default.string}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(6)),d=n(1),c=_interopRequireDefault(d),p=_interopRequireDefault(n(8)),f=n(0),m=_interopRequireDefault(n(191)),h=_interopRequireDefault(n(1517));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(101);var g=function(e){function TextArea(e){(0,l.default)(this,TextArea);var t=(0,u.default)(this,(TextArea.__proto__||(0,r.default)(TextArea)).call(this,e));return t.handleTextareaChange=function(e){"value"in t.props||t.resizeTextarea();var n=t.props.onChange;n&&n(e)},t.resizeTextarea=function(){var e=t.props.autosize;if(e&&t.textareaRef){var n=e?e.minRows:null,a=e?e.maxRows:null,o=(0,h.default)(t.textareaRef,!1,n,a);t.setState({textareaStyles:o})}},t.saveTextAreaRef=function(e){t.textareaRef=e},t.state={textareaStyles:null},t}return(0,s.default)(TextArea,e),(0,i.default)(TextArea,[{key:"componentDidMount",value:function componentDidMount(){this.resizeTextarea()}},{key:"componentWillReceiveProps",value:function componentWillReceiveProps(e){var t,n;this.props.value!==e.value&&(this.nextFrameActionId&&(n=this.nextFrameActionId,window.calculateNodeHeight?window.cancelAnimationFrame(n):window.clearTimeout(n)),this.nextFrameActionId=(t=this.resizeTextarea,window.requestAnimationFrame?window.requestAnimationFrame(t):window.setTimeout(t,1)))}},{key:"focus",value:function focus(){this.textareaRef.focus()}},{key:"blur",value:function blur(){this.textareaRef.blur()}},{key:"getTextAreaClassName",value:function getTextAreaClassName(){var e=this.props,t=e.prefixCls,n=e.className,a=e.disabled;return(0,p.default)(t,n,(0,o.default)({},t+"-disabled",a))}},{key:"render",value:function render(){var e=this.props,t=(0,m.default)(e,["prefixCls","onPressEnter","autosize"]),n=(0,a.default)({},e.style,this.state.textareaStyles);return"value"in t&&(t.value=t.value||""),c.default.createElement("textarea",(0,a.default)({},t,{className:this.getTextAreaClassName(),style:n,onKeyDown:this.handleKeyDown,onChange:this.handleTextareaChange,ref:this.saveTextAreaRef}))}}]),TextArea}(d.Component);g.defaultProps={disabled:!1,prefixCls:"idoll-input",onKeyDown:function onKeyDown(){},onChange:function onChange(){}},g.propTypes={type:f.PropTypes.string,placeholder:f.PropTypes.string,name:f.PropTypes.string,id:f.PropTypes.oneOfType([f.PropTypes.string,f.PropTypes.number]),autosize:f.PropTypes.oneOfType([f.PropTypes.bool,f.PropTypes.object]),size:f.PropTypes.oneOf(["small","default","large"]),maxLength:f.PropTypes.string,readOnly:f.PropTypes.bool,disabled:f.PropTypes.bool,value:f.PropTypes.any,defaultValue:f.PropTypes.any,className:f.PropTypes.string,prefixCls:f.PropTypes.string,autoFocus:f.PropTypes.bool,onKeyDown:f.PropTypes.func,onChange:f.PropTypes.func,onClick:f.PropTypes.func,onFocus:f.PropTypes.func,onBlur:f.PropTypes.func},t.default=g},,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(1518)),o=_interopRequireDefault(n(1521));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}t.default=function calculateNodeHeight(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:null,l=arguments.length>3&&void 0!==arguments[3]?arguments[3]:null;u||(u=document.createElement("textarea"),document.body.appendChild(u));e.getAttribute("wrap")?u.setAttribute("wrap",e.getAttribute("wrap")):u.removeAttribute("wrap");var i=calculateNodeStyling(e,t),s=i.paddingSize,d=i.borderSize,c=i.boxSizing,p=i.sizingStyle;u.setAttribute("style",p+";"+r),u.value=e.value||e.placeholder||"";var f=o.default,m=a.default,h=u.scrollHeight,g=void 0;"border-box"===c?h+=d:"content-box"===c&&(h-=s);if(null!==n||null!==l){u.value=" ";var v=u.scrollHeight-s;null!==n&&(f=v*n,"border-box"===c&&(f=f+s+d),h=Math.max(f,h)),null!==l&&(m=v*l,"border-box"===c&&(m=m+s+d),g=h>m?"":"hidden",h=Math.min(m,h))}l||(g="hidden");return{height:h,minHeight:f,maxHeight:m,overflowY:g}};var r="\n  min-height:0 !important;\n  max-height:none !important;\n  height:0 !important;\n  visibility:hidden !important;\n  overflow:hidden !important;\n  position:absolute !important;\n  z-index:-1000 !important;\n  top:0 !important;\n  right:0 !important\n",l=["letter-spacing","line-height","padding-top","padding-bottom","font-family","font-weight","font-size","text-rendering","text-transform","width","text-indent","padding-left","padding-right","border-width","box-sizing"],i=void 0,u=void 0;function calculateNodeStyling(e){var t=arguments.length>1&&void 0!==arguments[1]&&arguments[1],n=e.getAttribute("id")||e.getAttribute("data-reactid")||e.getAttribute("name");if(t&&i[n])return i[n];var a=window.getComputedStyle(e),o=a.getPropertyValue("box-sizing")||a.getPropertyValue("-moz-box-sizing")||a.getPropertyValue("-webkit-box-sizing"),r=parseFloat(a.getPropertyValue("padding-bottom"))+parseFloat(a.getPropertyValue("padding-top")),u=parseFloat(a.getPropertyValue("border-bottom-width"))+parseFloat(a.getPropertyValue("border-top-width")),s={sizingStyle:l.map(function(e){return e+":"+a.getPropertyValue(e)}).join(";"),paddingSize:r,borderSize:u,boxSizing:o};return t&&n&&(i[n]=s),s}},,,,,,,function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(15)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=n(1),p=_interopRequireDefault(c),f=_interopRequireDefault(n(8)),m=n(0),h=_interopRequireDefault(n(264)),g=_interopRequireDefault(n(17)),v=_interopRequireDefault(n(75));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(101);var y=function(e){function Search(){var e,t,n,a;(0,i.default)(this,Search);for(var o=arguments.length,r=Array(o),u=0;u<o;u++)r[u]=arguments[u];return t=n=(0,s.default)(this,(e=Search.__proto__||(0,l.default)(Search)).call.apply(e,[this].concat(r))),n.onSearch=function(){var e=n.props.onSearch;e&&e(n.input.input.value),n.input.focus()},n.saveInput=function(e){n.input=e},a=t,(0,s.default)(n,a)}return(0,d.default)(Search,e),(0,u.default)(Search,[{key:"render",value:function render(){var e,t=this.props,n=t.className,l=t.prefixCls,i=t.inputPrefixCls,u=t.size,s=t.enterButton,d=t.suffix,c=(0,r.default)(t,["className","prefixCls","inputPrefixCls","size","enterButton","suffix"]);delete c.onSearch;var m=s?p.default.createElement(v.default,{className:l+"-button",type:"primary",size:u,key:"enterButton"},!0===s?p.default.createElement(g.default,{type:"search"}):s):p.default.createElement(g.default,{className:l+"-icon",type:"search",key:"searchIcon"}),y=p.default.cloneElement(m,{onClick:this.onSearch,className:"icon-hover"}),b=d?[d,y]:y,C=(0,f.default)(l,n,(e={},(0,o.default)(e,l+"-enter-button",!!s),(0,o.default)(e,l+"-"+u,!!u),e));return p.default.createElement(h.default,(0,a.default)({onPressEnter:this.onSearch},c,{size:u,className:C,prefixCls:i,suffix:b,ref:this.saveInput,search:!0}))}}]),Search}(c.Component);y.defaultProps={inputPrefixCls:"idoll-input",prefixCls:"idoll-input-search",enterButton:!1},y.propTypes={onSearch:m.PropTypes.func},t.default=y},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(15)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=_interopRequireDefault(n(1)),p=_interopRequireDefault(n(8)),f=n(0),m=n(14),h=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(265);var g=function(e){function Button(){var e,t,n,a;(0,i.default)(this,Button);for(var o=arguments.length,r=Array(o),u=0;u<o;u++)r[u]=arguments[u];return t=n=(0,s.default)(this,(e=Button.__proto__||(0,l.default)(Button)).call.apply(e,[this].concat(r))),v.call(n),a=t,(0,s.default)(n,a)}return(0,d.default)(Button,e),(0,u.default)(Button,[{key:"componentWillUnmount",value:function componentWillUnmount(){this.clickedTimeout&&clearTimeout(this.clickedTimeout),this.timeout&&clearTimeout(this.timeout)}},{key:"isNeedInserted",value:function isNeedInserted(){var e=this.props,t=e.icon,n=e.children,a={large:"lg",small:"sm"}[e.size]||"";return 1===c.default.Children.count(n)&&!t&&"sm"!==a}},{key:"render",value:function render(){var e,t=this,n=this.props,l=n.type,i=n.text,u=n.shape,s=n.size,d=n.className,f=n.htmlType,m=n.children,g=n.icon,v=n.loading,y=n.ghost,b=n.prefixCls,C=n.block,_=n.iconLocation,x=(0,r.default)(n,["type","text","shape","size","className","htmlType","children","icon","loading","ghost","prefixCls","block","iconLocation"]),R={large:"lg",small:"sm"}[s]||"",k=(0,p.default)((e={},(0,o.default)(e,b,!0),(0,o.default)(e,b+"-"+l,l),(0,o.default)(e,b+"-"+u,u),(0,o.default)(e,b+"-"+R,R),(0,o.default)(e,b+"-icon-only",!m&&g),(0,o.default)(e,b+"-loading",v),(0,o.default)(e,b+"-background-ghost",y),(0,o.default)(e,b+"-text",i),(0,o.default)(e,b+"-block",C),(0,o.default)(e,d,d),e)),D=v?"loading":g,w=m||0===m?c.default.Children.map(m,function(e){return insertSpace(e,t.isNeedInserted())}):null,S=D?c.default.createElement(h.default,{type:D}):null;return"href"in x?c.default.createElement("a",(0,a.default)({},x,{className:k,onClick:this.handleClick}),S,w):"right"===_?c.default.createElement("button",(0,a.default)({},x,{type:f||"button",className:k,onClick:this.handleClick}),w,S):c.default.createElement("button",(0,a.default)({},x,{type:f||"button",className:k,onClick:this.handleClick}),S,w)}}]),Button}(c.default.Component);g.defaultProps={prefixCls:"idoll-btn",onClick:function onClick(){},ghost:!1,loading:!1,text:!1,block:!1},g.propTypes={type:f.PropTypes.string,shape:f.PropTypes.oneOf(["circle","circle-outline","square"]),size:f.PropTypes.oneOf(["large","default","small"]),htmlType:f.PropTypes.oneOf(["submit","button","reset"]),onClick:f.PropTypes.func,loading:f.PropTypes.bool,className:f.PropTypes.string,icon:f.PropTypes.string,block:f.PropTypes.bool,iconLocation:f.PropTypes.string};var v=function _initialiseProps(){var e=this;this.clearButton=function(t){t.className=t.className.replace(e.props.prefixCls+"-clicked","")},this.handleClick=function(){var t,n=e.props.loading;if(!n){var a=(0,m.findDOMNode)(e);e.clearButton(a),e.clickedTimeout=setTimeout(function(){return a.className+=" "+e.props.prefixCls+"-clicked"},10),clearTimeout(e.timeout),e.timeout=setTimeout(function(){return e.clearButton(a)},500),(t=e.props).onClick.apply(t,arguments)}}};function insertSpace(e,t){if(null!=e){var n=t?" ":"";return isString(e.type&&b(e.props.children))?c.default.cloneElement(e,{},e.props.split("").join(n)):isString(e)?(b(e)&&(e=e.split("").join(n)),c.default.createElement("span",null,e)):e}}function isString(e){return"string"==typeof e}t.default=g;var y=/^[\u4e00-\u9fa5]{2}$/,b=y.test.bind(y)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(15));t.default=ButtonGroup;var l=_interopRequireDefault(n(1)),i=_interopRequireDefault(n(8)),u=_interopRequireDefault(n(0));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function ButtonGroup(e){var t=e.prefixCls,n=void 0===t?"idoll-btn-group":t,u=e.size,s=e.className,d=(0,r.default)(e,["prefixCls","size","className"]),c="";switch(u){case"large":c="lg";break;case"small":c="sm"}var p=(0,i.default)(n,(0,o.default)({},n+"-"+c,c),s);return l.default.createElement("div",(0,a.default)({},d,{className:p}))}ButtonGroup.propTypes={size:u.default.oneOf(["small","default","large"])}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=_interopRequireWildcard(n(1)),d=_interopRequireWildcard(n(14)),c=_interopRequireDefault(n(0));function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var p=function(e){function InputElement(){var e,t,n,a;(0,r.default)(this,InputElement);for(var l=arguments.length,u=Array(l),s=0;s<l;s++)u[s]=arguments[s];return t=n=(0,i.default)(this,(e=InputElement.__proto__||(0,o.default)(InputElement)).call.apply(e,[this].concat(u))),n.focus=function(){n.ele.focus?n.ele.focus():d.findDOMNode(n.ele).focus()},n.blur=function(){n.ele.focus?n.ele.focus():d.findDOMNode(n.ele).blur()},n.saveRef=function(e){n.ele=e;var t=n.props.children.ref;"function"==typeof t&&t(e)},a=t,(0,i.default)(n,a)}return(0,u.default)(InputElement,e),(0,l.default)(InputElement,[{key:"render",value:function render(){return s.cloneElement(this.props.children,(0,a.default)({},this.props,{ref:this.saveRef}),null)}}]),InputElement}(s.Component);p.propTypes={children:c.default.any},t.default=p},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(266));t.default=a.default},function(e,t,n){"use strict";n(1532)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=_interopRequireDefault(n(1)),d=_interopRequireDefault(n(32)),c=_interopRequireDefault(n(118)),p=_interopRequireDefault(n(8)),f=_interopRequireDefault(n(0)),m=_interopRequireDefault(n(74)),h=_interopRequireDefault(n(257)),g=_interopRequireDefault(n(28));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1534);var v=function easeInOutCubic(e,t,n,a){var o=n-t;return(e/=a/2)<1?o/2*e*e*e+t:o/2*((e-=2)*e*e+2)+t};function noop(){}function getDefaultTarget(){return window}var y=function(e){function BackTop(e){(0,r.default)(this,BackTop);var t=(0,i.default)(this,(BackTop.__proto__||(0,o.default)(BackTop)).call(this,e));return t.getCurrentScrollTop=function(){var e=(t.props.target||getDefaultTarget)();return e===window?window.pageYOffset||document.body.scrollTop||document.documentElement.scrollTop:e.scrollTop},t.scrollToTop=function(e){var n=t.getCurrentScrollTop(),a=Date.now();(0,g.default)(function frameFunc(){var e=Date.now()-a;t.setScrollTop(v(e,n,0,450)),e<450?(0,g.default)(frameFunc):t.setScrollTop(0)}),(t.props.onClick||noop)(e)},t.handleScroll=function(){var e=t.props,n=e.visibilityHeight,a=e.target,o=void 0===a?getDefaultTarget:a,r=(0,h.default)(o(),!0);t.setState({visible:r>n})},t.state={visible:!1},t}return(0,u.default)(BackTop,e),(0,l.default)(BackTop,[{key:"setScrollTop",value:function setScrollTop(e){var t=(this.props.target||getDefaultTarget)();t===window?(document.body.scrollTop=e,document.documentElement.scrollTop=e):t.scrollTop=e}},{key:"componentDidMount",value:function componentDidMount(){var e=this.props.target||getDefaultTarget;this.scrollEvent=(0,c.default)(e(),"scroll",this.handleScroll),this.handleScroll()}},{key:"componentWillUnmount",value:function componentWillUnmount(){this.scrollEvent&&this.scrollEvent.remove()}},{key:"render",value:function render(){var e=this.props,t=e.prefixCls,n=void 0===t?"idoll-back-top":t,o=e.className,r=void 0===o?"":o,l=e.children,i=(0,p.default)(n,r),u=s.default.createElement("div",{className:n+"-content"},s.default.createElement("div",{className:n+"-icon"})),c=(0,m.default)(this.props,["prefixCls","className","children","visibilityHeight","target","visible"]),f=this.state.visible?s.default.createElement("div",(0,a.default)({},c,{className:i,onClick:this.scrollToTop}),l||u):null;return s.default.createElement(d.default,{component:"",transitionName:"fade"},f)}}]),BackTop}(s.default.Component);y.propTypes={visibilityHeight:f.default.number,prefixCls:f.default.string,className:f.default.string,children:f.default.node,target:f.default.func,onClick:f.default.func},y.defaultProps={visibilityHeight:400},t.default=y},function(e,t,n){"use strict";n(192),n(1535)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(15)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=_interopRequireDefault(n(1)),p=_interopRequireDefault(n(32)),f=_interopRequireDefault(n(1537)),m=_interopRequireDefault(n(8)),h=_interopRequireDefault(n(0));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1539);var g=function(e){function Badge(){return(0,i.default)(this,Badge),(0,s.default)(this,(Badge.__proto__||(0,l.default)(Badge)).apply(this,arguments))}return(0,d.default)(Badge,e),(0,u.default)(Badge,[{key:"render",value:function render(){var e,t=this.props,n=t.count,l=t.offset,i=t.text,u=t.status,s=t.prefixCls,d=t.showZero,h=t.overflowCount,g=t.className,v=t.style,y=t.children,b=t.dot,C=(0,r.default)(t,["count","offset","text","status","prefixCls","showZero","overflowCount","className","style","children","dot"]);n=n>h?h+"+":n,b&&(n="");var _="";d||(_=!(n&&"0"!==n||d)),b&&(_=!(n&&"0"!==n||b)),u&&(s=s+"-"+u);var x=s+(b?"-dot":"-count"),R=(0,m.default)((e={},(0,o.default)(e,g,!!g),(0,o.default)(e,s,!0),(0,o.default)(e,s+"-not-a-wrapper",!y),(0,o.default)(e,"state-dot-text",b&&i),e));return c.default.createElement("span",(0,a.default)({className:R,style:null},C),y,c.default.createElement(p.default,{component:"",showProp:"data-show",transitionName:s+"-zoom",transitionAppear:!0},_?null:c.default.createElement(f.default,{"data-show":!_,className:x,count:n,style:l?{left:l[0],top:l[1]}:v})),i)}}]),Badge}(c.default.Component);g.defaultProps={prefixCls:"idoll-badge",count:null,dot:!1,overflowCount:99},g.propType={count:h.default.oneOfType([h.default.string,h.default.number]),showZero:h.default.bool,dot:h.default.bool,text:h.default.any,status:h.default.string,overflowCount:h.default.number},t.default=g},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(15)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(6)),d=n(1),c=_interopRequireDefault(d),p=n(14),f=_interopRequireDefault(n(1538)),m=_interopRequireDefault(n(0)),h=_interopRequireDefault(n(191));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function getNumberArray(e){return e?e.toString().split("").reverse().map(function(e){return Number(e)}):[]}var g=function(e){function ScrollNumber(e){(0,l.default)(this,ScrollNumber);var t=(0,u.default)(this,(ScrollNumber.__proto__||(0,r.default)(ScrollNumber)).call(this,e));return t.state={animateStarted:!0,count:e.count},t}return(0,s.default)(ScrollNumber,e),(0,i.default)(ScrollNumber,[{key:"componentDidMount",value:function componentDidMount(){(0,f.default)()||((0,p.findDOMNode)(this).className+=" not-support-css-animation")}},{key:"getPositionByNum",value:function getPositionByNum(e,t){if(this.state.animateStarted)return 10+e;var n=getNumberArray(this.state.count)[t],a=getNumberArray(this.lastCount)[t];return this.state.count>this.lastCount?n>=a?10+e:20+e:n<=a?10+e:e}},{key:"componentWillReceiveProps",value:function componentWillReceiveProps(e){var t=this;if("count"in e){if(this.state.count===e.count)return!1;this.lastCount=this.state.count,this.setState({animateStarted:!0},function(){setTimeout(function(){t.setState({animateStarted:!1,count:e.count},function(){t.props.onAnimated()})},5)})}}},{key:"renderNumberList",value:function renderNumberList(e){for(var t=[],n=0;n<30;n++){var a=e===n?"current":null;t.push(c.default.createElement("p",{key:n,className:a},n%10))}return t}},{key:"renderCurrentNumber",value:function renderCurrentNumber(e,t){var n=this.getPositionByNum(e,t),a=this.props.height,o=this.state.animateStarted||void 0===getNumberArray(this.lastCount)[t];return(0,d.createElement)("span",{className:this.props.prefixCls+"-only",style:{transition:o&&"none",WebkitTransform:"translateY("+-n*a+"px)",transform:"translateY("+-n*a+"px)",height:a},key:t},this.renderNumberList(n))}},{key:"renderNumberElement",value:function renderNumberElement(){var e=this,t=this.state;return!t.count||isNaN(t.count)?t.count:getNumberArray(t.count).map(function(t,n){return e.renderCurrentNumber(t,n)}).reverse()}},{key:"render",value:function render(){var e=this.props,t=e.component,n=e.prefixCls,r=e.className,l=(0,o.default)(e,["component","prefixCls","className"]),i=(0,h.default)(l,["count","onAnimated"]),u=(0,a.default)({},i,{className:n+" "+r});return(0,d.createElement)(t,u,this.renderNumberElement())}}]),ScrollNumber}(c.default.Component);g.defaultProps={prefixCls:"idoll-scroll-number",count:null,component:"sup",height:20,onAnimated:function onAnimated(){}},g.propTypes={count:m.default.oneOfType([m.default.string,m.default.number]),component:m.default.string,onAnimated:m.default.func,height:m.default.number},t.default=g},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=void 0;t.default=function isCssAnimationSupported(){if(void 0!==a)return a;var e="Webkit Moz O ms Khtml".split(" "),t=document.createElement("div");if(void 0!==t.style.animationName&&(a=!0),void 0!==a)for(var n=0;n<e.lenght;n++)if(void 0!==t.style[e[n]+"AnimationName"]){a=!0;break}return a=a||!1}},function(e,t,n){"use strict";n(30),n(1540)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(85)),s=n(1),d=_interopRequireDefault(s),c=_interopRequireDefault(n(0)),p=_interopRequireDefault(n(769)),f=_interopRequireDefault(n(8));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function getBreadcrumbName(e,t){if(!e.breadcrumbName)return null;var n=(0,u.default)(t).join("|");return e.breadcrumbName.replace(new RegExp(":("+n+")","g"),function(e,n){return t[n]||e})}function defaultItemRender(e,t,n,a){var o=n.indexOf(e)===n.length-1,r=getBreadcrumbName(e,t);return o?d.default.createElement("span",null,r):d.default.createElement("a",{href:"#/"+a.join("/")},r)}n(1542);var m=function(e){function Breadcrumb(){return(0,o.default)(this,Breadcrumb),(0,l.default)(this,(Breadcrumb.__proto__||(0,a.default)(Breadcrumb)).apply(this,arguments))}return(0,i.default)(Breadcrumb,e),(0,r.default)(Breadcrumb,[{key:"render",value:function render(){var e=void 0,t=this.props,n=t.separator,a=t.prefixCls,o=t.style,r=t.className,l=t.routes,i=t.params,c=void 0===i?{}:i,m=t.children,h=t.itemRender,g=void 0===h?defaultItemRender:h;if(l&&l.length>0){var v=[];e=l.map(function(e){e.path=e.path||"";var t=e.path.replace(/^\//,"");return(0,u.default)(c).forEach(function(e){t=t.replace(":"+e,c[e])}),t&&v.push(t),d.default.createElement(p.default,{separator:n,key:e.breadcrumbName||t},g(e,c,l,v))})}else m&&(e=d.default.Children.map(m,function(e,t){return e?(0,s.cloneElement)(e,{separator:n,key:t}):e}));return d.default.createElement("div",{className:(0,f.default)(r,a),style:o},e)}}]),Breadcrumb}(d.default.Component);m.defaultProps={prefixCls:"idoll-breadcrumb",separator:"/"},m.propTypes={prefixCls:c.default.string,separator:c.default.node,routes:c.default.array,params:c.default.object},t.default=m},function(e,t,n){"use strict";n(30),n(1543)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(271)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(6)),d=_interopRequireDefault(n(1)),c=_interopRequireDefault(n(0)),p=_interopRequireDefault(n(12)),f=_interopRequireDefault(n(1549)),m=_interopRequireDefault(n(99)),h=n(774),g=_interopRequireDefault(n(1559)),v=_interopRequireDefault(n(144)),y=_interopRequireDefault(n(768));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function noop(){return null}n(1561);var b=function(e){function Calendar(e){(0,l.default)(this,Calendar);var t=(0,u.default)(this,(Calendar.__proto__||(0,r.default)(Calendar)).call(this,e));C.call(t);var n=e.value||e.defaultValue||(0,v.default)(p.default)();if(!(0,v.default)(p.default).isMoment(n))throw new Error("");return t.state={value:n,mode:e.mode},t}return(0,s.default)(Calendar,e),(0,i.default)(Calendar,[{key:"componentWillReceiveProps",value:function componentWillReceiveProps(e){"value"in e&&this.setState({value:e.value}),"mode"in e&&e.mode!==this.props.mode&&this.setState({mode:e.mode})}},{key:"render",value:function render(){return d.default.createElement(m.default,{componentName:"Calendar",defaultLocale:this.getDefaultLocale},this.renderCalendar)}}]),Calendar}(d.default.Component);b.defaultProps={locale:{},fullscreen:!1,prefixCls:h.PREFIX_CLS,mode:"month",onSelect:noop,onPanelChange:noop,onChange:noop,mold:""},b.propTypes={prefixCls:c.default.string,className:c.default.string,fullscreen:c.default.bool,dateCellRender:c.default.func,monthCellRender:c.default.func,dateFullCellRender:c.default.func,monthFullCellRender:c.default.func,locale:c.default.object,style:c.default.object,onPanelChange:c.default.func,onSelect:c.default.func,onChange:c.default.func,value:c.default.object};var C=function _initialiseProps(){var e=this;this.monthCellRender=function(t){var n=e.props,a=n.prefixCls,o=n.monthCellRender,r=void 0===o?noop:o;return d.default.createElement("div",{className:a+"-month"},d.default.createElement("div",{className:a+"-value"},(0,p.default)(t).localeDate().monthsShort(t)),d.default.createElement("div",{className:a+"-content"},r(t)))},this.dateCellRender=function(t){var n,a=e.props,o=a.prefixCls,r=a.dateCellRender,l=void 0===r?noop:r;return d.default.createElement("div",{className:o+"-date"},d.default.createElement("div",{className:o+"-value"},(n=(0,p.default)(t).date())<10?"0"+n:""+n),d.default.createElement("div",{className:o+"-content"},l(t)))},this.setValue=function(t,n){"value"in e.props||e.setState({value:t},function(){console.log("value",e.state.value)}),"select"===n?e.props.onSelect&&e.props.onSelect(t):"changePanel"===n&&e.onPanelChange(t,e.state.mode)},this.setType=function(t){var n="date"===t?"month":"year";e.state.mode!==n&&(e.setState({mode:n}),e.onPanelChange(e.state.value,n))},this.onHeaderValueChange=function(t){e.setValue(t,"changePanel")},this.onHeaderTypeChange=function(t){e.setType(t)},this.onPanelChange=function(t,n){var a=e.props,o=a.onPanelChange,r=a.onChange;o&&o(t,n),r&&t!==e.state.value&&r(t)},this.onSelect=function(t){e.setValue(t,"select")},this.getDateRange=function(e,t){return function(n){if(!n)return!1;var a=(0,o.default)(e,2),r=a[0],l=a[1],i=!n.isBetween(r,l,"days","[]");return t&&t(n)||i}},this.renderCalendar=function(t,n){var o=e.state,r=e.props,l=o.value,i=o.mode;l&&n&&(0,p.default)(l).locale(n);var u=r.prefixCls,s=r.style,c=r.className,m=r.fullscreen,h=r.dateFullCellRender,v=r.monthFullCellRender,y=r.mold,b="type"===i?"month":"date",C=c||"";m&&(C+=u+"-fullscreen");var _=v||e.monthCellRender,x=h||e.dateCellRender,R=r.disabledDate;return r.validRange&&(R=e.getDateRange(r.validRange,R)),d.default.createElement("div",{className:C,style:s},d.default.createElement(g.default,{fullscreen:m,type:b,value:l,mold:y,locale:t.lang,prefixCls:u,onTypeChange:e.onHeaderTypeChange,onValueChange:e.onHeaderValueChange,validRange:r.validRange}),d.default.createElement(f.default,(0,a.default)({},r,{disabledDate:R,Select:noop,locale:t.lang,type:b,prefixCls:u,showHeader:!1,value:l,monthCellRender:_,dateCellRender:x,onSelect:e.onSelect})))},this.getDefaultLocale=function(){var t=(0,a.default)({},y.default,e.props.locale);return t.lang=(0,a.default)({},t.lang,(e.props.locale||{}).lang),t}};t.default=b},,,,,,,,,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(271)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=_interopRequireDefault(n(1)),d=_interopRequireDefault(n(0)),c=_interopRequireDefault(n(12)),p=n(774),f=_interopRequireDefault(n(1560)),m=_interopRequireDefault(n(98)),h=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var g=m.default.Option;c.default.locale("zh_cn");var v=function(e){function Header(e){(0,r.default)(this,Header);var t=(0,i.default)(this,(Header.__proto__||(0,o.default)(Header)).call(this,e));return t.handleProIncreaseMonth=function(){var e,n=void 0,a=t.state,o=a.monthNumber,r=a.yearValue;if(n=o,e=r,12===++n)return n=0,t.setState({monthValue:(0,f.default)(n),monthNumber:0,yearValue:e+1},function(){t.onYearChange(t.state.yearValue,0)}),!1;t.setState({monthValue:(0,f.default)(n),monthNumber:n,yearValue:e},function(){t.onMonthChange(t.state.monthNumber),t.state.yearValue!==e&&t.onYearChange(t.state.yearValue)})},t.handleDecIncreaseMonth=function(){var e,n=void 0,a=t.state,o=a.monthNumber,r=a.yearValue;if(n=o,e=r,--n<0)return n=11,t.setState({monthValue:(0,f.default)(n),monthNumber:11,yearValue:e-1},function(){t.onYearChange(t.state.yearValue,11)}),!1;t.setState({monthValue:(0,f.default)(n),monthNumber:n,yearValue:e},function(){t.onMonthChange(t.state.monthNumber),t.state.yearValue!==e&&t.onYearChange(t.state.yearValue)})},t.onYearChange=function(e,n){var o=t.props,r=o.value,l=o.validRange,i=(0,c.default)(r).clone();if(i.year(parseInt(e,10)),"number"==typeof n&&i.month(parseInt(n,10)),l){var u=(0,a.default)(l,2),s=u[0],d=u[1],p=(0,c.default)(i).get("year"),f=(0,c.default)(i).get("month");p===(0,c.default)(d).get("year")&&f>(0,c.default)(d).get("month")&&i.month((0,c.default)(d).get("month")),p===(0,c.default)(s).get("year")&&f<(0,c.default)(s).get("month")&&i.month((0,c.default)(s).get("month"))}var m=t.props.onValueChange;m&&m(i)},t.onMonthChange=function(e){var n=(0,c.default)(t.props.value).clone();n.month(parseInt(e,10));var a=t.props.onValueChange;a&&a(n)},t.onTypeChange=function(e){var n=t.props.onTypeChange;n&&n(e.target.value)},t.getCalendarHeaderNode=function(e){t.getCalendarHeaderNode=e},t.state={monthValue:null,yearValue:null},t}return(0,u.default)(Header,e),(0,l.default)(Header,[{key:"componentDidMount",value:function componentDidMount(){var e=this.props.value,t=(0,c.default)(e).format("YYYY-MM").split("-");this.setState({monthNumber:(0,c.default)().month(),monthValue:(0,f.default)((0,c.default)().month()),yearValue:(0,c.default)().year(),defaultValue:t})}},{key:"componentWillReceiveProps",value:function componentWillReceiveProps(e){var t=this.state,n=t.yearValue,a=t.monthValue;e.value&&((0,c.default)(e.value).year()!==n&&this.setState({yearValue:(0,c.default)(e.value).year()}),(0,c.default)(e.value).month()!==a&&this.setState({monthValue:(0,f.default)((0,c.default)(e.value).month())}))}},{key:"getYearSelectElement",value:function getYearSelectElement(e){var t=this.props,n=t.yearSelectOffset,a=t.yearSelectTotal,o=t.locale,r=t.prefixCls,l=t.fullscreen,i=t.validRange,u=e-n,d=u+a;i&&(u=(0,c.default)(i[0]).get("year"),d=(0,c.default)(i[1]).get("year")+1);for(var p="年"===o.year?"年":"",f=[],h=u;h<d;h++)f.push(s.default.createElement(g,{key:""+h},h+p));return s.default.createElement(m.default,{size:l?"default":"small",dropdownMatchSelectWidth:!1,className:r+"-year-select",value:String(e),onChange:this.onYearChange,style:{width:88,height:24}},f)}},{key:"getMonthsLocale",value:function getMonthsLocale(e){for(var t=(0,c.default)(e).clone(),n=(0,c.default)(e).localeData(),a=[],o=0;o<12;o++)t.month(o),a.push(n.monthsShort(t));return a}},{key:"getMonthSelectElement",value:function getMonthSelectElement(e,t){var n=this.props,o=n.prefixCls,r=n.fullscreen,l=n.validRange,i=n.value,u=[],d=0,p=12;if(l){var f=(0,a.default)(l,2),h=f[0],v=f[1],y=(0,c.default)(i).get("year");(0,c.default)(v).get("year")===y?p=(0,c.default)(v).get("month")+1:d=(0,c.default)(h).get("month")}for(var b=d;b<p;b++)u.push(s.default.createElement(g,{key:""+b},t[b]));return s.default.createElement(m.default,{size:r?"default":"small",dropdownMatchSelectWidth:!1,className:o+"-month-select",value:String(e),onChange:this.onMonthChange,style:{width:72,height:24}},u)}},{key:"render",value:function render(){var e=this.props,t=e.type,n=e.value,a=e.prefixCls,o=e.mold,r=this.state,l=r.monthValue,i=r.yearValue,u=this.getYearSelectElement((0,c.default)(n).year()),d="date"===t?this.getMonthSelectElement((0,c.default)(n).month(),this.getMonthsLocale(n)):null;return"backdrop"!==o?s.default.createElement("div",{className:a+"-header",ref:this.getCalenderHeaderNode},s.default.createElement("div",null,u,d)):s.default.createElement("div",{className:a+"-backdrop-header",ref:this.getCalenderHeaderNode},s.default.createElement(h.default,{type:"left",className:a+"-backdrop-header-left",onClick:this.handleDecIncreaseMonth}),s.default.createElement("div",{className:a+"-backdrop-header-time"},i+"年","  ",l),s.default.createElement(h.default,{type:"right",className:a+"-backdrop-header-right",onClick:this.handleProIncreaseMonth}))}}]),Header}(s.default.Component);v.propTypes={prefixCls:d.default.string,locale:d.default.object,yearSelectOffset:d.default.number,yearSelectTotal:d.default.number,type:d.default.string,onValueChange:d.default.func,onTypeChange:d.default.func,value:d.default.any,fullscreen:d.default.bool,mold:d.default.string},v.defaultProps={prefixCls:p.PREFIX_CLS+"-header",yearSelectOffset:10,yearSelectTotal:20},t.default=v},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function MonthFormat(e){var t=null;switch(e){case 0:t="一月";break;case 1:t="二月";break;case 2:t="三月";break;case 3:t="四月";break;case 4:t="五月";break;case 5:t="六月";break;case 6:t="七月";break;case 7:t="八月";break;case 8:t="九月";break;case 9:t="十月";break;case 10:t="十一月";break;case 11:t="十二月"}return t}},function(e,t,n){"use strict";n(30),n(1562),n(190),n(523)},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(15)),r=_interopRequireDefault(n(9)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(7)),d=_interopRequireDefault(n(6)),c=_interopRequireDefault(n(1)),p=_interopRequireDefault(n(1938)),f=_interopRequireDefault(n(1565)),m=_interopRequireDefault(n(8)),h=_interopRequireDefault(n(0)),g=_interopRequireDefault(n(74)),v=_interopRequireDefault(n(145)),y=n(19),b=_interopRequireDefault(n(100)),C=_interopRequireDefault(n(17)),_=n(66),x=_interopRequireDefault(n(99)),R=_interopRequireDefault(n(67));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1566);function highlightKeyword(e,t,n){return e.split(t).map(function(e,a){return 0===a?e:[c.default.createElement("span",{className:n+"-menu-item-keyword",key:"seperator"},t),e]})}function defaultFilterOption(e,t,n){return t.some(function(t){return t[n.label].indexOf(e)>-1})}function defaultRenderFilteredOption(e,t,n,a){return t.map(function(t,o){var r=t[a.label],l=r.indexOf(e)>-1?highlightKeyword(r,e,n):r;return 0===o?l:[" / ",l]})}function defaultSortFilteredOption(e,t,n,a){function callback(e){return e[a.label].indexOf(n)>-1}return e.findIndex(callback)-t.findIndex(callback)}function getFieldNames(e){var t=e.fieldNames,n=e.filedNames;return"filedNames"in e?n:t}function getFilledFieldNames(e){var t=getFieldNames(e)||{};return{children:t.children||"children",label:t.label||"label",value:t.value||"value"}}function flattenTree(e,t){var n=arguments.length>2&&void 0!==arguments[2]?arguments[2]:[],a=getFilledFieldNames(t),o=[],r=a.children;return e.forEach(function(e){var a=n.concat(e);!t.changeOnSelect&&e[r]&&e[r].length||o.push(a),e[r]&&(o=o.concat(flattenTree(e[r],t,a)))}),o}var k=function defaultDisplayRender(e){return e.join(" / ")},D=function(e){function Cascader(e){(0,i.default)(this,Cascader);var t=(0,u.default)(this,(Cascader.__proto__||(0,l.default)(Cascader)).call(this,e));return w.call(t),t.state={value:e.value||e.defaultValue||[],inputValue:"",inputFocused:!1,popupVisible:e.popupVisible,flattenOptions:e.showSearch?flattenTree(e.options,e):void 0,prevProps:e},t}return(0,d.default)(Cascader,e),(0,s.default)(Cascader,null,[{key:"getDerivedStateFromProps",value:function getDerivedStateFromProps(e,t){var n=t.prevProps,a={prevProps:e};return"value"in e&&(a.value=e.value||[]),"popupVisible"in e&&(a.popupVisible=e.popupVisible),e.showSearch&&n.options!==e.options&&(a.flattenOptions=flattenTree(e.options,e)),a}}]),(0,s.default)(Cascader,[{key:"getLabel",value:function getLabel(){var e=this.props,t=e.options,n=e.displayRender,a=void 0===n?k:n,o=getFilledFieldNames(this.props),r=this.state.value,l=Array.isArray(r[0])?r[0]:r,i=(0,f.default)(t,function(e,t){return e[o.value]===l[t]},{childrenKeyName:o.children});return a(i.map(function(e){return e[o.label]}),i)}},{key:"generateFilteredOptions",value:function generateFilteredOptions(e,t){var n,a=this,o=this.props,l=o.showSearch,i=o.notFoundContent,u=getFilledFieldNames(this.props),s=l.filter,d=void 0===s?defaultFilterOption:s,c=l.render,p=void 0===c?defaultRenderFilteredOption:c,f=l.sort,m=void 0===f?defaultSortFilteredOption:f,h=l.limit,g=void 0===h?50:h,v=this.state,y=v.flattenOptions,b=void 0===y?[]:y,C=v.inputValue,_=void 0;if(g>0){_=[];var x=0;b.some(function(e){return d(a.state.inputValue,e,u)&&(_.push(e),x+=1),x>=g})}else(0,R.default)("number"!=typeof g,"Cascader","'limit' of showSearch should be positive number or false."),_=b.filter(function(e){return d(a.state.inputValue,e,u)});return _.sort(function(e,t){return m(e,t,C,u)}),_.length>0?_.map(function(t){var n;return n={__IS_FILTERED_OPTION:!0,path:t},(0,r.default)(n,u.label,p(C,t,e,u)),(0,r.default)(n,u.value,t.map(function(e){return e[u.value]})),(0,r.default)(n,"disabled",t.some(function(e){return!!e.disabled})),n}):[(n={},(0,r.default)(n,u.label,i||t("Cascader")),(0,r.default)(n,u.value,"ANT_CASCADER_NOT_FOUND"),(0,r.default)(n,"disabled",!0),n)]}},{key:"focus",value:function focus(){this.input.focus()}},{key:"blur",value:function blur(){this.input.blur()}},{key:"render",value:function render(){var e=this;return c.default.createElement(_.ConfigConsumer,null,function(t){return c.default.createElement(x.default,null,function(n){return e.renderCascader(t,n)})})}}]),Cascader}(c.default.Component);D.defaultProps={placeholder:"Please select",transitionName:"slide-up",popupPlacement:"bottomLeft",options:[],disabled:!1,allowClear:!0},D.propTypes={defaultValue:h.default.array,filter:h.default.bool,matchInputWidth:h.default.number,className:h.default.string,value:h.default.string,popupClassName:h.default.string,placeholder:h.default.string,size:h.default.string,disabled:h.default.bool,inputPrefixCls:h.default.string,popupVisible:h.default.bool,changeOnSelect:h.default.bool,loadData:h.default.func,onChange:h.default.func,showSearch:h.default.oneOfType([h.default.string,h.default.object])};var w=function _initialiseProps(){var e=this;this.cachedOptions=[],this.handleChange=function(t,n){if(e.setState({inputValue:""}),n[0].__IS_FILTERED_OPTION){var a=t[0],o=n[0].path;e.setValue(a,o)}else e.setValue(t,n)},this.handlePopupVisibleChange=function(t){"popupVisible"in e.props||e.setState(function(e){return{popupVisible:t,inputFocused:t,inputValue:t?e.inputValue:""}});var n=e.props.onPopupVisibleChange;n&&n(t)},this.handleInputBlur=function(){e.setState({inputFocused:!1})},this.handleInputClick=function(t){var n=e.state,a=n.inputFocused,o=n.popupVisible;(a||o)&&(t.stopPropagation(),t.nativeEvent.stopImmediatePropagation&&t.nativeEvent.stopImmediatePropagation())},this.handleKeyDown=function(e){e.keyCode===v.default.BACKSPACE&&e.stopPropagation()},this.handleInputChange=function(t){var n=t.target.value;e.setState({inputValue:n})},this.setValue=function(t){var n=arguments.length>1&&void 0!==arguments[1]?arguments[1]:[];"value"in e.props||e.setState({value:t});var a=e.props.onChange;a&&a(t,n)},this.clearSelection=function(t){t.preventDefault(),t.stopPropagation(),e.state.inputValue?e.setState({inputValue:""}):(e.setValue([]),e.handlePopupVisibleChange(!1))},this.saveInput=function(t){e.input=t},this.renderCascader=function(t,n){var l,i,u,s,d=t.getPopupContainer,f=t.getPrefixCls,h=t.renderEmpty,v=e.props,y=e.state,_=v.prefixCls,x=v.inputPrefixCls,R=v.children,k=v.placeholder,D=void 0===k?n.placeholder:k,w=v.size,S=v.disabled,P=v.className,q=v.style,I=v.allowClear,E=v.showSearch,T=void 0!==E&&E,N=v.suffixIcon,M=(0,o.default)(v,["prefixCls","inputPrefixCls","children","placeholder","size","disabled","className","style","allowClear","showSearch","suffixIcon"]),B=y.value,O=y.inputFocused,j=f("cascader",_),V=f("input",x),F=(0,m.default)((l={},(0,r.default)(l,V+"-lg","large"===w),(0,r.default)(l,V+"-sm","small"===w),l)),L=I&&!S&&B.length>0||y.inputValue?c.default.createElement(C.default,{type:"close-circle",theme:"filled",className:j+"-picker-clear",onClick:e.clearSelection}):null,A=(0,m.default)((i={},(0,r.default)(i,j+"-picker-arrow",!0),(0,r.default)(i,j+"-picker-arrow-expand",y.popupVisible),i)),z=(0,m.default)(P,j+"-picker",(u={},(0,r.default)(u,j+"-picker-with-value",y.inputValue),(0,r.default)(u,j+"-picker-disabled",S),(0,r.default)(u,j+"-picker-"+w,!!w),(0,r.default)(u,j+"-picker-show-search",!!T),(0,r.default)(u,j+"-picker-focused",O),u)),$=(0,g.default)(M,["onChange","options","popupPlacement","transitionName","displayRender","onPopupVisibleChange","changeOnSelect","expandTrigger","popupVisible","getPopupContainer","loadData","popupClassName","filterOption","renderFilteredOption","sortFilteredOption","notFoundContent","fieldNames","filedNames"]),K=v.options;y.inputValue&&(K=e.generateFilteredOptions(j,h)),y.popupVisible?e.cachedOptions=K:K=e.cachedOptions;var H={};1===(K||[]).length&&"ANT_CASCADER_NOT_FOUND"===K[0].value&&(H.height="auto"),!1!==T.matchInputWidth&&y.inputValue&&e.input&&(H.width=e.input.input.offsetWidth);var G=N&&(c.default.isValidElement(N)?c.default.cloneElement(N,{className:(0,m.default)((s={},(0,r.default)(s,N.props.className,N.props.className),(0,r.default)(s,j+"-picker-arrow",!0),s))}):c.default.createElement("span",{className:j+"-picker-arrow"},N))||c.default.createElement(C.default,{type:"down",className:A}),W=R||c.default.createElement("span",{style:q,className:z},c.default.createElement("span",{className:j+"-picker-label"},e.getLabel()),c.default.createElement(b.default,(0,a.default)({},$,{tabIndex:"-1",ref:e.saveInput,prefixCls:V,placeholder:B&&B.length>0?void 0:D,className:j+"-input "+F,value:y.inputValue,disabled:S,readOnly:!T,autoComplete:"off",onClick:T?e.handleInputClick:void 0,onBlur:T?e.handleInputBlur:void 0,onKeyDown:e.handleKeyDown,onChange:T?e.handleInputChange:void 0})),L,G),U=c.default.createElement(C.default,{type:"right"}),Y=c.default.createElement("span",{className:j+"-menu-item-loading-icon"},c.default.createElement(C.default,{type:"redo",spin:!0})),J=v.getPopupContainer||d,X=(0,g.default)(v,["inputIcon","expandIcon","loadingIcon"]);return c.default.createElement(p.default,(0,a.default)({},X,{prefixCls:j,getPopupContainer:J,options:K,value:B,popupVisible:y.popupVisible,onPopupVisibleChange:e.handlePopupVisibleChange,onChange:e.handleChange,dropdownMenuColumnStyle:H,expandIcon:U,loadingIcon:Y}),W)}};(0,y.polyfill)(D),t.default=D},,function(e,t,n){"use strict";n(1567)},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(43)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=_interopRequireDefault(n(1)),d=_interopRequireDefault(n(0)),c=_interopRequireDefault(n(8)),p=_interopRequireDefault(n(33)),f=_interopRequireDefault(n(775));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var m=function(e){function checkboxGroup(e){(0,r.default)(this,checkboxGroup);var t=(0,i.default)(this,(checkboxGroup.__proto__||(0,o.default)(checkboxGroup)).call(this,e));return t.toggleOption=function(e){var n=t.state.value.indexOf(e.value),o=[].concat((0,a.default)(t.state.value));-1===n?o.push(e.value):o.splice(n,1),"value"in t.props||t.setState({value:o});var r=t.props.onChange;r&&r(o)},t.state={value:e.value||e.defaultValue||[]},t}return(0,u.default)(checkboxGroup,e),(0,l.default)(checkboxGroup,[{key:"getChildContext",value:function getChildContext(){return{checkboxGroup:{toggleOption:this.toggleOption,value:this.state.value,disabled:this.props.disabled}}}},{key:"componentWillReceiveProps",value:function componentWillReceiveProps(e){"value"in e&&this.setState({value:e.value||[]})}},{key:"shouldComponentUpdate",value:function shouldComponentUpdate(e,t){return!(0,p.default)(this.props,e)||!(0,p.default)(this.state,t)}},{key:"getOptions",value:function getOptions(){return this.props.options.map(function(e){return"string"==typeof e?{label:e,value:e}:e})}},{key:"render",value:function render(){var e=this,t=this.props,n=this.state,a=t.prefixCls,o=t.className,r=t.style,l=t.options,i=t.children;l&&l.length>0&&(i=this.getOptions().map(function(o){return s.default.createElement(f.default,{key:o.value,readOnly:"readOnly"in o?o.readOnly:t.readOnly,disabled:"disabled"in o?o.disabled:t.disabled,value:o.value,checked:-1!==n.value.indexOf(o.value),onChange:function onChange(){return e.toggleOption(o)},className:a+"-item"},o.label)}));var u=(0,c.default)(a,o);return s.default.createElement("div",{className:u,style:r},i)}}]),checkboxGroup}(s.default.Component);m.defaultProps={options:[],prefixCls:"idoll-checkbox-group"},m.propTypes={defaultValue:d.default.array,value:d.default.array,options:d.default.array.isRequired,onChange:d.default.func},m.childContextTypes={checkboxGroup:d.default.any},t.default=m},,,,function(e,t,n){"use strict";n(30),n(1574)},function(e,t,n){},,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(85)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(7)),d=_interopRequireDefault(n(6));t.default=function createPicker(e){var t=function(e){function CalenderWrapper(e){(0,i.default)(this,CalenderWrapper);var t=(0,u.default)(this,(CalenderWrapper.__proto__||(0,r.default)(CalenderWrapper)).call(this,e));n.call(t);var a=e.value||e.defaultValue;if(a&&!(0,_.default)(p.default).isMoment(a))throw new Error("The value/defaultValue of DatePicker or MonthPicker must be a moment object after `antd@2.0`, see: https://u.ant.design/date-picker-value");return t.state={value:a,showDate:a,open:!1},t}return(0,d.default)(CalenderWrapper,e),(0,s.default)(CalenderWrapper,null,[{key:"getDerivedStateFromProps",value:function getDerivedStateFromProps(e,t){var n={},a=t.open;return"open"in e&&(n.open=e.open,a=e.open||!1),"value"in e&&(n.value=e.value,(e.value!==t.value||!a&&e.value!==t.showDate)&&(n.showDate=e.value)),(0,l.default)(n).length>0?n:null}}]),(0,s.default)(CalenderWrapper,[{key:"componentDidUpdate",value:function componentDidUpdate(e,t){"open"in this.props||!t.open||this.state.open||this.focus()}},{key:"focus",value:function focus(){this.input.focus()}},{key:"blur",value:function blur(){this.input.blur()}},{key:"render",value:function render(){return c.default.createElement(b.ConfigConsumer,null,this.renderPicker)}}]),CalenderWrapper}(c.default.Component);t.defaultProps={allowClear:!0,showToday:!0};var n=function _initialiseProps(){var t=this;this.renderFooter=function(){var e=t.props.renderExtraFooter,n=t.prefixCls;return e?c.default.createElement("div",{className:n+"-footer-extra"},e.apply(void 0,arguments)):null},this.clearSelection=function(e){e.preventDefault(),e.stopPropagation(),t.handleChange(null)},this.handleChange=function(e){var n=t.props;"value"in n||t.setState({value:e,showDate:e}),n.onChange(e,formatDate(e,n.format))},this.handleCalendarChange=function(e){t.setState({showDate:e})},this.handleOpenChange=function(e){var n=t.props.onOpenChange;"open"in t.props||t.setState({open:e}),n&&n(e)},this.saveInput=function(e){t.input=e},this.renderPicker=function(n){var r,l,i=n.getPrefixCls,u=t.state,s=u.value,d=u.showDate,f=u.open,b=(0,v.default)(t.props,["onChange"]),R=b.prefixCls,k=b.locale,D=b.localeCode,w=b.suffixIcon,S=i("calendar",R);t.prefixCls=S;var P="placeholder"in b?b.placeholder:k.lang.placeholder,q=b.showTime?b.disabledTime:null,I=(0,g.default)((r={},(0,o.default)(r,S+"-time",b.showTime),(0,o.default)(r,S+"-month",m.default===e),r));s&&D&&s.locale(D);var E={},T={},N={};b.showTime?(T={onSelect:t.handleChange},N.minWidth=195):E={onChange:t.handleChange},"mode"in b&&(T.mode=b.mode),(0,C.default)(!("onOK"in b),"DatePicker","It should be `DatePicker[onOk]` or `MonthPicker[onOk]`, instead of `onOK`!");var M=c.default.createElement(e,(0,a.default)({},T,{disabledDate:b.disabledDate,disabledTime:q,locale:k.lang,timePicker:b.timePicker,defaultValue:b.defaultPickerValue||(0,_.default)(p.default)(),dateInputPlaceholder:P,prefixCls:S,className:I,onOk:b.onOk,dateRender:b.dateRender,format:b.format,showToday:b.showToday,monthCellContentRender:b.monthCellContentRender,renderFooter:t.renderFooter,onPanelChange:b.onPanelChange,onChange:t.handleCalendarChange,value:d})),B=!b.disabled&&b.allowClear&&s?c.default.createElement(y.default,{type:"close-circle",className:S+"-picker-clear",onClick:t.clearSelection,theme:"filled"}):null,O=w&&(c.default.isValidElement(w)?c.default.cloneElement(w,{className:(0,g.default)((l={},(0,o.default)(l,w.props.className,w.props.className),(0,o.default)(l,S+"-picker-icon",!0),l))}):c.default.createElement("span",{className:S+"-picker-icon"},w))||c.default.createElement(y.default,{type:"calendar",className:S+"-picker-icon"}),j=(0,x.default)(b);return c.default.createElement("span",{id:b.id,className:(0,g.default)(b.className,b.pickerClass),style:(0,a.default)({},N,b.style),onFocus:b.onFocus,onBlur:b.onBlur,onMouseEnter:b.onMouseEnter,onMouseLeave:b.onMouseLeave},c.default.createElement(h.default,(0,a.default)({},b,E,{calendar:M,value:s,prefixCls:S+"-picker-container",style:b.popupStyle,open:f,onOpenChange:t.handleOpenChange}),function input(e){var n=e.value;return c.default.createElement("div",null,c.default.createElement("input",(0,a.default)({ref:t.saveInput,disabled:b.disabled,readOnly:!0,value:formatDate(n,b.format),placeholder:P,className:b.pickerInputClass,tabIndex:b.tabIndex,name:b.name},j)),B,O)}))}};return(0,f.polyfill)(t),t};var c=_interopRequireDefault(n(1)),p=_interopRequireDefault(n(12)),f=n(19),m=_interopRequireDefault(n(780)),h=_interopRequireDefault(n(527)),g=_interopRequireDefault(n(8)),v=_interopRequireDefault(n(74)),y=_interopRequireDefault(n(17)),b=n(66),C=_interopRequireDefault(n(67)),_=_interopRequireDefault(n(144)),x=_interopRequireDefault(n(762));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function formatDate(e,t){return e?(Array.isArray(t)&&(t=t[0]),e.format(t)):""}},,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(9)),o=_interopRequireDefault(n(3)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(6));t.default=function wrapPicker(e,t){var n=function(n){function PickerWrapper(){var n,i,s,c;(0,l.default)(this,PickerWrapper);for(var p=arguments.length,m=Array(p),_=0;_<p;_++)m[_]=arguments[_];return i=s=(0,u.default)(this,(n=PickerWrapper.__proto__||(0,r.default)(PickerWrapper)).call.apply(n,[this].concat(m))),s.state={},s.handleOpenChange=function(e){(0,s.props.onOpenChange)(e)},s.handleFocus=function(e){var t=s.props.onFocus;t&&t(e)},s.handleBlur=function(e){var t=s.props.onBlur;t&&t(e)},s.handleMouseEnter=function(e){var t=s.props.onMouseEnter;t&&t(e)},s.handleMouseLeave=function(e){var t=s.props.onMouseLeave;t&&t(e)},s.savePicker=function(e){s.picker=e},s.getDefaultLocale=function(){var e=(0,o.default)({},y.default,s.props.locale);return e.lang=(0,o.default)({},e.lang,(s.props.locale||{}).lang),e},s.renderPicker=function(n,r){var l=s.props,i=l.format,u=l.showTime,c=u?"dateTime":t,p=i||n[C[c]]||b[c];return d.default.createElement(v.ConfigConsumer,null,function(t){var l,i=t.getPrefixCls,c=t.getPopupContainer,m=s.props,v=m.prefixCls,y=m.getCalendarContainer,b=m.inpitPrefixCls,C=m.size,_=m.disabled,x=y||c,R=i("calendar",v),k=i("input",b),D=(0,h.default)(R+"-picker",(0,a.default)({},R+"-picker-"+C,!!C)),w=(0,h.default)(R+"-picker-input",k,(l={},(0,a.default)(l,k+"-lg","large"===C),(0,a.default)(l,k+"-sm","small"===C),(0,a.default)(l,k+"-disabled",_),l)),S=u&&u.format||"HH:mm:ss",P=(0,o.default)({},(0,g.generateShowHourMinuteSecond)(S),{format:S,use12Hours:u&&u.use12Hours}),q=R+"-time-picker-column-"+getColumns(P),I=u?d.default.createElement(f.default,(0,o.default)({},P,u,{prefixCls:R+"-time-picker",className:q,placeholder:n.timePickerLocale.placeholder,transitionName:"slide-up"})):null;return d.default.createElement(e,(0,o.default)({},s.props,{getCalendarContainer:x,format:p,ref:s.savePicker,pickerClass:D,pickerInputClass:w,locale:n,localeCode:r,timePicker:I,onOpenChange:s.handleOpenChange,onFocus:s.handleFocus,onBlur:s.onBlur,onMouseEnter:s.handleMouseEnter,onMouseLeave:s.handleMouseLeave}))})},c=i,(0,u.default)(s,c)}return(0,s.default)(PickerWrapper,n),(0,i.default)(PickerWrapper,[{key:"componentDidMount",value:function componentDidMount(){var e=this.props;e.autoFocus,e.disabled}},{key:"focus",value:function focus(){this.picker.focus()}},{key:"blur",value:function blur(){this.picker.blur()}},{key:"render",value:function render(){return d.default.createElement(m.default,{componentName:"DatePicker",defaultLocale:this.getDefaultLocale},this.renderPicker)}}],[{key:"getDerivedStateFromProps",value:function getDerivedStateFromProps(e){var t=e.value;return checkValidate(e.defaultValue),checkValidate(t),{}}}]),PickerWrapper}(d.default.Component);return n.defaultProps={transitionName:"slide-up",popupStyle:{},onChange:function onChange(){},onOpenChange:function onOpenChange(){},locale:{},prefixCls:"idoll-calendar",inputPrefixCls:"idoll-input"},n.propTypes={format:p.default.oneOfType([p.default.string,p.default.array]),transitionName:p.default.string,popupStyle:p.default.object,locale:p.default.object,prefixCls:p.default.string,inputPrefixCls:p.default.string},(0,c.polyfill)(n),n};var d=_interopRequireDefault(n(1)),c=n(19),p=_interopRequireDefault(n(0)),f=_interopRequireDefault(n(786)),m=_interopRequireDefault(n(99)),h=_interopRequireDefault(n(8)),g=n(787),v=n(66),y=_interopRequireDefault(n(262));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(788);var b={date:"YYYY-MM-DD",dateTime:"YYYY-MM-DD HH:mm:ss",week:"gggg-wo",month:"YYYY-MM"},C={date:"dateFormat",dateTime:"dateTimeFormat",week:"weekFormat",month:"monthFormat"};function getColumns(e){var t=0;return e.showHour&&(t+=1),e.showMinute&&(t+=1),e.showSecond&&(t+=1),e.use12Hours&&(t+=1),t}function checkValidate(e){(Array.isArray(e)?e:[e]).forEach(function(e){if(!e)return!1})}},,,,,,,function(e,t,n){},function(e,t,n){"use strict";n(30),n(1591),n(101)},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(9)),o=_interopRequireDefault(n(85)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(3)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(7)),d=_interopRequireDefault(n(6)),c=_interopRequireDefault(n(271)),p=_interopRequireDefault(n(1)),f=_interopRequireDefault(n(12)),m=n(19),h=_interopRequireDefault(n(1594)),g=_interopRequireDefault(n(527)),v=_interopRequireDefault(n(8)),y=_interopRequireDefault(n(33)),b=_interopRequireDefault(n(17)),C=_interopRequireDefault(n(193)),_=n(66),x=_interopRequireDefault(n(67)),R=_interopRequireDefault(n(144));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function formatDate(e,t){return e?(Array.isArray(t)&&(t=t[0]),e.format(t)):""}function getShowDateFromValue(e){var t=(0,c.default)(e,2),n=t[0],a=t[1];if(n||a)return[n,a&&a.isSame(n,"month")?a.clone().add(1,"month"):a]}function pickerValueAdapter(e){if(e)return Array.isArray(e)?e:[e,e.clone().add(1,"month")]}function fixLocale(e,t){if(t&&e&&0!==e.length){var n=(0,c.default)(e,2),a=n[0],o=n[1];a&&a.locale(t),o&&o.locale(t)}}var k=function(e){function RangePicker(e){(0,i.default)(this,RangePicker);var t=(0,u.default)(this,(RangePicker.__proto__||(0,r.default)(RangePicker)).call(this,e));D.call(t);var n=e.value||e.defaultValue||[],a=(0,c.default)(n,2),o=a[0],l=a[1];if(o&&!(0,R.default)(f.default).isMoment(o)||l&&!(0,R.default)(f.default).isMoment(l))throw new Error("The value/defaultValue of RangePicker must be a moment object array after `antd@2.0`, see: https://u.ant.design/date-picker-value");var s,d=n&&(s=n,!Array.isArray(s)||0!==s.length&&!s.every(function(e){return!e}))?n:e.defaultPickerValue;return t.state={value:n,showDate:pickerValueAdapter(d||(0,R.default)(f.default)()),open:e.open,hoverValue:[]},t}return(0,d.default)(RangePicker,e),(0,s.default)(RangePicker,null,[{key:"getDerivedStateFromProps",value:function getDerivedStateFromProps(e,t){var n=null,a=null;return"value"in e&&(n=t.open?{value:a=t.value||[]}:{value:a=e.value||[]},(0,y.default)(e.value,t.value)||(n=(0,l.default)({},n,{showDate:getShowDateFromValue(a)||t.showDate}))),"open"in e&&t.open!==e.open&&(n=(0,l.default)({},n,{open:e.open})),n}}]),(0,s.default)(RangePicker,[{key:"componentDidUpdate",value:function componentDidUpdate(e,t){"open"in this.props||!t.open||this.state.open||this.focus()}},{key:"setValue",value:function setValue(e,t){this.handleChange(e),!t&&this.props.showTime||"open"in this.props||this.setState({open:!1})}},{key:"focus",value:function focus(){this.picker.focus()}},{key:"blur",value:function blur(){this.picker.blur()}},{key:"render",value:function render(){return p.default.createElement(_.ConfigConsumer,null,this.renderRangePicker)}}]),RangePicker}(p.default.Component);k.defaultProps={allowClear:!0,showToday:!1,separator:"~"};var D=function _initialiseProps(){var e=this;this.clearSelection=function(t){t.preventDefault(),t.stopPropagation(),e.setState({value:[]}),e.handleChange([])},this.clearHoverValue=function(){return e.setState({hoverValue:[]})},this.handleChange=function(t){var n=e.props;"value"in n||e.setState(function(e){var n=e.showDate;return{value:t,showDate:getShowDateFromValue(t)||n}});var a=(0,c.default)(t,2),o=a[0],r=a[1];n.onChange(t,[formatDate(o,n.format),formatDate(r,n.format)])},this.handleOpenChange=function(t){"open"in e.props||e.setState({open:t}),!1===t&&e.clearHoverValue();var n=e.props.onOpenChange;n&&n(t)},this.handleShowDateChange=function(t){return e.setState({showDate:t})},this.handleHoverChange=function(t){return e.setState({hoverValue:t})},this.handleRangeMouseLeave=function(){e.state.open&&e.clearHoverValue()},this.handleCalendarInputSelect=function(t){(0,c.default)(t,1)[0]&&e.setState(function(e){var n=e.showDate;return{value:t,showDate:getShowDateFromValue(t)||n}})},this.handleRangeClick=function(t){"function"==typeof t&&(t=t()),e.setValue(t,!0);var n=e.props,a=n.onOk,o=n.onOpenChange;a&&a(t),o&&o(!1)},this.savePicker=function(t){e.picker=t},this.renderFooter=function(){var t=e.props,n=t.ranges,a=t.renderExtraFooter,r=e.prefixCls,l=e.tagPrefixCls;if(!n&&!a)return null;var i=a?p.default.createElement("div",{className:r+"-footer-extra",key:"extra"},a.apply(void 0,arguments)):null,u=(0,o.default)(n||{}).map(function(t){var a=n[t];return p.default.createElement(C.default,{key:t,prefixCls:l,color:"blue",onClick:function onClick(){return e.handleRangeClick(a)},onMouseEnter:function onMouseEnter(){return e.setState({hoverValue:a})},onMouseLeave:e.handleRangeMouseLeave},t)}),s=u&&u.length>0?p.default.createElement("div",{className:r+"-footer-extra "+r+"-range-quick-selector",key:"range"},u):null;return[s,i]},this.renderRangePicker=function(t){var n,o,r=t.getPrefixCls,i=e.state,u=e.props,s=i.value,d=i.showDate,f=i.hoverValue,m=i.open,y=u.prefixCls,C=u.tagPrefixCls,_=u.popupStyle,R=u.style,k=u.disabledDate,D=u.disabledTime,w=u.showTime,S=u.showToday,P=u.ranges,q=u.onOk,I=u.locale,E=u.localeCode,T=u.format,N=u.dateRender,M=u.onCalendarChange,B=u.suffixIcon,O=u.separator,j=r("calendar",y),V=r("tag",C);e.prefixCls=j,e.tagPrefixCls=V,fixLocale(s,E),fixLocale(d,E),(0,x.default)(!("onOK"in u),"RangePicker","It should be `RangePicker[onOk]`, instead of `onOK`!");var F=(0,v.default)((n={},(0,a.default)(n,j+"-time",w),(0,a.default)(n,j+"-range-with-ranges",P),n)),L={onChange:e.handleChange},A={onOk:e.handleChange};u.timePicker?L.onChange=function(t){return e.handleChange(t)}:A={},"mode"in u&&(A.mode=u.mode);var z="placeholder"in u?u.placeholder[0]:I.lang.rangePlaceholder[0],$="placeholder"in u?u.placeholder[1]:I.lang.rangePlaceholder[1],K=p.default.createElement(h.default,(0,l.default)({},A,{seperator:O,onChange:M,format:T,prefixCls:j,className:F,renderFooter:e.renderFooter,timePicker:u.timePicker,disabledDate:k,disabledTime:D,dateInputPlaceholder:[z,$],locale:I.lang,onOk:q,dateRender:N,value:d,onValueChange:e.handleShowDateChange,hoverValue:f,onHoverChange:e.handleHoverChange,onPanelChange:u.onPanelChange,showToday:S,onInputSelect:e.handleCalendarInputSelect})),H={};u.showTime&&(H.width=R&&R.width||350);var G=(0,c.default)(s,2),W=G[0],U=G[1],Y=!u.disabled&&u.allowClear&&s&&(W||U)?p.default.createElement(b.default,{type:"close-circle",className:j+"-picker-clear",onClick:e.clearSelection,theme:"filled"}):null,J=B&&(p.default.isValidElement(B)?p.default.cloneElement(B,{className:(0,v.default)((o={},(0,a.default)(o,B.props.className,B.props.className),(0,a.default)(o,j+"-picker-icon",!0),o))}):p.default.createElement("span",{className:j+"-picker-icon"},B))||p.default.createElement(b.default,{type:"calendar",className:j+"-picker-icon"});return p.default.createElement("span",{ref:e.savePicker,id:u.id,className:(0,v.default)(u.className,u.pickerClass),style:(0,l.default)({},R,H),tabIndex:u.disabled?-1:0,onFocus:u.onFocus,onBlur:u.onBlur,onMouseEnter:u.onMouseEnter,onMouseLeave:u.onMouseLeave},p.default.createElement(g.default,(0,l.default)({},u,L,{calendar:K,value:s,open:m,onOpenChange:e.handleOpenChange,prefixCls:j+"-picker-container",style:_}),function input(e){var t=e.value,n=(0,c.default)(t,2),a=n[0],o=n[1];return p.default.createElement("span",{className:u.pickerInputClass},p.default.createElement("input",{disabled:u.disabled,readOnly:!0,value:formatDate(a,u.format),placeholder:z,className:j+"-range-picker-input",tabIndex:-1}),p.default.createElement("span",{className:j+"-range-picker-separator"}," ",O," "),p.default.createElement("input",{disabled:u.disabled,readOnly:!0,value:formatDate(o,u.format),placeholder:$,className:j+"-range-picker-input",tabIndex:-1}),Y,J)}))}};(0,m.polyfill)(k),t.default=k},,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(43)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=_interopRequireDefault(n(1)),d=_interopRequireDefault(n(790)),c=_interopRequireDefault(n(264)),p=_interopRequireDefault(n(17)),f=_interopRequireDefault(n(0));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var m=function(e){function TagGroup(){var e,t,n,l;(0,r.default)(this,TagGroup);for(var u=arguments.length,s=Array(u),d=0;d<u;d++)s[d]=arguments[d];return t=n=(0,i.default)(this,(e=TagGroup.__proto__||(0,o.default)(TagGroup)).call.apply(e,[this].concat(s))),n.state={tags:n.props.tags||["电影","书籍","音乐"],inputVisible:!1,inputValue:"",id:n.props.id||0,text:n.props.text||"添加",iconType:n.props.iconType||"plus"},n.handleClose=function(e){var t=n.state.tags.filter(function(t){return t!==e});n.setState({tags:t})},n.showInput=function(){n.setState({inputVisible:!0},function(){return n.input.focus()})},n.handleInputChange=function(e){n.setState({inputValue:e.target.value})},n.handleInputConfirm=function(){var e=n.state.inputValue,t=n.state.tags;e&&-1===t.indexOf(e)&&(t=[].concat((0,a.default)(t),[e])),n.setState({tags:t,inputVisible:!1,inputValue:""})},n.saveInputRef=function(e){n.input=e},l=t,(0,i.default)(n,l)}return(0,u.default)(TagGroup,e),(0,l.default)(TagGroup,[{key:"render",value:function render(){var e=this,t=this.state,n=t.tags,a=t.inputVisible,o=t.inputValue,r=this.props.color;return s.default.createElement("div",{className:"group"},n.map(function(t,n){return s.default.createElement(d.default,{color:r||"",key:t,closable:n!==e.state.id,afterClose:function afterClose(){return e.handleClose(t)}},t)}),a&&s.default.createElement(c.default,{ref:this.saveInputRef,type:"text",size:"small",style:{width:78},value:o,onChange:this.handleInputChange,onBlur:this.handleInputConfirm,onPressEnter:this.handleInputConfirm}),!a&&s.default.createElement(d.default,{className:"sdfsf",style:{borderStyle:"dashed"},onClick:this.showInput,color:r||""},s.default.createElement(p.default,{style:{color:r||""},type:this.state.iconType}),s.default.createElement("div",{style:{marginLeft:"4px"}},this.state.text)))}}]),TagGroup}(s.default.Component);m.propTypes={id:f.default.number,tags:f.default.array,text:f.default.string,iconType:f.default.string},t.default=m},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(6)),d=_interopRequireDefault(n(1)),c=_interopRequireDefault(n(12)),p=n(19),f=_interopRequireDefault(n(814)),m=_interopRequireDefault(n(527)),h=_interopRequireDefault(n(8)),g=_interopRequireDefault(n(0)),v=_interopRequireDefault(n(17)),y=_interopRequireDefault(n(144));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function formatValue(e,t){return e&&(0,c.default)(e).format(t)||""}var b=function(e){function WeekPicker(e){(0,l.default)(this,WeekPicker);var t=(0,i.default)(this,(WeekPicker.__proto__||(0,r.default)(WeekPicker)).call(this,e));C.call(t);var n=e.value||e.defaultValue;if(n&&!(0,y.default)(c.default).isMoment(n))throw new Error;return t.state={value:n},t}return(0,s.default)(WeekPicker,e),(0,u.default)(WeekPicker,null,[{key:"getDerivedStateFromProps",value:function getDerivedStateFromProps(e){return"value"in e?{value:e.value}:null}}]),(0,u.default)(WeekPicker,[{key:"focus",value:function focus(){this.input.focus()}},{key:"blur",value:function blur(){this.input.blur()}},{key:"render",value:function render(){var e,t=this,n=this.props,r=n.prefixCls,l=n.className,i=n.disabled,u=n.pickerClass,s=n.popupStyle,p=n.pickerInputClass,g=n.format,y=n.allowClear,b=n.locale,C=n.localeCode,_=n.disabledDate,x=n.style,R=n.onFocus,k=n.onBlur,D=n.id,w=n.suffixIcon,S=this.state.value;S&&C&&(0,c.default)(S).locale(C);var P="placeholder"in this.props?this.props.placeholder:b.lang.placeholder,q=d.default.createElement(f.default,{showWeekNumber:!0,dateRender:this.weekDateRender,prefixCls:r,format:g,locale:b.lang,showDateInput:!1,showToday:!1,disabledDate:_}),I=!i&&y&&this.state.value?d.default.createElement(v.default,{type:"close-circle",className:r+"-picker-clear",onClick:this.clearSelection,theme:"filled"}):null,E=w&&(d.default.isValidElement(w)?d.default.cloneElement(w,{className:(0,h.default)((e={},(0,o.default)(e,w.props.className,w.props.className),(0,o.default)(e,r+"-picker-icon",!0),e))}):d.default.createElement("span",{className:r+"-picker-icon"},w))||d.default.createElement(v.default,{type:"calendar",className:r+"-picker-icon"});return d.default.createElement("span",{className:(0,h.default)(l,u),style:x,id:D},d.default.createElement(m.default,(0,a.default)({},this.props,{calendar:q,prefixCls:r+"-picker-container",value:S,onChange:this.handleChange,style:s}),function input(e){var n=e.value;return d.default.createElement("span",null,d.default.createElement("input",{ref:t.saveInput,disabled:i,readOnly:!0,value:n&&(0,c.default)(n).format(g)||"",placeholder:P,className:p,onFocus:R,onBlur:k}),I,E)}))}}]),WeekPicker}(d.default.Component);b.propTypes={format:g.default.string,allowClear:g.default.bool,prefixCls:g.default.string,className:g.default.string,disabled:g.default.bool,pickerClass:g.default.string,popupStyle:g.default.object,style:g.default.object,suffixIcon:g.default.element,onFocus:g.default.func,onBlur:g.default.func,disabledDate:g.default.func,locale:g.default.object,localeCode:g.default.object},b.defaultProps={format:"gggg-wo",allowClear:!0};var C=function _initialiseProps(){var e=this;this.weekDateRender=function(t){var n=e.state.value,a=e.props.prefixCls;return n&&(0,c.default)(t).year()===(0,c.default)(n).year()&&(0,c.default)(t).week()===(0,c.default)(n).week()?d.default.createElement("div",{className:a+"-selected-day"},d.default.createElement("div",{className:a+"-date"},(0,c.default)(t).date())):d.default.createElement("div",{className:a+"-date"},(0,c.default)(t).date())},this.handleChange=function(t){"value"in e.props||e.setState({value:t}),e.props.onChange(t,formatValue(t,e.props.format)),e.focus()},this.clearSelection=function(t){t.preventDefault(),t.stopPropagation(),e.handleChange(null)},this.saveInput=function(t){e.input=t}};(0,p.polyfill)(b),t.default=b},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(15)),l=_interopRequireDefault(n(1)),i=_interopRequireDefault(n(8)),u=_interopRequireDefault(n(0));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1601);var s=function Divider(e){var t,n=e.prefixCls,u=void 0===n?"idoll":n,s=e.type,d=void 0===s?"horizontal":s,c=e.orientation,p=void 0===c?"":c,f=e.className,m=e.children,h=e.dashed,g=(0,r.default)(e,["prefixCls","type","orientation","className","children","dashed"]),v=p.length>0?"-"+p:p,y=(0,i.default)(f,u+"-divider",u+"-divider-"+d,(t={},(0,o.default)(t,u+"-divider-with-text"+v,m),(0,o.default)(t,u+"-divider-dashed",!!h),t));return l.default.createElement("div",(0,a.default)({className:y},g),m&&l.default.createElement("span",{className:u+"-divider-inner-text"},m))};s.propTypes={prefixCls:u.default.string,type:u.default.string,className:u.default.string,dashed:u.default.bool,style:u.default.object},t.default=s},function(e,t,n){"use strict";n(1602)},function(e,t,n){},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(15)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=_interopRequireDefault(n(1)),p=_interopRequireDefault(n(75)),f=_interopRequireDefault(n(17)),m=n(0),h=_interopRequireDefault(n(656)),g=_interopRequireDefault(n(8));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var v=p.default.Group,y=function(e){function DropdownButton(){var e,t,n,a;(0,i.default)(this,DropdownButton);for(var o=arguments.length,r=Array(o),u=0;u<o;u++)r[u]=arguments[u];return t=n=(0,s.default)(this,(e=DropdownButton.__proto__||(0,l.default)(DropdownButton)).call.apply(e,[this].concat(r))),n.state={visible:!1},n.onChange=function(e){n.setState({visible:e})},n.onClickChange=function(e){n.setState({visible:e.item.props.isSelected})},a=t,(0,s.default)(n,a)}return(0,d.default)(DropdownButton,e),(0,u.default)(DropdownButton,[{key:"render",value:function render(){var e,t=this.props,n=t.type,l=t.disabled,i=t.children,u=t.prefixCls,s=t.className,d=t.overlay,m=t.trigger,y=t.size,b=t.align,C=t.visible,_=t.placement,x=t.getPopupContainer,R=(0,r.default)(t,["type","disabled","children","prefixCls","className","overlay","trigger","size","align","visible","placement","getPopupContainer"]),k={align:b,overlay:d,trigger:l?[]:m,placement:_,getPopupContainer:x},D=(0,g.default)((e={className:s,placement:"bottomLeft"},(0,o.default)(e,u,!0),(0,o.default)(e,u+"-disabled",l),e));return"visible"in this.props&&(k.visible=C),c.default.createElement(v,(0,a.default)({},R,{className:D}),c.default.createElement(h.default,(0,a.default)({onOverlayClick:this.onClickChange,disabled:l},k,{onVisibleChange:this.onChange}),c.default.createElement(p.default,{type:n,size:y,disabled:l},i,c.default.createElement(f.default,{type:"down"}))))}}]),DropdownButton}(c.default.Component);y.propTypes={type:m.PropTypes.string,trigger:m.PropTypes.array,overlay:m.PropTypes.any,disabled:m.PropTypes.bool,onClick:m.PropTypes.func,visible:m.PropTypes.bool,placement:m.PropTypes.string,size:m.PropTypes.string},y.defaultProps={placement:"bottomLeft",prefixCls:"idoll-dropdown-button"},t.default=y},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(15)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=_interopRequireDefault(n(1)),p=_interopRequireDefault(n(17)),f=_interopRequireDefault(n(656)),m=_interopRequireDefault(n(8));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var h=function(e){function DropdownNormal(){var e,t,n,a;(0,i.default)(this,DropdownNormal);for(var o=arguments.length,r=Array(o),u=0;u<o;u++)r[u]=arguments[u];return t=n=(0,s.default)(this,(e=DropdownNormal.__proto__||(0,l.default)(DropdownNormal)).call.apply(e,[this].concat(r))),n.state={visible:!1},n.onChange=function(e){n.setState({visible:e})},n.onClickChange=function(e){n.setState({visible:e.item.props.isSelected})},a=t,(0,s.default)(n,a)}return(0,d.default)(DropdownNormal,e),(0,u.default)(DropdownNormal,[{key:"render",value:function render(){var e,t=this.props,n=t.children,l=t.prefixCls,i=t.disabled,u=t.className,s=t.overlay,d=t.trigger,h=t.align,g=(0,r.default)(t,["children","prefixCls","disabled","className","overlay","trigger","align"]),v=(0,m.default)((e={},(0,o.default)(e,l,!0),(0,o.default)(e,l+"-disabled",i),(0,o.default)(e,u,!!u),e));return c.default.createElement(f.default,(0,a.default)({onOverlayClick:this.onClickChange},g,{className:v,align:h,overlay:s,trigger:d,onVisibleChange:this.onChange}),c.default.createElement("a",{href:"javascript:;"},n,c.default.createElement(p.default,{type:"down"})))}}]),DropdownNormal}(c.default.Component);h.defaultProps={prefixCls:"idoll-dropdown-normal"},t.default=h},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(15)),o=_interopRequireDefault(n(3)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(6)),d=_interopRequireDefault(n(1)),c=_interopRequireDefault(n(0)),p=_interopRequireDefault(n(1939)),f=_interopRequireDefault(n(25)),m=_interopRequireDefault(n(8)),h=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1607);var g=function(e){function Drawer(e){(0,l.default)(this,Drawer);var t=(0,u.default)(this,(Drawer.__proto__||(0,r.default)(Drawer)).call(this,e));return t.close=function(e){if(void 0!==t.props.visible)return t.props.onClose&&t.props.onClose(e),!1},t.maskClick=function(e){t.props.maskClosable&&t.close(e)},t.push=function(){t.setState({push:!0})},t.pull=function(){t.setState({push:!1})},t.onDestoryTransitionEnd=function(){t.getDestoryOnClose()&&(t.props.visible||(t.destoryClose=!0,t.forceUpdate()))},t.getDestoryOnClose=function(){return t.props.destroyOnClose&&!t.props.visible},t.getPushTransform=function(e){return"left"===e||"right"===e?"translateX("+("left"===e?180:-180)+"px)":"top"===e||"bottom"===e?"translateY("+("top"===e?180:-180)+"px)":void 0},t.renderBody=function(){if(t.destoryClose&&!t.props.visible)return null;t.destoryClose=!1;var e=t.props.placement,n="left"===e||"right"===e?{overflow:"auto",height:"100%"}:{};t.getDestoryOnClose()&&(n.opacity=0,n.transition="opacity .3s");var a=t.props,o=a.prefixCls,r=a.title,l=a.closable,i=void 0;r&&(i=d.default.createElement("div",{className:o+"-header"},d.default.createElement("div",{className:o+"-title"},r)));var u=void 0;return l&&(u=d.default.createElement("button",{onClick:t.close,"aria-label":"Close",className:o+"-close"},d.default.createElement("span",{className:o+"-close-x"},d.default.createElement(h.default,{type:"close"})))),d.default.createElement("div",{className:o+"-wrapper-body",style:n,onTransitionEnd:t.onDestoryTransitionEnd},i,u,d.default.createElement("div",{className:o+"-body",style:t.props.style},t.props.children))},t.getRcDrawerStyle=function(){var e=t.props,n=e.zIndex,a=e.placement,r=e.maskStyle;return t.state.push?(0,o.default)({},r,{zIndex:n,transform:t.getPushTransform(a)}):(0,o.default)({},r,{zIndex:n})},t.state={push:!1},t}return(0,s.default)(Drawer,e),(0,i.default)(Drawer,[{key:"componentDidUpdate",value:function componentDidUpdate(e){e.visible!==this.props.visible&&this.parentDrawer&&(this.props.visible?this.parentDrawer.push():this.parentDrawer.pull())}},{key:"render",value:function render(){var e=this.props,t=e.placement,n=e.className,r=e.wrapClassName,l=e.width,i=e.height,u=(0,a.default)(e,["placement","className","wrapClassName","width","height"]);(0,f.default)(void 0===r,"wrapClassName is deprecated, please use className instead.");var s=u.mask?"":"no-mask",c={};return"left"===t||"right"===t?c.width=l:c.height=i,d.default.createElement(p.default,(0,o.default)({handler:!1},u,c,{open:this.props.visible,onMaskClick:this.maskClick,showMask:this.props.mask,placement:t,style:this.getRcDrawerStyle(),className:(0,m.default)(r,n,s)}),this.renderBody())}}]),Drawer}(d.default.Component);g.propTypes={closable:c.default.bool,destroyOnClose:c.default.bool,getContainer:c.default.oneOfType([c.default.string,c.default.object,c.default.func,c.default.bool]),maskClosable:c.default.bool,mask:c.default.bool,maskStyle:c.default.object,style:c.default.object,title:c.default.node,visible:c.default.bool,width:c.default.oneOfType([c.default.string,c.default.number]),zIndex:c.default.number,prefixCls:c.default.string,placement:c.default.string,onClose:c.default.func,className:c.default.string},g.defaultProps={prefixCls:"idoll-drawer",width:256,height:256,closable:!0,placement:"right",maskClosable:!0,mask:!0,level:null},t.default=g},function(e,t,n){"use strict";n(1608),n(265)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(6)),d=_interopRequireDefault(n(1)),c=_interopRequireDefault(n(0)),p=_interopRequireDefault(n(8)),f=_interopRequireDefault(n(1610)),m=_interopRequireDefault(n(795)),h=_interopRequireDefault(n(195)),g=_interopRequireDefault(n(74)),v=_interopRequireDefault(n(67)),y=_interopRequireDefault(n(796)),b=n(797);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1645);var C=function(e){function Form(e){(0,l.default)(this,Form);var t=(0,u.default)(this,(Form.__proto__||(0,r.default)(Form)).call(this,e));return(0,v.default)(!e.form),t}return(0,s.default)(Form,e),(0,i.default)(Form,[{key:"shouldComponentUpdate",value:function shouldComponentUpdate(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return h.default.shouldComponentUpdate.apply(this,t)}},{key:"getChildContext",value:function getChildContext(){return{vertical:"vertical"===this.props.layout}}},{key:"render",value:function render(){var e,t=this.props,n=t.prefixCls,r=t.className,l=void 0===r?"":r,i=t.layout,u=(0,p.default)(n,(e={},(0,o.default)(e,n+"-horizontal","horizontal"===i),(0,o.default)(e,n+"-vertical","vertical"===i),(0,o.default)(e,n+"-inline","inline"===i),e),l),s=(0,g.default)(this.props,["prefixCls","className","layout","form"]);return d.default.createElement("form",(0,a.default)({},s,{className:u}))}}]),Form}(d.default.Component);C.defaultProps={prefixCls:"idoll-form",layout:"horizontal",onSubmit:function onSubmit(e){e.preventDefault()}},C.propTypes={prefixCls:c.default.string,children:c.default.any,onSubmit:c.default.func},C.childContextTypes={vertical:c.default.bool},C.Item=y.default,C.createFormField=m.default,C.create=function(e){return(0,f.default)((0,a.default)({fieldNameProp:"id"},e,{fieldMetaProp:b.FIELD_META_PROP,fieldDataProp:b.FIELD_DATA_PROP}))},t.default=C},,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,function(e,t,n){},function(e,t,n){"use strict";n(30),n(1646),n(661)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(15)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=_interopRequireDefault(n(1)),p=_interopRequireDefault(n(0)),f=_interopRequireDefault(n(8)),m=_interopRequireDefault(n(1942)),h=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1648);var g=function(e){function InputNumber(){var e,t,n,a;(0,i.default)(this,InputNumber);for(var o=arguments.length,r=Array(o),u=0;u<o;u++)r[u]=arguments[u];return t=n=(0,s.default)(this,(e=InputNumber.__proto__||(0,l.default)(InputNumber)).call.apply(e,[this].concat(r))),n.focus=function(){n.inputNumberRef.focus()},n.blur=function(){n.inputNumberRef.blur()},a=t,(0,s.default)(n,a)}return(0,d.default)(InputNumber,e),(0,u.default)(InputNumber,[{key:"render",value:function render(){var e,t=this,n=this.props,l=n.className,i=n.size,u=(0,r.default)(n,["className","size"]),s=(0,f.default)((e={},(0,o.default)(e,this.props.prefixCls+"-lg","large"===i),(0,o.default)(e,this.props.prefixCls+"-sm","small"===i),e),l),d=c.default.createElement(h.default,{type:"up",className:this.props.prefixCls+"-handle-up-inner"}),p=c.default.createElement(h.default,{type:"down",className:this.props.prefixCls+"-handle-down-inner"});return c.default.createElement(m.default,(0,a.default)({ref:function ref(e){t.inputNumberRef=e},className:s,upHandler:d,downHandler:p},u))}}]),InputNumber}(c.default.Component);g.propTypes={defaultValue:p.default.number,disabled:p.default.bool,min:p.default.number,max:p.default.number,parser:p.default.func,precision:p.default.number,size:p.default.oneOf(["small","default","large"]),step:p.default.number},g.defaultProps={prefixCls:"idoll-input-number",step:1},t.default=g},function(e,t,n){"use strict";n(1649),n(30)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(85)),r=_interopRequireDefault(n(1)),l=_interopRequireDefault(n(0)),i=_interopRequireDefault(n(8));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function Layout(e){var t=e.children,n=e.className,l=e.style,u=[];t&&t.length&&(u=t.filter(function(e){return-1!==(0,o.default)(e.type.propTypes).indexOf("collapsed")}));var s=(0,i.default)({"idoll-layout":"idoll-layout","idoll-layout-has-sider":u.length},n);return r.default.createElement("div",(0,a.default)({},e,{style:l,className:s}),t)}n(147),Layout.propTypes={children:l.default.node},t.default=Layout},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(87)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=n(1),p=_interopRequireDefault(c),f=_interopRequireDefault(n(0)),m=_interopRequireDefault(n(8)),h=_interopRequireDefault(n(191));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(147);var g=function(e){function Sider(e){(0,i.default)(this,Sider);var t=(0,s.default)(this,(Sider.__proto__||(0,l.default)(Sider)).call(this,e)),n=void 0;return n="collapsed"in e&&e.collapsed,t.state={collapsed:n},t}return(0,d.default)(Sider,e),(0,u.default)(Sider,[{key:"componentWillReceiveProps",value:function componentWillReceiveProps(e){"collapsed"in e&&this.setState({collapsed:e.collapsed})}},{key:"render",value:function render(){var e,t=this.props,n=t.span,l=t.children,i=t.className,u=t.collapsed,s=t.onCollapse,d=t.style,c=void 0;"number"==typeof n?c=n:"object"===(void 0===n?"undefined":(0,r.default)(n))&&(c=u?n.fold:n.unfold),s&&s(u);var f=(0,m.default)((e={"idoll-layout-sider":"doll-layout-sider"},(0,o.default)(e,"idoll-layout-sider-"+c,c),(0,o.default)(e,"idoll-layout-sider-"+i,i),e)),g=(0,h.default)(this.props,["span","collapsed","onCollapse"]);return p.default.createElement("div",(0,a.default)({},g,{style:d,className:f}),l)}}]),Sider}(c.Component);g.propTypes={span:f.default.oneOfType([f.default.number,f.default.object]),collapsed:f.default.bool,children:f.default.node,onCollapse:f.default.func,style:f.default.object},t.default=g},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(1)),l=_interopRequireDefault(n(0)),i=_interopRequireDefault(n(8));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function Header(e){var t=e.span,n=e.children,l=e.className,u=e.style,s=(0,i.default)((0,o.default)({"idoll-layout-header":"idoll-layout-header"},"idoll-layout-header-"+t,t),l);return r.default.createElement("div",(0,a.default)({},e,{className:s,style:u}),n)}n(147),Header.propTypes={span:l.default.number,children:l.default.node,style:l.default.object},t.default=Header},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(1)),o=_interopRequireDefault(n(8)),r=_interopRequireDefault(n(0));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function Content(e){var t=e.children,n=e.className,r=e.style,l=(0,o.default)({"idoll-layout-content":"idoll-layout-content"},n);return a.default.createElement("div",{className:l,style:r},t)}n(147),Content.propTypes={children:r.default.node},t.default=Content},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(1)),r=_interopRequireDefault(n(8)),l=_interopRequireDefault(n(0));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function Footer(e){var t=e.children,n=e.className,l=e.style,i=(0,r.default)({"idoll-layout-footer":"idoll-layout-footer"},n);return o.default.createElement("div",(0,a.default)({},e,{className:i,style:l}),t)}n(147),Footer.propTypes={children:l.default.node},t.default=Footer},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(6)),s=_interopRequireDefault(n(1)),d=_interopRequireDefault(n(0)),c=n(199),p=_interopRequireDefault(c),f=_interopRequireDefault(n(798)),m=_interopRequireDefault(n(799)),h=_interopRequireDefault(n(67));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function noop(){}n(1662);var g=function(e){function Menu(e){(0,r.default)(this,Menu);var t=(0,l.default)(this,(Menu.__proto__||(0,o.default)(Menu)).call(this,e));return t.handleClick=function(e){t.setOpenKeys([]),t.props.onClick(e)},t.handleCloseKeys=function(e){var n=e.openKeys;t.setOpenKeys(n),t.props.onClose(e)},t.handleOpenChange=function(e){t.setOpenKeys(e),"onOpenChange"in t.props||t.setOpenKeys(e)},(0,h.default)(!("inlineCollapsed"in e&&"inline"!==e.mode),"'inlineCollapsed'只能在Menu的'mode'是'inline'的时候使用"),t.state={openKeys:[]},t}return(0,u.default)(Menu,e),(0,i.default)(Menu,[{key:"getChildContext",value:function getChildContext(){return{idollMenuTheme:this.props.theme,mode:this.props.mode}}}]),(0,i.default)(Menu,[{key:"componentWillReceiveProps",value:function componentWillReceiveProps(e){"inline"===this.props.mode&&"inline"!==e.mode&&(this.switchModeFromInline=!0),"openKeys"in e&&this.setOpenKeys(e.openKeys)}},{key:"setOpenKeys",value:function setOpenKeys(e){"openKeys"in this.props||this.setState({openKeys:e})}},{key:"render",value:function render(){var e={},t=this.props.className+" "+this.props.prefixCls+"-"+this.props.theme;return e="inline"!==this.props.mode?{openKeys:this.state.openKeys,onOpenChange:this.handleOpenChange,onClick:this.handleClick,onClose:this.handleCloseKeys,className:t}:{className:t},s.default.createElement(p.default,(0,a.default)({},this.props,e))}}]),Menu}(s.default.Component);g.Divider=c.Divider,g.ItemGroup=c.ItemGroup,g.Item=f.default,g.SubMenu=m.default,g.defaultProps={prefixCls:"idoll-menu",className:"",onClick:noop,onClose:noop,theme:"dark"},g.childContextTypes={inlineCollapsed:d.default.bool,idollMenuTheme:d.default.string,mode:d.default.string},g.propTypes={defaultOpenKeys:d.default.any,style:d.default.object,defaultSelectedKeys:d.default.array,openKeys:d.default.array,selectedKeys:d.default.array,forceSubMenuRender:d.default.bool,selectable:d.default.bool,multiple:d.default.bool,subMenuCloseDelay:d.default.number,subMenuOpenDelay:d.default.number,mode:d.default.oneOf(["vertical","vertical-right","horizontal","inline"]),theme:d.default.oneOf(["dark","light"]),onClick:d.default.func,onDeselect:d.default.func,onOpenChange:d.default.func,onSelect:d.default.func,className:d.default.string},t.default=g},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(6)),d=n(1),c=_interopRequireDefault(d),p=_interopRequireDefault(n(1935)),f=_interopRequireDefault(n(8)),m=_interopRequireDefault(n(1658));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var h=function(e){function Tooltip(e){(0,l.default)(this,Tooltip);var t=(0,u.default)(this,(Tooltip.__proto__||(0,r.default)(Tooltip)).call(this,e));return t.onVisibleChange=function(e){var n=t.props.onVisibleChange;"visible"in t.props||t.setState({visible:e}),n&&!t.isNoTitle()&&n(e)},t.isNoTitle=function(){var e=t.props,n=e.title,a=e.overlay;return!n&&!a},t.saveTooltip=function(e){t.tooltip=e},t.getPopupDomNode=function(){return console.log(t.tooltip),t.tooltip.getPopupDomNode()},t.getDisabledCompatibleChildren=function(e){if("button"===e.type&&e.props.disabled&&t.isHoverTrigger()){var n=(0,d.cloneElement)(e,{style:{pointerEvents:"none"},className:null});return c.default.createElement("span",{style:{display:"inline-block",cursor:"not-allowed"},className:e.props.className},n)}return e},t.isHoverTrigger=function(){var e=t.props.trigger;return!e||"hover"===e||!!Array.isArray(e)&&e.indexOf("hover")>=0},t.getPlacements=function(){var e=t.props,n=e.builtinPlacements,a=e.arrowPointAtCenter,o=e.autoAdjustOverflow;return n||(0,m.default)({arrowPointAtCenter:a,verticalArrowShift:8,autoAdjustOverflow:o})},t.state={visible:e.visible||e.defaultVisible||!1},t}return(0,s.default)(Tooltip,e),(0,i.default)(Tooltip,[{key:"render",value:function render(){var e=this.props,t=e.prefixCls,n=e.visible,r=e.overlay,l=e.title,i=e.children,u=e.openClassName,s=e.getPopupContainer,m=e.getTooltipContainer,h=this.getDisabledCompatibleChildren(c.default.isValidElement(i)?i:c.default.createElement("span",null,i)),g=h.props,v=(0,f.default)(g.className,(0,o.default)({},u||t+"-open",!0));return c.default.createElement(p.default,(0,a.default)({},this.props,{ref:this.saveTooltip,overlay:r||l||"",visible:n||this.state.visible,onVisibleChange:this.onVisibleChange,getTooltipContainer:s||m,builtinPlacements:this.getPlacements()}),n||this.state.visible||this.state.visible?(0,d.cloneElement)(h,{className:v}):h)}}]),Tooltip}(c.default.Component);h.defaultProps={prefixCls:"idoll-tooltip",placement:"top",mouseEnterDelay:.1,mouseLeaveDelay:.1,arrowPointAtCenter:!1,autoAdjustOverflow:!0},t.default=h},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(85)),o=_interopRequireDefault(n(3));t.getOverflowOptions=getOverflowOptions,t.default=function getPlacements(e){var t=e.arrowWidth,n=void 0===t?5:t,l=e.horizontalArrowShift,i=void 0===l?16:l,s=e.verticalArrowShift,d=void 0===s?12:s,c=e.autoAdjustOverflow,p=void 0===c||c,f={left:{points:["cr","cl"],offset:[-4,0]},right:{points:["cl","cr"],offset:[4,0]},top:{points:["bc","tc"],offset:[0,-4]},bottom:{points:["tc","bc"],offset:[0,4]},topLeft:{points:["bl","tc"],offset:[-(i+n),-4]},leftTop:{points:["tr","cl"],offset:[-4,-(d+n)]},topRight:{points:["br","tc"],offset:[i+n,-4]},rightTop:{points:["tl","cr"],offset:[4,-(d+n)]},bottomRight:{points:["tr","bc"],offset:[i+n,4]},rightBottom:{points:["bl","cr"],offset:[4,d+n]},bottomLeft:{points:["tl","bc"],offset:[-(i+n),4]},leftBottom:{points:["br","cl"],offset:[-4,d+n]}};return(0,a.default)(f).forEach(function(t){f[t]=e.arrowPointAtCenter?(0,o.default)({},f[t],{overflow:getOverflowOptions(p),targetOffset:u}):(0,o.default)({},r.placements[t],{overflow:getOverflowOptions(p)})}),f};var r=n(1659);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var l={adjustX:1,adjustY:1},i={adjustX:0,adjustY:0},u=[0,0];function getOverflowOptions(e){return"boolean"==typeof e?e?l:i:(0,o.default)({},i,e)}},,function(e,t,n){"use strict";n(30),n(1661)},function(e,t,n){},function(e,t,n){"use strict";n(1663)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(1665)),o=_interopRequireDefault(n(1)),r=_interopRequireDefault(n(1941)),l=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1677);var i=3,u=void 0,s=void 0,d=1,c="idoll-message",p="move-up",f=void 0,m=void 0;function getMessageInstance(e){s?e(s):r.default.newInstance({prefixCls:c,transitionName:p,style:{top:u},getContainer:f,maxCount:m},function(t){s?e(s):(s=t,e(t))})}function notice(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:i,n=arguments[2],r=arguments[3],u=arguments[4],p=arguments[5];"boolean"==typeof r&&(p=r),"function"==typeof t&&(r=t,t=i),"boolean"==typeof t&&(p=t,t=i),"boolean"==typeof u&&(p=u,u="");var f={info:"info-circle",success:"check-circle",error:"error-circle",warning:"warning"}[n],m=d++,h=new a.default(function(a){var i=function callback(){return"function"==typeof r&&r(),a(!0)};getMessageInstance(function(a){var r=o.default.createElement(l.default,{style:{color:p?"#fff":""},type:f});a.notice({key:m,duration:t,style:{},content:o.default.createElement("div",{className:c+"-custom-content "+(n&&!p?c+"-"+n:"content-"+n)},u||(f?r:""),o.default.createElement("span",null,e)),onClose:i})})}),g=function result(){s&&s.removeNotice(m)};return g.then=function(e,t){return h.then(e,t)},g.promise=h,g}var h={open:notice,config:function config(e){void 0!==e.top&&(u=e.top,s=null),void 0!==e.duration&&(i=e.duration),void 0!==e.prefixCls&&(c=e.prefixCls),void 0!==e.getContainer&&(f=e.getContainer),void 0!==e.transitionName&&(p=e.transitionName,s=null),void 0!==e.maxCount&&(m=e.maxCount,s=null)},destroy:function destroy(){s&&(s.destroy(),s=null)}};["success","info","warning","error","loading"].forEach(function(e){h[e]=function(t,n,a,o){return"boolean"==typeof a&&(o=a),"function"==typeof n&&(a=n,n=void 0),"boolean"==typeof n&&(o=n,n=void 0),h.open({content:t,duration:n,type:e,onClose:a,normal:o})}}),t.default={success:function success(e,t,n,a,o){return notice(e,t,"success",n,a,o)},error:function error(e,t,n,a,o){return notice(e,t,"error",n,a,o)},info:function info(e,t,n,a,o){return notice(e,t,"info",n,a,o)},warning:function warning(e,t,n,a,o){return notice(e,t,"warning",n,a,o)},warn:function warn(e,t,n,a,o){return notice(e,t,"warning",n,a,o)},loading:function loading(e,t,n,a,o){return notice(e,t,"load",n,a,o)},open:function open(e){return notice(e.content,e.duration,"info",e.onClose,e.icon,e.normal)},config:function config(e){void 0!==e.top&&(u=e.top,s=null),void 0!==e.duration&&(i=e.duration),void 0!==e.prefixCls&&(c=e.prefixCls),void 0!==e.getContainer&&(f=e.getContainer),void 0!==e.transitionName&&(p=e.transitionName,s=null),void 0!==e.maxCount&&(m=e.maxCount,s=null)},destroy:function destroy(){s&&(s.destroy(),s=null)}}},,,,,,,,,,,,,function(e,t,n){"use strict";n(30),n(1678)},function(e,t,n){},function(e,t,n){"use strict";n(30),n(1680)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(9)),o=_interopRequireDefault(n(3));t.default=function confirm(e){var t,n=(0,o.default)({},e),p=document.createElement("div");document.body.appendChild(p),n.iconType=n.iconType||"question-circle";var f=n.width||408,m=n.style||{};"okCancel"in n||(n.okCancel=!0);var h=(0,c.getConfirmLocale)();function close(){l.default.unmountComponentAtNode(p)&&p.parentNode.removeChild(p)}function onOk(){var e=n.onOk;if(e){var t=void 0;e.length?t=e(close):(t=e())||close(),t&&t.then&&t.then(close)}else close()}n.okText=n.okText||(n.okCancel?h.okText:h.justOkText),n.cancelText=n.cancelText||h.cancelText;var g=r.default.createElement("div",{className:"idoll-confirm-body"},r.default.createElement(u.default,{type:n.iconType}),r.default.createElement("span",{className:"idoll-confirm-title"},n.title),r.default.createElement("div",{className:"idoll-confirm-content"},n.content)),v=null;v=n.okCancel?r.default.createElement("div",{className:"idoll-confirm-btns"},r.default.createElement(s.default,{onClick:function onCancel(){var e=n.onCancel;if(e){var t=void 0;e.length?t=e(close):(t=e())||t||close(),t&&t.then&&t.then(close)}else close()}},n.cancelText),r.default.createElement(s.default,{type:"primary",onClick:onOk},n.okText)):r.default.createElement("div",{className:"idoll-confirm-btns"},r.default.createElement(s.default,{type:"primary",onClick:onOk},n.okText));var y=(0,d.default)((t={"idoll-confirm":!0},(0,a.default)(t,"idoll-confirm-"+n.type,!0),(0,a.default)(t,n.className,!!n.className),t));return l.default.render(r.default.createElement(i.default,{className:y,visible:!0,closable:!1,title:"",transitionName:"zoom",footer:"",maskTransitionName:"fade",style:m,width:f},r.default.createElement("div",{style:{zoom:1,overflow:"hidden"}},g," ",v)),p),{destroy:close}};var r=_interopRequireDefault(n(1)),l=_interopRequireDefault(n(14)),i=_interopRequireDefault(n(804)),u=_interopRequireDefault(n(17)),s=_interopRequireDefault(n(75)),d=_interopRequireDefault(n(8)),c=n(1682);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(3));t.changeConfirmLocale=function changeConfirmLocale(e){r=e?(0,a.default)({},o,e):(0,a.default)({},o)},t.getConfirmLocale=function getConfirmLocale(){return r};var o={okText:"确定",cancelText:"取消",justOkText:"知道了"},r=(0,a.default)({},o)},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(15)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(6)),d=_interopRequireDefault(n(1)),c=n(0),p=_interopRequireDefault(n(1932)),f=_interopRequireDefault(n(8)),m=_interopRequireDefault(n(98)),h=_interopRequireDefault(n(805)),g=_interopRequireDefault(n(1684));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(806);var v=function(e){function Pagination(){return(0,l.default)(this,Pagination),(0,u.default)(this,(Pagination.__proto__||(0,r.default)(Pagination)).apply(this,arguments))}return(0,s.default)(Pagination,e),(0,i.default)(Pagination,[{key:"render",value:function render(){var e=this.props,t=e.size,n=e.className,r=(0,o.default)(e,["size","className"]),l="small"===t,i=void 0;return i=this.context.idollLocale&&this.context.idollLocale.Pagination?this.context.idollLocale.Pagination:this.props.locale,d.default.createElement(p.default,(0,a.default)({showTitle:!1,selectComponentClass:l?h.default:m.default,className:(0,f.default)(n,{mini:l}),locale:i},r))}}]),Pagination}(d.default.Component);v.defaultProps={locale:g.default,className:"",prefixCls:"idoll-pagination",selectPrefixCls:"idoll-select"},v.propTypes={current:c.PropTypes.number,defaultCurrent:c.PropTypes.number,defaultPageSizecurrent:c.PropTypes.number,pageSize:c.PropTypes.number,total:c.PropTypes.number,showQuickJumper:c.PropTypes.bool,showSizeChanger:c.PropTypes.bool,simple:c.PropTypes.bool,pageSizeOptions:c.PropTypes.array,showTotal:c.PropTypes.func,onChange:c.PropTypes.func,onShowSizeChange:c.PropTypes.func},v.contextTypes={idollLocale:c.PropTypes.object},t.default=v},function(e,t,n){"use strict";e.exports=n(767)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(15)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(6)),d=function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(t[n]=e[n]);return t.default=e,t}(n(1)),c=_interopRequireDefault(n(76)),p=_interopRequireDefault(n(17)),f=_interopRequireDefault(n(75));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var m=function(e){function Popconfirm(e){(0,l.default)(this,Popconfirm);var t=(0,u.default)(this,(Popconfirm.__proto__||(0,r.default)(Popconfirm)).call(this,e));return t.onConfirm=function(e){t.setVisible(!1);var n=t.props.onConfirm;n&&n.call(t,e)},t.onCancel=function(e){t.setVisible(!1);var n=t.props.onCancel;n&&n.call(t,e)},t.onVisibleChange=function(e){t.setVisible(e)},t.saveTooltip=function(e){t.tooltip=e},t.state={visible:e.visible},t}return(0,s.default)(Popconfirm,e),(0,i.default)(Popconfirm,[{key:"componentWillReceiveProps",value:function componentWillReceiveProps(e){"visible"in e&&this.setState({visible:e.visible})}},{key:"getPopupDomNode",value:function getPopupDomNode(){return this.tooltip.getPopupDomNode()}},{key:"setVisible",value:function setVisible(e){var t=this.props;"visible"in t||this.setState({visible:e});var n=t.onVisibleChange;n&&n(e)}},{key:"render",value:function render(){var e=this.props,t=e.prefixCls,n=e.placement,r=e.title,l=e.okText,i=e.cancelText,u=e.okType,s=e.icon,m=(0,o.default)(e,["prefixCls","placement","title","okText","cancelText","okType","icon"]),h=d.createElement("div",null,d.createElement("div",{className:t+"-inner-content"},d.createElement("div",{className:t+"-message"},s||d.createElement(p.default,{type:"warning"}),d.createElement("div",{className:t+"-message-title"},r)),d.createElement("div",{className:t+"-buttons"},d.createElement(f.default,{onClick:this.onConfirm,type:u,size:"small"},l||"确定"),d.createElement(f.default,{onClick:this.onCancel,size:"small"},i||"取消"))));return d.createElement(c.default,(0,a.default)({},m,{prefixCls:t,placement:n,onVisibleChange:this.onVisibleChange,visible:this.state.visible,overlay:h,ref:this.saveTooltip}))}}]),Popconfirm}(d.Component);m.defaultProps={prefixCls:"idoll-popover",transitionName:"zoom-big",placement:"topRight",trigger:"click",okType:"danger",icon:d.ReactNode},t.default=m},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(6)),d=_interopRequireDefault(n(1)),c=_interopRequireDefault(n(76)),p=_interopRequireDefault(n(8)),f=_interopRequireDefault(n(67));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var m=function(e){function Popover(){var e,t,n,a;(0,l.default)(this,Popover);for(var o=arguments.length,i=Array(o),s=0;s<o;s++)i[s]=arguments[s];return t=n=(0,u.default)(this,(e=Popover.__proto__||(0,r.default)(Popover)).call.apply(e,[this].concat(i))),n.saveTooltip=function(e){n.tooltip=e},a=t,(0,u.default)(n,a)}return(0,s.default)(Popover,e),(0,i.default)(Popover,[{key:"getOverlay",value:function getOverlay(){var e=this.props,t=e.title,n=e.prefixCls,a=e.content,r=e.className,l=e.overlayClassName,i=(0,p.default)(r,n+"-inner-content",(0,o.default)({},n+"-inline-popover",l));return(0,f.default)(!("overlay"in this.props),"Popover[overlay]已被移除，请用Popover[content]替代"),d.default.createElement("div",null,t&&d.default.createElement("div",{className:n+"-title"},t),d.default.createElement("div",{className:i},a))}},{key:"render",value:function render(){return d.default.createElement(c.default,(0,a.default)({},this.props,{ref:this.saveTooltip,overlay:this.getOverlay()}))}}]),Popover}(d.default.Component);m.defaultProps={prefixCls:"idoll-popover",placement:"topLeft",trigger:"hover",mouseEnterDelay:.1,mouseLeaveDelay:.1,overlayStyle:{}},t.default=m},function(e,t,n){"use strict";n(1689)},function(e,t,n){},function(e,t,n){"use strict";n(1691),n(30)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(9)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=_interopRequireDefault(n(1)),d=_interopRequireDefault(n(0)),c=_interopRequireDefault(n(8)),p=_interopRequireDefault(n(33)),f=_interopRequireDefault(n(672));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function getCheckedValue(e){var t=null,n=!1;return s.default.Children.forEach(e,function(e){e&&e.props&&e.props.checked&&(t=e.propos.value,n=!0)}),n?{value:t}:void 0}var m=function(e){function RadioGroup(e){(0,r.default)(this,RadioGroup);var t=(0,i.default)(this,(RadioGroup.__proto__||(0,o.default)(RadioGroup)).call(this,e));h.call(t);var n=void 0;if("value"in e)n=e.value;else if("defaultValue"in e)n=e.defaultValue;else{var a=getCheckedValue(e.children);n=a&&a.value}return t.state={value:n},t}return(0,u.default)(RadioGroup,e),(0,l.default)(RadioGroup,[{key:"getChildContext",value:function getChildContext(){return{radioGroup:{onChange:this.onRadioChange,value:this.state.value,disabled:this.props.disabled,name:this.props.name,readOnly:this.props.readOnly}}}},{key:"componentWillReceiveProps",value:function componentWillReceiveProps(e){if("value"in e)this.setState({value:e.value});else{var t=getCheckedValue(e.children);t&&this.setState({value:t.value})}}},{key:"shouldComponentUpdate",value:function shouldComponentUpdate(e,t){return!(0,p.default)(this.props,e)||!(0,p.default)(this.state,t)}},{key:"render",value:function render(){var e,t=this,n=this.props,o=n.prefixCls,r=void 0===o?"solid"===n.buttonStyle?"idoll-radio-group-solid":"idoll-radio-group":o,l=n.className,i=void 0===l?"":l,u=n.options,d=n.readOnly,p=(0,c.default)(r,(e={},(0,a.default)(e,r+"-"+n.size,n.size),(0,a.default)(e,r+"-vertical",n.direction),e),i),m=n.children;return u&&u.length>0&&(m=u.map(function(e,n){return"string"==typeof e?s.default.createElement(f.default,{readOnly:d,key:n,disabled:t.props.disabled,value:e,onChange:t.onRadioChange,checked:t.state.value===e},e):s.default.createElement(f.default,{readOnly:d,key:n,disabled:e.disabled||t.props.disabled,value:e.value,onChange:t.onRadioChange,checked:t.state.value===e.value},e.label)})),s.default.createElement("div",{className:p,style:n.style,onMouseEnter:n.onMouseEnter,onMouseLeave:n.onMouseLeave,id:n.id},m)}}]),RadioGroup}(s.default.Component);m.defaultProps={disabled:!1},m.childContextTypes={radioGroup:d.default.any};var h=function _initialiseProps(){var e=this;this.onRadioChange=function(t){var n=e.state.value,a=t.target.value;"value"in e.props||e.setState({value:a});var o=e.props.onChange;o&&a!==n&&o(t)}};t.default=m},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(141)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=_interopRequireDefault(n(1)),d=_interopRequireDefault(n(0)),c=_interopRequireDefault(n(672));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var p=function(e){function RadioButton(){return(0,r.default)(this,RadioButton),(0,i.default)(this,(RadioButton.__proto__||(0,o.default)(RadioButton)).apply(this,arguments))}return(0,u.default)(RadioButton,e),(0,l.default)(RadioButton,[{key:"render",value:function render(){var e=(0,a.default)({},this.props);return this.context.radioGroup&&(e.onChange=this.context.radioGroup.onChange,e.checked=this.props.value===this.context.radioGroup.value,e.disabled=this.props.disabled||this.context.radioGroup.disabled),s.default.createElement(c.default,e)}}]),RadioButton}(s.default.Component);p.defaultProps={prefixCls:"idoll-radio-button"},p.contextTypes={radioGroup:d.default.any},t.default=p},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(15)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(3)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=_interopRequireDefault(n(1)),p=_interopRequireDefault(n(0)),f=_interopRequireDefault(n(1695)),m=_interopRequireDefault(n(1702)),h=_interopRequireDefault(n(810)),g=_interopRequireDefault(n(76));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1703);var v=function(e){function Slider(e){(0,i.default)(this,Slider);var t=(0,s.default)(this,(Slider.__proto__||(0,l.default)(Slider)).call(this,e));return t.toggleTooltipVisible=function(e,n){t.setState(function(t){var a=t.visibles;return{visibles:(0,r.default)({},a,(0,o.default)({},e,n))}})},t.handleWithTooltip=function(e){var n=e.value,o=e.dragging,l=e.index,i=(0,a.default)(e,["value","dragging","index"]),u=t.props,s=u.tooltipPrefixCls,d=u.tipFormatter,p=t.state.visibles,f=!!d&&(p[l]||o);return c.default.createElement(g.default,{prefixCls:s,title:d?d(n):"",visible:f,placement:"top",key:l},c.default.createElement(h.default,(0,r.default)({},i,{value:n,onMouseEnter:function onMouseEnter(){return t.toggleTooltipVisible(l,!0)},onMouseLeave:function onMouseLeave(){return t.toggleTooltipVisible(l,!1)}})))},t.saveSlider=function(e){t.rcSlider=e},t.state={visibles:{}},t}return(0,d.default)(Slider,e),(0,u.default)(Slider,[{key:"focus",value:function focus(){this.rcSlider.focus()}},{key:"blur",value:function blur(){this.rcSlider.focus()}},{key:"render",value:function render(){var e=this.props,t=e.range,n=(0,a.default)(e,["range"]);return t?c.default.createElement(m.default,(0,r.default)({},n,{ref:this.saveSlider,handle:this.handleWithTooltip})):c.default.createElement(f.default,(0,r.default)({},n,{ref:this.saveSlider,handle:this.handleWithTooltip}))}}]),Slider}(c.default.Component);v.propTypes={min:p.default.number,max:p.default.number,marks:p.default.object},v.defaultProps={prefixCls:"idoll-slider",tooltipPrefixCls:"idoll-tooltip",tipFormatter:function tipFormatter(e){return e.toString()}},t.default=v},,,,,,,,,function(e,t,n){"use strict";n(30),n(1704)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(15)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(7)),d=_interopRequireDefault(n(6)),c=_interopRequireDefault(n(1)),p=_interopRequireDefault(n(0)),f=_interopRequireDefault(n(8)),m=_interopRequireDefault(n(32)),h=_interopRequireDefault(n(74));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var g=null;function renderIndicator(e){var t=e.prefixCls,n=e.indicator,a=e.color,o=t+"-dot";return c.default.isValidElement(n)?c.default.cloneElement(n,{className:(0,f.default)(n.props.className,o)}):c.default.isValidElement(g)?c.default.cloneElement(g,{className:(0,f.default)(g.props.className,o)}):c.default.createElement("span",{className:(0,f.default)(o,t+"-dot-spin")},c.default.createElement("i",{style:{borderColor:a?a.join(" "):""}}))}function shouldDelay(e,t){return!!e&&!!t&&!isNaN(Number(t))}var v=function(e){function Spin(e){(0,i.default)(this,Spin);var t=(0,u.default)(this,(Spin.__proto__||(0,l.default)(Spin)).call(this,e));y.call(t);var n=e.spinning,a=e.delay;return t.state={spinning:n&&!shouldDelay(n,a)},t}return(0,d.default)(Spin,e),(0,s.default)(Spin,null,[{key:"setDefaultIndicator",value:function setDefaultIndicator(e){g=e}}]),(0,s.default)(Spin,[{key:"isNestedPattern",value:function isNestedPattern(){return!(!this.props||!this.props.children)}},{key:"componentDidMount",value:function componentDidMount(){var e=this.props,t=e.spinning,n=e.delay;shouldDelay(t,n)&&(this.shouldTimeout=window.setTimeout(this.delayUpdateSpinning,n))}},{key:"componentWillUnmount",value:function componentWillUnmount(){this.debounceTimeout&&clearTimeout(this.debounceTimeout),this.delayTimeout&&clearTimeout(this.delayTimeout)}},{key:"componentDidUpdate",value:function componentDidUpdate(){var e=this,t=this,n=this.state.spinning,a=this.props.spinning;if(n===a)return!1;var o=this.props.delay;this.debounceTimeout&&clearTimeout(this.debounceTimeout),n&&!a?(this.debounceTimeout=window.setTimeout(function(){return e.setState({spinning:a})},200),this.delayTimeout&&clearTimeout(this.delayTimeout)):shouldDelay(a,o)?(this.delayTimeout&&clearTimeout(this.delayTimeout),this.delayTimeout=window.setTimeout(this.delayUpdateSpinning,o)):t.setState({spinning:a})}},{key:"render",value:function render(){var e,t=this.props,n=t.className,l=t.size,i=t.prefixCls,u=t.tip,s=t.wrapperClassName,d=(0,r.default)(t,["className","size","prefixCls","tip","wrapperClassName"]),p=this.state.spinning,g=(0,f.default)(i,(e={},(0,o.default)(e,i+"-sm","small"===l),(0,o.default)(e,i+"-lg","large"===l),(0,o.default)(e,i+"-spinning",p),(0,o.default)(e,i+"-show-text",!!u),e),n),v=(0,h.default)(d,["spinning","delay","indicator"]),y=c.default.createElement("div",(0,a.default)({},v,{className:g}),renderIndicator(this.props),u?c.default.createElement("div",{className:i+"-text"},u):null);if(this.isNestedPattern()){var b,C=i+"-nested-loading";s&&(C+=" "+s);var _=(0,f.default)((b={},(0,o.default)(b,i+"-container",!0),(0,o.default)(b,i+"-blur",p),b));return c.default.createElement(m.default,(0,a.default)({},v,{component:"div",className:C,style:null,transitionName:"fade"}),p&&c.default.createElement("div",{key:"loading"},y),c.default.createElement("div",{className:_,key:"container"},this.props.children))}return y}}]),Spin}(c.default.Component);v.defaultProps={prefixCls:"idoll-spin",spinning:!0,size:"default",wrapperClassName:""},v.propTypes={prefixCls:p.default.string,className:p.default.string,spinning:p.default.bool,size:p.default.oneOf(["default","small","large"]),wrapperClassName:p.default.string,indicator:p.default.node};var y=function _initialiseProps(){var e=this;this.delayUpdateSpinning=function(){var t=e.props.spinning;e.state.spinning!==t&&e.setState({spinning:t})}};t.default=v},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=_interopRequireDefault(n(1)),d=_interopRequireDefault(n(0)),c=_interopRequireDefault(n(1936));n(1707);var p=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var f=function(e){function Steps(){return(0,r.default)(this,Steps),(0,i.default)(this,(Steps.__proto__||(0,o.default)(Steps)).apply(this,arguments))}return(0,u.default)(Steps,e),(0,l.default)(Steps,[{key:"render",value:function render(){var e=this.props.prefixCls,t={finish:s.default.createElement(p.default,{type:"done",className:e+"-finish-icon"}),error:s.default.createElement(p.default,{type:"close",className:e+"-error-icon"})};return s.default.createElement(c.default,(0,a.default)({icons:t},this.props))}}]),Steps}(s.default.Component);f.Step=c.default.Step,f.defaultProps={prefixCls:"idoll-steps",iconPrefix:"idoll",current:0},f.propTypes={prefixCls:d.default.string,iconPrefix:d.default.string,current:d.default.number},t.default=f},function(e,t,n){"use strict";n(1708),n(30)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(15)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=n(1),p=_interopRequireDefault(c),f=_interopRequireDefault(n(0)),m=_interopRequireDefault(n(8));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function noop(){}n(1710);var h=function(e){function Switch(e){(0,i.default)(this,Switch);var t=(0,s.default)(this,(Switch.__proto__||(0,l.default)(Switch)).call(this,e));g.call(t);var n=!1;return n="checked"in e?!!e.checked:!!e.defaultChecked,t.state={checked:n},t}return(0,d.default)(Switch,e),(0,u.default)(Switch,[{key:"componentDidMount",value:function componentDidMount(){var e=this.props,t=e.autoFocus,n=e.disabled;t&&!n&&this.focus()}},{key:"componentWillReceiveProps",value:function componentWillReceiveProps(e){"checked"in e&&this.setState({checked:!!e.checked})}},{key:"setChecked",value:function setChecked(e){this.props.disabled||("checked"in this.props||this.setState({checked:e}),this.props.onChange(e))}},{key:"focus",value:function focus(){this.node.focus()}},{key:"blur",value:function blur(){this.node.blur()}},{key:"render",value:function render(){var e,t=this.props,n=t.className,l=t.prefixCls,i=t.disabled,u=t.loading,s=t.checkedChildren,d=t.tabIndex,c=t.unCheckedChildren,f=t.size,h=(0,r.default)(t,["className","prefixCls","disabled","loading","checkedChildren","tabIndex","unCheckedChildren","size"]),g=this.state.checked,v=i?-1:d||0,y=(0,m.default)((e={},(0,o.default)(e,n,!!n),(0,o.default)(e,l,!0),(0,o.default)(e,l+"-checked",g),(0,o.default)(e,l+"-disabled",i),(0,o.default)(e,l+"-small","small"===f),(0,o.default)(e,l+"-loading",u),e));return p.default.createElement("span",(0,a.default)({},h,{className:y,tabIndex:v,ref:this.saveNode,onClick:this.toggle}),p.default.createElement("span",{className:l+"-inner"},g?s:c))}}]),Switch}(c.Component);h.propTypes={className:f.default.string,prefixCls:f.default.string,disabled:f.default.bool,checkedChildren:f.default.any,unCheckedChildren:f.default.any,onChange:f.default.func,onMouseUp:f.default.func,onClick:f.default.func,tabIndex:f.default.number,checked:f.default.bool,defaultChecked:f.default.bool,autoFocus:f.default.bool,size:f.default.string},h.defaultProps={prefixCls:"idoll-switch",checkedChildren:null,unCheckedChildren:null,className:"",defaultChecked:!1,onChange:noop,onClick:noop};var g=function _initialiseProps(){var e=this;this.toggle=function(){var t=e.props.onClick,n=!e.state.checked;e.setChecked(n),t(n)},this.saveNode=function(t){e.node=t}};t.default=h},function(e,t,n){"use strict";n(1711)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(15)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(43)),l=_interopRequireDefault(n(85)),i=_interopRequireDefault(n(3)),u=_interopRequireDefault(n(11)),s=_interopRequireDefault(n(5)),d=_interopRequireDefault(n(7)),c=_interopRequireDefault(n(4)),p=_interopRequireDefault(n(6)),f=_interopRequireDefault(n(1)),m=_interopRequireDefault(n(0)),h=_interopRequireDefault(n(1928)),g=_interopRequireDefault(n(102)),v=_interopRequireDefault(n(148)),y=_interopRequireDefault(n(1713)),b=_interopRequireDefault(n(196)),C=_interopRequireDefault(n(17)),_=_interopRequireDefault(n(197)),x=_interopRequireDefault(n(8)),R=n(1714);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function noop(){}function stopPropagation(e){e.stopPropagation(),e.nativeEvent.stopImmediatePropagation&&e.nativeEvent.stopImmediatePropagation()}var k={filterTitle:"筛选",filterConfirm:"确定",filterReset:"重置",emptyText:f.default.createElement("span",null,f.default.createElement(C.default,{type:"frown"}),"暂无数据")},D={onChange:noop,onShowSizeChange:noop},w=function(e){function Table(e){(0,s.default)(this,Table);var t=(0,c.default)(this,(Table.__proto__||(0,u.default)(Table)).call(this,e));S.call(t);var n=e.pagination||{};return t.state=(0,i.default)({flag:!1,boxChecked:!1,selectedRowKeys:(e.rowSelection||{}).selectedRowKeys||[],filters:t.getFiltersFromColumns(),selectionDirty:!1},t.getSortStateFromColumns(),{pagination:t.hasPagination()?(0,i.default)({},D,n,{current:n.defaultCurrent||n.current||1,pageSize:n.defaultPageSize||n.pageSize||10}):{}}),t.CheckboxPropsCache={},t}return(0,p.default)(Table,e),(0,d.default)(Table,[{key:"getCheckboxPropsByItem",value:function getCheckboxPropsByItem(e){var t=this.props.rowSelection,n=void 0===t?{}:t;if(!n.getCheckboxProps)return{};var a=this.getRecordKey(e);return this.CheckboxPropsCache[a]||(this.CheckboxPropsCache[a]=n.getCheckboxProps(e)),this.CheckboxPropsCache[a]}},{key:"getDefaultSelection",value:function getDefaultSelection(){var e=this,t=this.props.rowSelection;return(void 0===t?{}:t).getCheckboxProps?this.getFlatData().filter(function(t){return e.getCheckboxPropsByItem(t).defaultChecked}).map(function(t,n){return e.getRecordKey(t,n)}):[]}},{key:"getLocale",value:function getLocale(){var e={};return this.context.idollLocale&&this.context.idollLocale.Table&&(e=this.context.idollLocale.Table),(0,i.default)({},k,e,this.props.locale)}},{key:"componentWillReceiveProps",value:function componentWillReceiveProps(e){if("pagination"in e&&!1!==e.pagination&&this.setState(function(t){var n=(0,i.default)({},D,t.pagination,e.pagination);return n.current=n.current||1,{pagination:n}}),"dataSource"in e&&e.dataSource!==this.props.dataSource&&(this.setState({selectionDirty:!1}),this.CheckboxPropsCache={}),e.rowSelection&&"selectedRowKeys"in e.rowSelection){this.setState({selectedRowKeys:e.rowSelection.selectedRowKeys||[]});var t=this.props.rowSelection;t&&e.rowSelection.getCheckboxProps!==t.getCheckboxProps&&(this.CheckboxPropsCache={})}if(this.getSortOrderColumns(e.columns).length>0){var n=this.getSortStateFromColumns(e.columns);n.sortColumn===this.state.sortColumn&&n.sortOrder===this.state.sortOrder||this.setState(n)}if(this.getFilteredValueColumns(e.columns).length>0){var a=this.getFiltersFromColumns(e.columns),o=(0,i.default)({},this.state.filters);(0,l.default)(a).forEach(function(e){o[e]=a[e]}),this.isFiltersChanged(o)&&this.setState({filters:o})}}},{key:"setSelectedRowKeys",value:function setSelectedRowKeys(e,t){var n=this,a=t.selectWay,o=t.record,r=t.checked,l=t.changeRowKeys,i=this.props.rowSelection,u=void 0===i?{}:i;!u||"selectedRowKeys"in u||this.setState({selectedRowKeys:e});var s=this.getFlatData();if(u.onChange||u[a]){var d=s.filter(function(t,a){return e.indexOf(n.getRecordKey(t,a))>=0});if(u.onChange&&u.onChange(e,d),"onSelect"===a&&u.onSelect)u.onSelect(o,r,d);else if("onSelectAll"===a&&u.onSelectAll){var c=s.filter(function(e,t){return l.indexOf(n.getRecordKey(e,t))>=0});u.onSelectAll(r,d,c)}}}},{key:"hasPagination",value:function hasPagination(){return!1!==this.props.pagination}},{key:"isFiltersChanged",value:function isFiltersChanged(e){var t=this,n=!1;return(0,l.default)(e).length!==(0,l.default)(this.state.filters).length?n=!0:(0,l.default)(e).forEach(function(a){e[a]!==t.state.filters[a]&&(n=!0)}),n}},{key:"getSortOrderColumns",value:function getSortOrderColumns(e){return(e||this.props.columns||[]).filter(function(e){return"sortOrder"in e})}},{key:"getFilteredValueColumns",value:function getFilteredValueColumns(e){return(e||this.props.columns||[]).filter(function(e){return"filteredValue"in e})}},{key:"getFiltersFromColumns",value:function getFiltersFromColumns(e){var t=this,n={};return this.getFilteredValueColumns(e).forEach(function(e){n[t.getColumnKey(e)]=e.filteredValue}),n}},{key:"getSortStateFromColumns",value:function getSortStateFromColumns(e){var t=this.getSortOrderColumns(e).filter(function(e){return e.sortOrder})[0];return t?{sortColumn:t,sortOrder:t.sortOrder}:{sortColumn:null,sortOrder:null}}},{key:"getSorterFn",value:function getSorterFn(){var e=this.state,t=e.sortOrder,n=e.sortColumn;if(t&&n&&"function"==typeof n.sorter)return function(e,a){var o=n.sorter(e,a);return 0!==o?"descend"===t?-o:o:0}}},{key:"toggleSortOrder",value:function toggleSortOrder(e,t){var n,a=this.state,o=a.sortColumn,l=a.sortOrder;this.isSortColumn(t)?l===e?(l="",o=null):l=e:(l=e,o=t);var u={sortOrder:l,sortColumn:o};0===this.getSortOrderColumns().length&&this.setState(u),(n=this.props).onChange.apply(n,(0,r.default)(this.prepareParamsArguments((0,i.default)({},this.state,u))))}},{key:"getRecordKey",value:function getRecordKey(e,t){var n=this.props.rowKey;return"function"==typeof n?n(e,t):e[n]||t}},{key:"renderRowSelection",value:function renderRowSelection(){var e=this,t=this.props.columns.concat().filter(function(e){return e.hidden?!e.hidden:e});if(this.props.rowSelection){var n=this.getFlatCurrentPageData().filter(function(t){return!e.props.rowSelection.getCheckboxProps||!e.getCheckboxPropsByItem(t).disabled}),a=void 0;a=!!n.length&&(this.state.selectionDirty?n.every(function(t,n){return e.state.selectedRowKeys.indexOf(e.getRecordKey(t,n))>=0}):n.every(function(t,n){return e.state.selectedRowKeys.indexOf(e.getRecordKey(t,n))>=0})||n.every(function(t){return e.getCheckboxPropsByItem(t).defaultChecked}));var o=void 0;if("radio"===this.props.rowSelection.type)o={key:"selection-column",render:this.renderSelectionRadio};else{var r=n.every(function(t){return e.getCheckboxPropsByItem(t).disabled});o={key:"selection-column",title:f.default.createElement(g.default,{checked:a,disabled:r,onChange:this.handleSelectAllRow}),render:this.renderSelectionCheckBox}}t.some(function(e){return"left"===e.fixed||!0===e.fixed})&&(o.fixed="left"),t[0]&&"selection-column"===t[0].key?t[0]=o:t.unshift(o)}return t}},{key:"getColumnKey",value:function getColumnKey(e,t){return e.key||e.dataIndex||t}},{key:"getMaxCurrent",value:function getMaxCurrent(e){var t=this.state.pagination,n=t.current;return(n-1)*t.pageSize>=e?n-1:n}},{key:"isSortColumn",value:function isSortColumn(e){var t=this.state.sortColumn;return!(!e||!t)&&this.getColumnKey(t)===this.getColumnKey(e)}},{key:"renderColumnsDropdown",value:function renderColumnsDropdown(e){var t=this,n=this.state.sortOrder,a=this.getLocale();return e.map(function(e,o){var r=(0,i.default)({},e),l=t.getColumnKey(r,o),u=void 0,s=void 0;if(r.filters&&r.filters.length>0||r.filterDropdown){var d=t.state.filters[l]||[];u=f.default.createElement(y.default,{locale:a,column:r,selectedKeys:d,confirmFilter:t.handleFilter})}if(r.sorter){var c=t.isSortColumn(r);c&&(r.className=r.className||"",n&&(r.className+=" idoll-table-column-sort"));var p=c&&"ascend"===n,m=c&&"descend"===n;s=f.default.createElement("div",{className:"idoll-table-column-sorter"},f.default.createElement("span",{className:"idoll-table-column-sorter-up "+(p?"on":"off"),title:"↑",onClick:function onClick(){return t.toggleSortOrder("ascend",r)}},f.default.createElement(C.default,{type:"caret-up"})),f.default.createElement("span",{className:"idoll-table-column-sorter-down "+(m?"on":"off"),title:"↓",onClick:function onClick(){return t.toggleSortOrder("descend",r)}},f.default.createElement(C.default,{type:"caret-down"})))}return r.title=f.default.createElement("span",null,r.title,s,u),r})}},{key:"renderPagination",value:function renderPagination(){if(!this.hasPagination())return null;var e="default",t=this.state.pagination;t.size?e=t.size:"middle"!==this.props.size&&"small"!==this.props.size||(e="small");var n=t.total||this.getLocalData().length;return n>0?f.default.createElement(b.default,(0,i.default)({},t,{className:this.props.prefixCls+"-pagination",onChange:this.handlePageChange,total:n,size:e,current:this.getMaxCurrent(n),onShowSizeChange:this.handleShowSizeChange})):null}},{key:"prepareParamsArguments",value:function prepareParamsArguments(e){var t=e.pagination,n=e.filters,a={};return e.sortColumn&&e.sortOrder&&(a.column=e.sortColumn,a.order=e.sortOrder,a.field=e.sortColumn.dataIndex,a.columnKey=this.getColumnKey(e.sortColumn)),[t,n,a]}},{key:"findColumn",value:function findColumn(e){var t=this;return this.props.columns.filter(function(n){return t.getColumnKey(n)===e})[0]}},{key:"getCurrentPageData",value:function getCurrentPageData(){var e=this.getLocalData(),t=void 0,n=void 0,a=this.state;return this.hasPagination()?(n=a.pagination.pageSize,t=this.getMaxCurrent(a.pagination.total||e.length)):(n=Number.MAX_VALUE,t=1),(e.length>n||n===Number.MAX_VALUE)&&(e=e.filter(function(e,a){return a>=(t-1)*n&&a<t*n})),e}},{key:"getFlatData",value:function getFlatData(){return(0,R.flatArray)(this.getLocalData())}},{key:"getFlatCurrentPageData",value:function getFlatCurrentPageData(){return(0,R.flatArray)(this.getCurrentPageData())}},{key:"recursiveSort",value:function recursiveSort(e,t){var n=this,a=this.props.childrenColumnName;return e.sort(t).map(function(e){return e[a]?(0,i.default)({},e,(0,o.default)({},a,n.recursiveSort(e[a],t))):e})}},{key:"getLocalData",value:function getLocalData(){var e=this,t=this.state,n=this.props.dataSource||[];n=n.slice(0);var a=this.getSorterFn();return a&&(n=this.recursiveSort(n,a)),t.filters&&(0,l.default)(t.filters).forEach(function(a){var o=e.findColumn(a);if(o){var r=t.filters[a]||[];0!==r.length&&(n=o.onFilter?n.filter(function(e){return r.some(function(t){return o.onFilter(t,e)})}):n)}}),n}},{key:"render",value:function render(){var e,t=this,n=this.props,r=n.style,l=n.className,u=(0,a.default)(n,["style","className"]),s=this.getCurrentPageData(),d=this.renderRowSelection(),c=this.props.expandedRowRender&&!1!==this.props.expandIconAsCell,p=this.getLocale(),m=(0,x.default)((e={},(0,o.default)(e,"idoll-table-"+this.props.size,!0),(0,o.default)(e,"idoll-table-bordered",this.props.bordered),(0,o.default)(e,"idoll-table-empty",!s.length),e));d=(d=this.renderColumnsDropdown(d)).map(function(e,n){var a=(0,i.default)({},e);return a.key=t.getColumnKey(a,n),a});var g=f.default.createElement(h.default,(0,i.default)({},u,{data:s,columns:d,className:m,expandIconColumnIndex:d[0]&&"selection-column"===d[0].key?1:0,rowClassName:function rowClassName(e,n){return t.getOddEven(n)},expandIconAsCell:c,emptyText:function emptyText(){return p.emptyText}})),v=this.hasPagination()&&s&&0!==s.length?"idoll-table-with-pagination":"idoll-table-without-pagination",y=this.props.loading?v+" idoll-table-spin-holder":"";return g=f.default.createElement(_.default,{className:y,spinning:this.props.loading},g),f.default.createElement("div",{className:l+" clearfix",style:r},g,this.renderPagination())}}]),Table}(f.default.Component);w.propTypes={dataSource:m.default.array,prefixCls:m.default.string,useFixedHeader:m.default.bool,rowSelection:m.default.object,className:m.default.string,size:m.default.string,loading:m.default.bool,bordered:m.default.bool,onChange:m.default.func,locale:m.default.object},w.defaultProps={dataSource:[],prefixCls:"idoll-table",useFixedHeader:!1,rowSelection:null,className:"",size:"large",loading:!1,bordered:!1,onChange:noop,locale:{},rowKey:"key",childrenColumnName:"children"},w.contextTypes={idollLocale:m.default.object};var S=function _initialiseProps(){var e=this;this.handleFilter=function(t,n){var a=e.props,u=(0,i.default)({},e.state.pagination),s=(0,i.default)({},e.state.filters,(0,o.default)({},e.getColumnKey(t),n)),d=a.columns.map(function(t){return e.getColumnKey(t)});(0,l.default)(s).forEach(function(e){d.indexOf(e)<0&&delete s[e]}),a.pagination&&(u.current=1,u.onChange(u.current));var c={selectionDirty:!1,pagination:u},p=(0,i.default)({},s);e.getFilteredValueColumns().forEach(function(t){var n=e.getColumnKey(t);n&&delete p[n]}),(0,l.default)(p).length>0&&(c.filters=p),a.pagination&&"current"in a.pagination&&(c.pagination=(0,i.default)({},u,{current:e.state.pagination.current})),e.setState(c,function(){a.onChange.apply(a,(0,r.default)(e.prepareParamsArguments((0,i.default)({},e.state,{selectionDirty:!1,filters:s,pagination:u}))))})},this.handleSelect=function(t,n,a){var o=a.target.checked;e.setState({boxChecked:a.target.checked});var r=e.state.selectionDirty?[]:e.getDefaultSelection(),l=e.state.selectedRowKeys.concat(r),i=e.getRecordKey(t,n);o?l.push(e.getRecordKey(t,n)):l=l.filter(function(e){return i!==e}),e.setState({selectionDirty:!0}),e.setSelectedRowKeys(l,{selectWay:"onSelect",record:t,checked:o})},this.handleRadioSelect=function(t,n,a){var o=a.target.checked,r=e.state.selectionDirty?[]:e.getDefaultSelection(),l=e.state.selectedRowKeys.concat(r);l=[e.getRecordKey(t,n)],e.setState({selectionDirty:!0}),e.setSelectedRowKeys(l,{selectWay:"onSelect",record:t,checked:o})},this.handleSelectAllRow=function(t){var n=t.target.checked,a=e.getFlatCurrentPageData(),o=e.state.selectionDirty?[]:e.getDefaultSelection(),r=e.state.selectedRowKeys.concat(o),l=a.filter(function(t){return!e.getCheckboxPropsByItem(t).disabled}).map(function(t,n){return e.getRecordKey(t,n)}),i=[];n?l.forEach(function(e){r.indexOf(e)<0&&(r.push(e),i.push(e))}):l.forEach(function(e){r.indexOf(e)>=0&&(r.splice(r.indexOf(e),1),i.push(e))}),e.setState({selectionDirty:!0}),e.setSelectedRowKeys(r,{selectWay:"onSelectAll",checked:n,changeRowKeys:i})},this.handlePageChange=function(t){var n,a=e.props,o=(0,i.default)({},e.state.pagination);o.current=t||(o.current||1),o.onChange(o.current);var l={selectionDirty:!1,pagination:o};a.pagination&&"current"in a.pagination&&(l.pagination=(0,i.default)({},o,{current:e.state.pagination.current})),e.setState(l),(n=e.props).onChange.apply(n,(0,r.default)(e.prepareParamsArguments((0,i.default)({},e.state,{selectionDirty:!1,pagination:o}))))},this.renderSelectionRadio=function(t,n,a){var o=e.getRecordKey(n,a),r=e.getCheckboxPropsByItem(n),l=void 0;return l=e.state.selectionDirty?e.state.selectedRowKeys.indexOf(o)>=0:e.state.selectedRowKeys.indexOf(o)>=0||e.getDefaultSelection().indexOf(o)>=0,f.default.createElement("span",{onClick:stopPropagation},f.default.createElement(v.default,{disabled:r.disabled,onChange:function onChange(t){return e.handleRadioSelect(n,o,t)},value:o,checked:l}))},this.renderSelectionCheckBox=function(t,n,a){var o=e.getRecordKey(n,a),r=void 0;r=e.state.selectionDirty?e.state.selectedRowKeys.indexOf(o)>=0:e.state.selectedRowKeys.indexOf(o)>=0||e.getDefaultSelection().indexOf(o)>=0;var l=e.getCheckboxPropsByItem(n);return f.default.createElement("span",{onClick:stopPropagation},f.default.createElement(g.default,{checked:r,disabled:l.disabled,onChange:function onChange(t){return e.handleSelect(n,o,t)}}))},this.handleShowSizeChange=function(t,n){var a,o=e.state.pagination;o.onShowSizeChange(t,n);var l=(0,i.default)({},o,{pageSize:n,current:t});e.setState({pagination:l}),(a=e.props).onChange.apply(a,(0,r.default)(e.prepareParamsArguments((0,i.default)({},e.state,{pagination:l}))))},this.getOddEven=function(t){return e.props.zebraColor?t%2==1?e.props.prefixCls+"-row-zebraColor-even":e.props.prefixCls+"-row-zebraColor-odd":e.state.selectedRowKeys.includes(""+(t+1))?e.props.prefixCls+"-row-zebraColor-even":null}};t.default=w},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(85)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=_interopRequireDefault(n(1)),d=n(199),c=_interopRequireDefault(d),p=_interopRequireDefault(n(194)),f=_interopRequireDefault(n(17)),m=_interopRequireDefault(n(102)),h=_interopRequireDefault(n(148));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var g=function FilterDropdownMenuWrapper(e){var t=e.onClick,n=e.children;return s.default.createElement("div",{className:"idoll-table-filter-dropdown",onClick:t},n)},v=function(e){function FilterMenu(e){(0,r.default)(this,FilterMenu);var t=(0,i.default)(this,(FilterMenu.__proto__||(0,o.default)(FilterMenu)).call(this,e));return t.setSelectedKeys=function(e){var n=e.selectedKeys;t.setState({selectedKeys:n})},t.handleClearFilters=function(){t.setState({selectedKeys:[]},t.handleConfirm)},t.handleConfirm=function(){t.setState({visible:!1}),t.confirmFilter()},t.onVisibleChange=function(e){t.setState({visible:e}),e||t.confirmFilter()},t.handleMenuItemClick=function(e){if(!(e.keyPath.length<=1)){var n=t.state.keyPathOfSelectedItem;t.state.selectedKeys.indexOf(e.key)>=0?delete n[e.key]:n[e.key]=e.keyPath,t.setState({keyPathOfSelectedItem:n})}},t.state={selectedKeys:e.selectedKeys,keyPathOfSelectedItem:{},visible:!1},t}return(0,u.default)(FilterMenu,e),(0,l.default)(FilterMenu,[{key:"componentWillReceiveProps",value:function componentWillReceiveProps(e){this.setState({selectedKeys:e.selectedKeys})}},{key:"confirmFilter",value:function confirmFilter(){this.state.selectedKeys!==this.props.selectedKeys&&this.props.confirmFilter(this.props.column,this.state.selectedKeys)}},{key:"renderMenuItem",value:function renderMenuItem(e){var t=this.props.column,n=!("filterMultiple"in t)||t.filterMultiple;return s.default.createElement(d.Item,{key:e.value},n?s.default.createElement(m.default,{checked:this.state.selectedKeys.indexOf(e.value.toString())>=0}):s.default.createElement(h.default,{checked:this.state.selectedKeys.indexOf(e.value.toString())>=0}),s.default.createElement("span",null,e.text))}},{key:"renderMenus",value:function renderMenus(e){var t=this;return e.map(function(e){if(e.children&&e.children.length>0){var n=t.state.keyPathOfSelectedItem,o=(0,a.default)(n).some(function(t){return n[t].indexOf(e.value)>=0})?"idoll-dropdown-submenu-contain-selected":"";return s.default.createElement(d.SubMenu,{title:e.text,className:o,key:e.value.toString()},e.children.map(function(e){return t.renderMenuItem(e)}))}return t.renderMenuItem(e)})}},{key:"render",value:function render(){var e=this.props,t=e.column,n=e.locale,a=!("filterMultiple"in t)||t.filterMultiple,o=t.filterDropdown?t.filterDropdown:s.default.createElement(g,null,s.default.createElement(c.default,{multiple:a,onClick:this.handleMenuItemClick,prefixCls:"idoll-dropdown-menu",onSelect:this.setSelectedKeys,onDeselect:this.setSelectedKeys,selectedKeys:this.state.selectedKeys},this.renderMenus(t.filters)),s.default.createElement("div",{className:"idoll-table-filter-dropdown-btns"},s.default.createElement("a",{className:"idoll-table-filter-dropdown-link confirm",onClick:this.handleConfirm},n.filterConfirm),s.default.createElement("a",{className:"idoll-table-filter-dropdown-link clear",onClick:this.handleClearFilters},n.filterReset))),r=this.props.selectedKeys.length>0?"idoll-table-filter-selected":"";return s.default.createElement(p.default,{trigger:["click"],overlay:o,visible:this.state.visible,onVisibleChange:this.onVisibleChange},s.default.createElement(f.default,{title:n.filterTitle,type:"filter",className:r}))}}]),FilterMenu}(s.default.Component);v.defaultProps={handleFilter:function handleFilter(){},column:null},t.default=v},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}(n(3));t.flatArray=function flatArray(){var e=arguments.length>0&&void 0!==arguments[0]?arguments[0]:[],t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"children",n=[];return function loop(e){e.forEach(function(e){var o=(0,a.default)({},e);delete o[t],n.push(o),e[t]&&e[t].length>0&&loop(e[t])})}(e),n}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=_interopRequireDefault(n(1)),d=_interopRequireDefault(n(76)),c=_interopRequireDefault(n(100));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var p=function(e){function NumericInput(e){(0,r.default)(this,NumericInput);var t=(0,i.default)(this,(NumericInput.__proto__||(0,o.default)(NumericInput)).call(this,e));return t.onChange=t.onChange.bind(t),t.onBlur=t.onBlur.bind(t),t}return(0,u.default)(NumericInput,e),(0,l.default)(NumericInput,[{key:"onChange",value:function onChange(e){var t=e.target.value;this.props.onChange(t)}},{key:"onBlur",value:function onBlur(){var e=this.props,t=e.value,onBlur=e.onBlur,n=e.onChange;"."!==t.charAt(t.length-1)&&"-"!==t||n({value:t.slice(0,-1)}),onBlur&&onBlur()}},{key:"render",value:function render(){var e=this.props.value;return s.default.createElement(d.default,{trigger:"click",title:e,placement:"topLeft"},s.default.createElement(c.default,(0,a.default)({},this.props,{onChange:this.onChange,onBlur:this.onBlur,placeholder:"请输入"})))}}]),NumericInput}(s.default.Component);t.default=p},function(e,t,n){"use strict";n(30),n(1717),n(523),n(146),n(791),n(1718),n(806)},function(e,t,n){},function(e,t,n){"use strict";n(30),n(1719)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(87)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=_interopRequireDefault(n(1)),p=_interopRequireDefault(n(14)),f=n(1931),m=_interopRequireDefault(f),h=_interopRequireDefault(n(1722)),g=_interopRequireDefault(n(1728)),v=_interopRequireDefault(n(8)),y=_interopRequireDefault(n(17)),b=_interopRequireDefault(n(1729));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1730);var C=function(e){function Tabs(){var e,t,n,a;(0,i.default)(this,Tabs);for(var o=arguments.length,r=Array(o),u=0;u<o;u++)r[u]=arguments[u];return t=n=(0,s.default)(this,(e=Tabs.__proto__||(0,l.default)(Tabs)).call.apply(e,[this].concat(r))),n.createNewTab=function(e){var t=n.props.onEdit;t&&t(e,"add")},n.removeTab=function(e,t){if(t.stopPropagation(),e){var a=n.props.onEdit;a&&a(e,"remove")}},n.handleChange=function(e){var t=n.props.onChange;t&&t(e)},a=t,(0,s.default)(n,a)}return(0,d.default)(Tabs,e),(0,u.default)(Tabs,[{key:"componentDidMount",value:function componentDidMount(){var e=p.default.findDOMNode(this);e&&!(0,b.default)()&&-1===e.className.indexOf(" no-flex")&&(e.className+=" no-flex")}},{key:"render",value:function render(){var e,t=this,n=this.props,l=n.prefixCls,i=n.className,u=void 0===i?"":i,s=n.size,d=n.type,p=void 0===d?"line":d,f=n.tabPosition,b=n.children,C=n.tabBarExtraContent,_=n.tabBarStyle,x=n.hideAdd,R=n.conentStyle,k=n.onTabClick,D=n.onPrevClick,w=n.onNextClick,S=n.animated,P=void 0===S||S,q="object"===(void 0===P?"undefined":(0,r.default)(P))?{inkBarAnimated:P.inkBar,tabPaneAnimated:P.tabPane}:{inkBarAnimated:P,tabPaneAnimated:P},I=q.inkBarAnimated,E=q.tabPaneAnimated;"line"!==p&&(E="animated"in this.props&&E);var T=(0,v.default)(u,(e={},(0,o.default)(e,l+"-vertical","left"===f||"right"===f),(0,o.default)(e,l+"-"+s,!!s),(0,o.default)(e,l+"-card",p.indexOf("card")>=0),(0,o.default)(e,l+"-cardTabs","cardTabs"===p),(0,o.default)(e,l+"-"+p,!0),(0,o.default)(e,l+"-no-animation",!E),e)),N=[];"editable-card"===p&&(N=[],c.default.Children.forEach(b,function(e,n){var a=e.props.closable,o=(a=void 0===a||a)?c.default.createElement(y.default,{type:"close",onClick:function onClick(n){return t.removeTab(e.key,n)}}):null;N.push(c.default.cloneElement(e,{tab:c.default.createElement("div",{className:a?void 0:l+"-tab-unclosable"},e.props.tab,o),key:e.key||n}))}),x||(C=c.default.createElement("span",null,c.default.createElement(y.default,{type:"plus",className:l+"-new-tab",onClick:this.createNewTab}),C))),C=C?c.default.createElement("div",{className:l+"-extra-content"},C):null;return c.default.createElement(m.default,(0,a.default)({},this.props,{className:T,tabBarPosition:f,renderTabBar:function renderTabBar(){return c.default.createElement(h.default,{inkBarAnimated:I,extraContent:C,onTabClick:k,onPrevClick:D,onNextClick:w,style:_})},renderTabContent:function renderTabContent(){return c.default.createElement(g.default,{style:R,animated:E,animatedWithMargin:!0})},onChange:this.handleChange}),N.length>0?N:b)}}]),Tabs}(c.default.Component);C.TabPane=f.TabPane,C.defaultProps={prefixCls:"idoll-tabs",hideAdd:!1},t.default=C},,,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function isFlexSupported(){if("undefined"!=typeof window&&window.document&&window.document.documentElement){var e=window.document.documentElement;return"flex"in e.style||"webkitFlex"in e.style||"Flex"in e.style||"msFlex"in e.style}return!1}},function(e,t,n){"use strict";n(1731),n(30)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(43)),r=_interopRequireDefault(n(9)),l=_interopRequireDefault(n(15)),i=_interopRequireDefault(n(11)),u=_interopRequireDefault(n(5)),s=_interopRequireDefault(n(7)),d=_interopRequireDefault(n(4)),c=_interopRequireDefault(n(6)),p=_interopRequireDefault(n(1)),f=_interopRequireDefault(n(8)),m=_interopRequireDefault(n(811)),h=_interopRequireDefault(n(0));n(1733);var g=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var v=function(e){function Timeline(){return(0,u.default)(this,Timeline),(0,d.default)(this,(Timeline.__proto__||(0,i.default)(Timeline)).apply(this,arguments))}return(0,c.default)(Timeline,e),(0,s.default)(Timeline,[{key:"render",value:function render(){var e,t=this.props,n=t.prefixCls,i=t.children,u=t.pending,s=t.pendingDot,d=t.reverse,c=t.className,h=(0,l.default)(t,["prefixCls","children","pending","pendingDot","reverse","className"]),v="boolean"==typeof u?null:u,y=(0,f.default)((e={},(0,r.default)(e,n,!0),(0,r.default)(e,n+"-pending",!!u),(0,r.default)(e,n+"-reverse",!!d),(0,r.default)(e,c,c),e)),b=u?p.default.createElement(m.default,{pending:!!u,dot:s||p.default.createElement(g.default,{type:"loading"})},v):null,C=(d?[b].concat((0,o.default)(p.default.Children.toArray(i).reverse())):[].concat((0,o.default)(p.default.Children.toArray(i)),[b])).filter(function(e){return!!e}),_=p.default.Children.count(C),x=n+"-item-last",R=p.default.Children.map(C,function(e,t){return p.default.cloneElement(e,{className:(0,f.default)([e.props.className,!d&&u?t===_-2?x:"":t===_-1?x:""])})});return p.default.createElement("ul",(0,a.default)({},h,{className:y}),R)}}]),Timeline}(p.default.Component);v.defaultProps={prefixCls:"idoll-timeline",reverse:!1},v.proprType={prefixCls:h.default.string,children:h.default.node,pending:h.default.node,className:h.default.string},t.default=v},function(e,t,n){"use strict";n(192),n(1734)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=_interopRequireDefault(n(1)),d=n(1929),c=_interopRequireDefault(d);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1736);var p=function(e){function Tree(){return(0,r.default)(this,Tree),(0,i.default)(this,(Tree.__proto__||(0,o.default)(Tree)).apply(this,arguments))}return(0,u.default)(Tree,e),(0,l.default)(Tree,[{key:"render",value:function render(){var e=this.props,t=e.prefixCls,n=e.className,o=e.children,r=this.props.checkable;return s.default.createElement(c.default,(0,a.default)({},this.props,{className:n,checkable:r?s.default.createElement("span",{className:t+"-checkbox-inner"}):r}),o)}}]),Tree}(s.default.Component);p.TreeNode=d.TreeNode,p.defaultProps={prefixCls:"idoll-tree",checkable:!1,showIcon:!1},t.default=p},function(e,t,n){"use strict";n(30),n(1737),n(146)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(43)),r=_interopRequireDefault(n(9)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=_interopRequireDefault(n(1)),p=_interopRequireDefault(n(0)),f=_interopRequireDefault(n(8)),m=_interopRequireDefault(n(1739)),h=_interopRequireDefault(n(1749)),g=_interopRequireDefault(n(812)),v=_interopRequireDefault(n(67)),y=_interopRequireDefault(n(99)),b=_interopRequireDefault(n(261));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1750);var C=function(e){function Transfer(e){(0,i.default)(this,Transfer);var t=(0,s.default)(this,(Transfer.__proto__||(0,l.default)(Transfer)).call(this,e));_.call(t),(0,v.default)(!("notFoundContent"in e||"searchPlaceholder"in e),"Transfer[notFoundContent] and Transfer[searchPlaceholder] will be removed, please use Transfer[locale] instead.");var n=e.selectedKeys,a=void 0===n?[]:n,o=e.targetKeys,r=void 0===o?[]:o;return t.state={leftFilter:"",rightFilter:"",sourceSelectedKeys:a.filter(function(e){return-1===r.indexOf(e)}),targetSelectedKeys:a.filter(function(e){return r.indexOf(e)>-1}),flag:!1},t}return(0,d.default)(Transfer,e),(0,u.default)(Transfer,[{key:"componentWillReceiveProps",value:function componentWillReceiveProps(e){var t=this.state,n=t.sourceSelectedKeys,a=t.targetSelectedKeys;if((e.targetKeys!==this.props.targetKeys||e.dataSource!==this.props.dataSource)&&(this.separatedDataSource=null,!e.selectedKeys)){var o=e.dataSource,r=e.targetKeys,l=void 0===r?[]:r,i=[],u=[];o.forEach(function(e){var t=e.key;n.indexOf(t)>=0&&!l.indexOf(t)>=0&&i.push(t),a.indexOf(t)>=0&&l.indexOf(t)>=0&&u.push(t)}),this.setState({sourceSelectedKeys:i,targetSelectedKeys:u})}if(e.selectedKeys){var s=e.targetKeys||[];this.setState({sourceSelectedKeys:e.selectedKeys.filter(function(e){return!(s.indexOf(e)>=0)}),targetSelectedKeys:e.selectedKeys.filter(function(e){return s.indexOf(e)>=0})})}}},{key:"separateDataSource",value:function separateDataSource(e){if(this.separatedDataSource)return this.separatedDataSource;var t=e.dataSource,n=e.rowKey,a=e.targetKeys,o=void 0===a?[]:a,r=[],l=new Array(o.length);return t.forEach(function(e){n&&(e.key=n(e));var t=o.indexOf(e.key);-1!==t?l[t]=e:r.push(e)}),this.separatedDataSource={leftDataSource:r,rightDataSource:l},this.separatedDataSource}},{key:"handleSelectChange",value:function handleSelectChange(e,t){var n=this.state,a=n.sourceSelectedKeys,o=n.targetSelectedKeys,r=this.props.onSelectChange;r&&("left"===e?r(t,o):r(a,t))}},{key:"getTitles",value:function getTitles(e){var t=this.props;return t.titles?t.titles:e.titles}},{key:"getSelectedKeysName",value:function getSelectedKeysName(e){return"left"===e?"sourceSelectedKeys":"targetSelectedKeys"}},{key:"render",value:function render(){return c.default.createElement(y.default,{componentName:"Transfer",defaultLocale:b.default.Transfer},this.renderTransfer)}}]),Transfer}(c.default.Component);C.List=m.default,C.Operation=h.default,C.Search=g.default,C.defaultProps={dataSource:[],render:function noop(){},locale:{},showSearch:!1},C.propTypes={prefixCls:p.default.string,disabled:p.default.bool,dataSource:p.default.array,render:p.default.func,targetKeys:p.default.array,onChange:p.default.func,height:p.default.number,style:p.default.object,listStyle:p.default.object,operationStyle:p.default.object,className:p.default.string,titles:p.default.array,operations:p.default.array,showSearch:p.default.bool,filterOption:p.default.func,searchPlaceholder:p.default.string,notFoundContent:p.default.node,locale:p.default.object,body:p.default.func,footer:p.default.func,rowKey:p.default.func,lazy:p.default.oneOfType([p.default.object,p.default.bool])};var _=function _initialiseProps(){var e=this;this.moveTo=function(t){var n=e.props,a=n.targetKeys,o=void 0===a?[]:a,l=n.dataSource,i=void 0===l?[]:l,u=n.onChange,s=e.state,d=s.sourceSelectedKeys,c=s.targetSelectedKeys,p=("right"===t?d:c).filter(function(e){return!i.some(function(t){return!(e!==t.key||!t.disabled)})}),f="right"===t?p.concat(o):o.filter(function(e){return-1===p.indexOf(e)}),m="right"===t?"left":"right";e.setState((0,r.default)({},e.getSelectedKeysName(m),[])),e.handleSelectChange(m,[]),u&&u(f,t,p)},this.moveToLeft=function(){return e.moveTo("left")},this.moveToRight=function(){return e.moveTo("right")},this.handleSelectAll=function(t,n,a){var l=e.state[e.getSelectedKeysName(t)]||[],i=n.map(function(e){return e.key}),u=l.filter(function(e){return-1===i.indexOf(e)}),s=[].concat((0,o.default)(l));i.forEach(function(e){-1===s.indexOf(e)&&s.push(e)});var d=a?u:s;e.handleSelectChange(t,d),e.props.selectedKeys||e.setState((0,r.default)({},e.getSelectedKeysName(t),d))},this.handleLeftSelectAll=function(t,n){return e.handleSelectAll("left",t,n)},this.handleRightSelectAll=function(t,n){return e.handleSelectAll("right",t,n)},this.handleFilter=function(t,n){e.setState((0,r.default)({},t+"Filter",n.target.value)),e.props.onSearchChange&&e.props.onSearchChange(t,n)},this.handleLeftFilter=function(t){return e.handleFilter("left",t)},this.handleRightFilter=function(t){return e.handleFilter("right",t)},this.handleClear=function(t){e.setState((0,r.default)({},t+"Filter",""))},this.handleLeftClear=function(){return e.handleClear("left")},this.handleRightClear=function(){return e.handleClear("right")},this.handleSelect=function(t,n,a){var l=e.state,i=l.sourceSelectedKeys,u=l.targetSelectedKeys,s=[].concat("left"===t?(0,o.default)(i):(0,o.default)(u)),d=s.indexOf(n.key);d>-1&&s.splice(d,1),a&&s.push(n.key),e.handleSelectChange(t,s),e.props.selectedKeys||e.setState((0,r.default)({},e.getSelectedKeysName(t),s))},this.handleLeftSelect=function(t,n){return e.handleSelect("left",t,n)},this.handleRightSelect=function(t,n){return e.handleSelect("right",t,n)},this.handleScroll=function(t,n){var a=e.props.onScroll;a&&a(t,n)},this.handleLeftScroll=function(t){return e.handleScroll("left",t)},this.handleRightScroll=function(t){return e.handleScroll("right",t)},this.getLocale=function(t){var n={};return"notFoundContent"in e.props&&(n.notFoundContent=e.props.notFoundContent),"searchPlaceholder"in e.props&&(n.searchPlaceholder=e.props.searchPlaceholder),(0,a.default)({},t,n,e.props.locale)},this.onLeftUpClick=function(t,n){var a=e.separateDataSource(e.props).leftDataSource;a.splice(n,1),a.splice(n-1,0,t),e.setState({flag:!e.state.flag})},this.onLeftDownClick=function(t,n){var a=e.separateDataSource(e.props).leftDataSource;a.splice(n,1),a.splice(n+1,0,t),e.setState({flag:!e.state.flag})},this.onRightUpClick=function(t,n){var a=e.separateDataSource(e.props).rightDataSource;a.splice(n,1),a.splice(n-1,0,t),e.setState({flag:!e.state.flag})},this.onRightDownClick=function(t,n){var a=e.separateDataSource(e.props).rightDataSource;a.splice(n,1),a.splice(n+1,0,t),e.setState({flag:!e.state.flag})},this.renderTransfer=function(t){var n=e.props,o=n.prefixCls,r=void 0===o?"idoll-transfer":o,l=n.className,i=n.disabled,u=n.operations,s=void 0===u?[]:u,d=n.showSearch,p=n.body,g=n.footer,v=n.style,y=n.listStyle,b=n.operationStyle,C=n.filterOption,_=n.render,x=n.lazy,R=n.sort,k=e.getLocale(t),D=e.state,w=D.leftFilter,S=D.rightFilter,P=D.sourceSelectedKeys,q=D.targetSelectedKeys,I=e.separateDataSource(e.props),E=I.leftDataSource,T=I.rightDataSource,N=q.length>0,M=P.length>0,B=(0,f.default)(l,r,i&&r+"-disabled"),O=(0,f.default)(r+"-operation"),j=e.getTitles(k);return c.default.createElement("div",{className:B,style:v},c.default.createElement(m.default,(0,a.default)({prefixCls:r+"-list",titleText:j[0],flag:e.state.flag,sort:R,dataSource:E,filter:w,filterOption:C,style:y,checkedKeys:P,handleFilter:e.handleLeftFilter,handleClear:e.handleLeftClear,handleSelect:e.handleLeftSelect,handleSelectAll:e.handleLeftSelectAll,render:_,showSearch:d,onDownClick:e.onLeftDownClick,onUpClick:e.onLeftUpClick,body:p,footer:g,lazy:x,onScroll:e.handleLeftScroll,disabled:i},k)),c.default.createElement(h.default,{className:O,rightActive:M,rightArrowText:s[0],moveToRight:e.moveToRight,leftActive:N,leftArrowText:s[1],moveToLeft:e.moveToLeft,style:b,disabled:i}),c.default.createElement(m.default,(0,a.default)({prefixCls:r+"-list",titleText:j[1],flag:e.state.flag,sort:R,dataSource:T,filter:S,filterOption:C,style:y,checkedKeys:q,handleFilter:e.handleRightFilter,handleClear:e.handleRightClear,handleSelect:e.handleRightSelect,handleSelectAll:e.handleRightSelectAll,render:_,showSearch:d,body:p,footer:g,lazy:x,onScroll:e.handleRightScroll,disabled:i,onDownClick:e.onRightDownClick,onUpClick:e.onRightUpClick},k)))}};t.default=C},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(9)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=_interopRequireDefault(n(1)),d=_interopRequireDefault(n(14)),c=_interopRequireDefault(n(8)),p=_interopRequireDefault(n(32)),f=_interopRequireDefault(n(195)),m=_interopRequireDefault(n(102)),h=_interopRequireDefault(n(812)),g=_interopRequireDefault(n(1740)),v=_interopRequireDefault(n(1748));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function noop(){}var y=function(e){function TransferList(e){(0,r.default)(this,TransferList);var t=(0,i.default)(this,(TransferList.__proto__||(0,o.default)(TransferList)).call(this,e));return t.handleSelect=function(e){var n=t.props.checkedKeys.some(function(t){return t===e.key});t.props.handleSelect(e,!n)},t.handleFilter=function(e){if(t.props.handleFilter(e),!e.target.value)return!1;t.triggerScrollTimer=window.setTimeout(function(){var e=d.default.findDOMNode(t).querySelectorAll("idoll-transfer-list-content")[0];e&&(0,v.default)(e,"scroll")},0),t.fixIERepaint()},t.handleClear=function(){t.props.handleClear(),t.fixIERepaint()},t.matchFilter=function(e,n){var a=t.props,o=a.filter,r=a.filterOption;return r?r(o,n):e.indexOf(o)>=0},t.renderItem=function(e){var n,a=t.props.render,o=(void 0===a?noop:a)(e),r=(n=o)&&!s.default.isValidElement(n)&&"[object Object]"===Object.prototype.toString.call(n);return{renderedText:r?o.value:o,renderedEl:r?o.label:o}},t.saveNotFoundRef=function(e){t.notFoundNode=e},t.state={mounted:!1},t}return(0,u.default)(TransferList,e),(0,l.default)(TransferList,[{key:"componentDidMount",value:function componentDidMount(){var e=this;this.timer=window.setTimeout(function(){e.setState({mounted:!0})},0)}},{key:"componentWillUnmount",value:function componentWillUnmount(){clearTimeout(this.timer),clearTimeout(this.triggerScrollTimer),clearTimeout(this.fixIERepainTimer)}},{key:"shouldComponentUpdate",value:function shouldComponentUpdate(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return f.default.shouldComponentUpdate.apply(this,t)}},{key:"getCheckStatus",value:function getCheckStatus(e){var t=this.props.checkedKeys;return 0===t.length?"none":e.every(function(e){return t.indexOf(e.key)>=0})?"all":"part"}},{key:"fixIERepaint",value:function fixIERepaint(){var e=this;if(!document.documentMode&&!/Edge/.test(navigator.userAgent))return!1;this.fixIERepainTimer=window.setTimeout(function(){e.notFoundNode&&(e.notFoundNode.className=e.notFoundNode.className)},0)}},{key:"render",value:function render(){var e=this,t=this.props,n=t.prefixCls,o=t.dataSource,r=t.titleText,l=t.checkedKeys,i=t.lazy,u=t.disabled,d=t.body,f=t.footer,v=t.showSearch,y=t.style,b=t.filter,C=t.searchPlaceholder,_=t.notFoundContent,x=t.itemUnit,R=t.itemsUnit,k=t.onScroll,D=t.sort,w=f&&f(this.props),S=d&&d(this.props),P=(0,c.default)(n,(0,a.default)({},n+"-with-footer",!!w)),q=[],I=[],E=o.map(function(t,a){var r=e.renderItem(t),d=r.renderedText,c=r.renderedEl;if(b&&b.trim()&&!e.matchFilter(d,t))return null;I.push(t),t.disabled||q.push(t);var p=l.indexOf(t.key)>=0;return s.default.createElement(g.default,{disabled:u,key:t.key,item:t,lazy:i,renderedText:d,renderedEl:c,checked:p,index:a,sort:D,length:o.length,prefixCls:n,onUpClick:function onUpClick(){e.props.onUpClick(t,a)},onDownClick:function onDownClick(){e.props.onDownClick(t,a)},onClick:e.handleSelect})}),T=o.length>1?R:x,N=v?s.default.createElement("div",{className:n+"-body-search-wrapper"},s.default.createElement(h.default,{prefixCls:n+"-search",onChange:this.handleFilter,handleClear:this.handleClear,placeholder:C,value:b})):null,M=S||s.default.createElement("div",{className:(0,c.default)(v?n+"-body "+n+"-body-with-search":n+"-body")},N,s.default.createElement(p.default,{component:"ul",componentProps:{onScroll:k},className:n+"-content",transitionName:this.state.mounted?n+"-content-item-heightlight":"",transitionLeave:!1},E),s.default.createElement("div",{className:n+"-body-not-found",ref:this.saveNotFoundRef},_)),B=w?s.default.createElement("div",{className:n+"-footer"},w):null,O=this.getCheckStatus(q),j="all"===O,V=s.default.createElement(m.default,{ref:"checkbox",disabled:u,checked:j,indeterminate:"part"===O,onChange:function onChange(){return e.props.handleSelectAll(q,j)}});return s.default.createElement("div",{className:P,style:y},s.default.createElement("div",{className:n+"-header"},V,s.default.createElement("span",{className:n+"-header-selected"},s.default.createElement("span",null,(l.length>0?l.length+"/":"0/")+I.length," ",T),s.default.createElement("span",{className:n+"-header-title"},r))),M,B)}}]),TransferList}(s.default.Component);y.defaultProps={dataSource:[],titleText:"",showSearch:!1,render:noop,lazy:{}},t.default=y},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(6)),d=_interopRequireDefault(n(1)),c=_interopRequireDefault(n(8)),p=_interopRequireDefault(n(195)),f=_interopRequireDefault(n(1741)),m=_interopRequireDefault(n(102)),h=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var g=function(e){function Item(){var e,t,n,a;(0,l.default)(this,Item);for(var o=arguments.length,i=Array(o),s=0;s<o;s++)i[s]=arguments[s];return t=n=(0,u.default)(this,(e=Item.__proto__||(0,r.default)(Item)).call.apply(e,[this].concat(i))),n.onUpClick=function(e){e.preventDefault(),e.stopPropagation(),n.props.onUpClick()},n.onDownClick=function(e){e.preventDefault(),e.stopPropagation(),n.props.onDownClick()},a=t,(0,u.default)(n,a)}return(0,s.default)(Item,e),(0,i.default)(Item,[{key:"shouldComponentUpdate",value:function shouldComponentUpdate(){for(var e=arguments.length,t=Array(e),n=0;n<e;n++)t[n]=arguments[n];return p.default.shouldComponentUpdate.apply(this,t)}},{key:"render",value:function render(){var e,t=this.props,n=t.renderedText,r=t.renderedEl,l=t.item,i=t.lazy,u=t.checked,s=t.disabled,p=t.prefixCls,g=t.onClick,v=t.index,y=t.length,b=t.sort,C=(0,c.default)((e={},(0,o.default)(e,p+"-content-item",!0),(0,o.default)(e,p+"-content-item-disabled",s||l.disabled),e)),_=void 0;"string"!=typeof n&&"number"!=typeof n||(_=String(n));var x=d.default.createElement("li",{className:C,title:_,onClick:s||l.disabled?void 0:function(){return g(l)}},d.default.createElement(m.default,{checked:u,disabled:s||l.disabled}),d.default.createElement("span",null,r),b&&d.default.createElement("div",null,0!==v&&d.default.createElement(h.default,{onClick:this.onUpClick,type:"up"}),y!==v+1&&d.default.createElement(h.default,{onClick:this.onDownClick,type:"down"}))),R=null;if(i){var k=(0,a.default)({height:40,offset:500,throttle:0,debounce:!1},i);R=d.default.createElement(f.default,k,x)}else R=x;return R}}]),Item}(d.default.Component);t.default=g},,,,,,,,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function triggerEvent(e,t){if("createEvent"in document){var n=document.createEvent("HTMLEvents");n.initEvent(t,!1,!0),e.dispatchEvent(n)}}},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=_interopRequireDefault(n(75));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var d=function(e){function Operation(){return(0,o.default)(this,Operation),(0,l.default)(this,(Operation.__proto__||(0,a.default)(Operation)).apply(this,arguments))}return(0,i.default)(Operation,e),(0,r.default)(Operation,[{key:"render",value:function render(){var e=this.props,t=e.disabled,n=e.moveToLeft,a=e.moveToRight,o=e.leftArrowText,r=void 0===o?"":o,l=e.rightArrowText,i=void 0===l?"":l,d=e.leftActive,c=e.rightActive,p=e.className,f=e.style;return u.default.createElement("div",{className:p,style:f},u.default.createElement("div",{className:t||!c?"disabled-icon":""},u.default.createElement(s.default,{shape:"circle",type:"primary",disabled:t||!c,onClick:a,icon:i||"right"},i)),u.default.createElement("div",{className:t||!d?"disabled-icon":""},u.default.createElement(s.default,{shape:"circle",type:"primary",disabled:t||!d,onClick:n,icon:r||"left"},r)))}}]),Operation}(u.default.Component);t.default=d},function(e,t,n){"use strict";n(30),n(1751),n(146),n(265),n(101)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(3)),o=_interopRequireDefault(n(9)),r=_interopRequireDefault(n(15)),l=_interopRequireDefault(n(11)),i=_interopRequireDefault(n(5)),u=_interopRequireDefault(n(7)),s=_interopRequireDefault(n(4)),d=_interopRequireDefault(n(6)),c=_interopRequireDefault(n(1)),p=n(1926),f=_interopRequireDefault(p),m=_interopRequireDefault(n(8)),h=n(66),g=_interopRequireDefault(n(67)),v=_interopRequireDefault(n(17)),y=_interopRequireDefault(n(74));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1753);var b=function(e){function TreeSelect(e){(0,i.default)(this,TreeSelect);var t=(0,s.default)(this,(TreeSelect.__proto__||(0,l.default)(TreeSelect)).call(this,e));return t.saveTreeSelect=function(e){t.rcTreeSelect=e},t.renderSwitcherIcon=function(e,t){var n=t.isLeaf;return t.loading?c.default.createElement(v.default,{type:"loading",className:e+"-switcher-loading-icon"}):n?null:c.default.createElement(v.default,{type:"caret-down",className:e+"-switcher-icon"})},t.renderTreeSelect=function(e){var n,l=e.getPopupContainer,i=e.getPrefixCls,u=e.renderEmpty,s=t.props,d=s.prefixCls,p=s.className,h=s.size,g=s.notFoundContent,b=s.dropdownStyle,C=s.dropdownClassName,_=s.suffixIcon,x=s.getPopupContainer,R=(0,r.default)(s,["prefixCls","className","size","notFoundContent","dropdownStyle","dropdownClassName","suffixIcon","getPopupContainer"]),k=(0,y.default)(R,["inputIcon","removeIcon","clearIcon","switcherIcon"]),D=i("select",d),w=(0,m.default)((n={},(0,o.default)(n,D+"-lg","large"===h),(0,o.default)(n,D+"-sm","small"===h),n),p),S=k.treeCheckable;S&&(S=c.default.createElement("span",{className:D+"-tree-checkbox-inner"}));var P=_&&(c.default.isValidElement(_)?c.default.cloneElement(_):_)||c.default.createElement(v.default,{type:"down",className:D+"-arrow-icon"}),q=c.default.createElement(v.default,{type:"close",className:D+"-remove-icon"}),I=c.default.createElement(v.default,{type:"close-circle",className:D+"-clear-icon",theme:"filled"});return c.default.createElement(f.default,(0,a.default)({switcherIcon:function switcherIcon(e){return t.renderSwitcherIcon(D,e)},inputIcon:P,removeIcon:q,clearIcon:I},k,{getPopupContainer:x||l,dropdownClassName:(0,m.default)(C,D+"-tree-dropdown"),prefixCls:D,className:w,dropdownStyle:(0,a.default)({maxHeight:"100vh",overflow:"auto"},b),treeCheckable:S,notFoundContent:g||u("Select"),ref:t.saveTreeSelect}))},(0,g.default)(!1!==e.multiple||!e.treeCheckable,"TreeSelect","`multiple` will alway be `true` when `treeCheckable` is true"),t}return(0,d.default)(TreeSelect,e),(0,u.default)(TreeSelect,[{key:"focus",value:function focus(){this.rcTreeSelect.focus()}},{key:"blur",value:function blur(){this.rcTreeSelect.blur()}},{key:"render",value:function render(){return c.default.createElement(h.ConfigConsumer,null,this.renderTreeSelect)}}]),TreeSelect}(c.default.Component);b.TreeNode=p.TreeNode,b.SHOW_ALL=p.SHOW_ALL,b.SHOW_PARENT=p.SHOW_PARENT,b.SHOW_CHILD=p.SHOW_CHILD,b.defaultProps={prefixCls:"idoll-select",transitionName:"slide-up",choiceTransitionName:"zoom",dropdownClassName:"idoll-select-tree-dropdown",showSearch:!1},t.default=b},function(e,t,n){"use strict";n(30),n(1754),n(190),n(146)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(9)),o=_interopRequireDefault(n(11)),r=_interopRequireDefault(n(5)),l=_interopRequireDefault(n(7)),i=_interopRequireDefault(n(4)),u=_interopRequireDefault(n(6)),s=_interopRequireDefault(n(3)),d=_interopRequireDefault(n(1)),c=_interopRequireDefault(n(1930)),p=_interopRequireDefault(n(1756)),f=_interopRequireDefault(n(261)),m=_interopRequireDefault(n(99)),h=_interopRequireDefault(n(1757)),g=_interopRequireDefault(n(8));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}function fileToObject(e){return{lastModified:e.lastModified,lastModifiedDate:e.lastModifiedDate,name:e.filename||e.name,size:e.size,type:e.type,uid:e.uid,response:e.response,error:e.error,percent:0,originFileObj:e}}var v=function(e){function Upload(e){(0,r.default)(this,Upload);var t=(0,i.default)(this,(Upload.__proto__||(0,o.default)(Upload)).call(this,e));return t.onStart=function(e){var n=void 0,a=t.state.fileList.concat();(n=fileToObject(e)).status="uploading",a.push(n),t.onChange({file:n,fileList:a}),window.FormData||t.autoUpdateProgress(0,n)},t.onSuccess=function(e,n){t.clearProgressTimer();try{"string"==typeof e&&(e=JSON.parse(e))}catch(e){}var a=t.state.fileList,o=(0,h.default)(n,a);o&&(o.status="done",o.response=e,t.onChange({file:(0,s.default)({},o),fileList:a}))},t.onProgress=function(e,n){var a=t.state.fileList,o=(0,h.default)(n,a);o&&(o.percent=e.percent,t.onChange({event:e,file:(0,s.default)({},o),fileList:t.state.fileList}))},t.onError=function(e,n,a){t.clearProgressTimer();var o=t.state.fileList,r=(0,h.default)(a,o);r&&(r.error=e,r.response=n,r.status="error",t.onChange({file:(0,s.default)({},r),fileList:o}))},t.handleManualRemove=function(e){if(t.upload.abort(e),e.status="removed","onRemove"in t.props&&!1===t.props.onRemove(e))return t.props.onRemove(e),!1;t.handleRemove(e)},t.onChange=function(e){var n=!(arguments.length>1&&void 0!==arguments[1])||arguments[1];"fileList"in t.props||!n||t.setState({fileList:e.fileList});var a=t.props.onChange;a&&a(e)},t.onFileDrop=function(e){t.setState({dragState:e.type})},t.beforeUpload=function(e,n){if(!t.props.beforeUpload)return!0;var a=t.props.beforeUpload(e,n);return!1!==a&&(!a||!a.then||a)},t.saveUpload=function(e){t.upload=e},t.renderUploadList=function(e){var n=t.props,a=n.showUploadList,o=n.listType,r=n.onPreview,l=a.showRemoveIcon,i=a.showPreviewIcon;return d.default.createElement(p.default,{listType:o,items:t.state.fileList,onPreview:r,onRemove:t.handleManualRemove,showRemoveIcon:l,showPreviewIcon:i,locale:(0,s.default)({},e,t.props.locale)})},t.state={fileList:t.props.fileList||t.props.defaultFileList||[],dragState:"drop"},t}return(0,u.default)(Upload,e),(0,l.default)(Upload,[{key:"componentWillUnmount",value:function componentWillUnmount(){this.clearProgressTimer()}},{key:"autoUpdateProgress",value:function autoUpdateProgress(e,t){var n,a=this,o=(n=.1,function(e){var t=e;return t>=.98?t:(t+=n,(n-=.01)<.001&&(n=.001),100*t)}),r=0;this.clearProgressTimer(),this.progressTimer=setInterval(function(){r=o(r),a.onProgress({percent:r},t)},200)}},{key:"removeFile",value:function removeFile(e){var t=this.state.fileList,n=(0,h.default)(e,t),a=t.indexOf(n);return-1!==a?(t.splice(a,1),t):null}},{key:"handleRemove",value:function handleRemove(e){var t=this.removeFile(e);t&&this.onChange({file:e,fileList:t})}},{key:"componentWillReceiveProps",value:function componentWillReceiveProps(e){"fileList"in e&&this.setState({fileList:e.fileList||[]})}},{key:"clearProgressTimer",value:function clearProgressTimer(){clearInterval(this.progressTimer)}},{key:"render",value:function render(){var e,t=this.props,n=t.prefixCls,o=void 0===n?"":n,r=t.className,l=t.showUploadList,i=t.listType,u=t.type,p=t.disabled,h=t.children,v=(0,s.default)({onStart:this.onStart,onError:this.onError,onProgress:this.onProgress,onSuccess:this.onSuccess},this.props,{beforeUpload:this.beforeUpload});delete v.className;var y=l?d.default.createElement(m.default,{componentName:"Upload",defaultLocale:f.default.Upload},this.renderUploadList):null;if("drag"===u){var b,C=(0,g.default)(o,(b={},(0,a.default)(b,o+"-drag",!0),(0,a.default)(b,o+"-drag-uploading",this.state.fileList.some(function(e){return"uploading"===e.status})),(0,a.default)(b,o+"-drag-hover","dragover"===this.state.dragState),(0,a.default)(b,o+"-disabled",p),b));return d.default.createElement("span",{className:r},d.default.createElement("div",{className:C,onDrop:this.onFileDrop,onDragOver:this.onFileDrop,onDragLeave:this.onFileDrop},d.default.createElement(c.default,(0,s.default)({},v,{ref:this.saveUpload,className:o+"-btn"}),d.default.createElement("div",{className:o+"-drag-container"},h))),y)}var _=(0,g.default)(o,(e={},(0,a.default)(e,o+"-select",!0),(0,a.default)(e,o+"-select-"+i,!0),(0,a.default)(e,o+"-disabled",p),e)),x=d.default.createElement("div",{className:_,style:{display:h?"":"none"}},d.default.createElement(c.default,(0,s.default)({},v,{ref:this.saveUpload})));return"picture-card"===i?d.default.createElement("span",{className:r},y,x):d.default.createElement("span",{className:r},x,y)}}]),Upload}(d.default.Component);v.Dragger=function UploadDragger(e){return d.default.createElement(v,(0,s.default)({},e,{type:"drag",style:{height:e.height,width:e.width}}))},v.defaultProps={prefixCls:"idoll-upload",type:"select",multiple:!1,action:"",data:{},accept:"",onChange:function noop(){},beforeUpload:function T(){return!0},showUploadList:!0,listType:"text",className:"",disabled:!1},t.default=v},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(9)),o=_interopRequireDefault(n(3)),r=_interopRequireDefault(n(11)),l=_interopRequireDefault(n(5)),i=_interopRequireDefault(n(7)),u=_interopRequireDefault(n(4)),s=_interopRequireDefault(n(6)),d=_interopRequireDefault(n(1)),c=_interopRequireDefault(n(32)),p=_interopRequireDefault(n(17)),f=_interopRequireDefault(n(76)),m=_interopRequireDefault(n(807)),h=_interopRequireDefault(n(8));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var g=function previewFile(e,t){var n=new FileReader;n.onloadend=function(){return t(n.result)},n.readAsDataURL(e)},v=function(e){function UploadList(){var e,t,n,a;(0,l.default)(this,UploadList);for(var o=arguments.length,i=Array(o),s=0;s<o;s++)i[s]=arguments[s];return t=n=(0,u.default)(this,(e=UploadList.__proto__||(0,r.default)(UploadList)).call.apply(e,[this].concat(i))),n.handleClose=function(e){var t=n.props.onRemove;t&&t(e)},n.handlePreview=function(e,t){var a=n.props.onPreview;if(a)return t.preventDefault(),a(e)},n.handlePre=function(e,t){var a=n.props.onPreview;if(a)return a(e)},a=t,(0,u.default)(n,a)}return(0,s.default)(UploadList,e),(0,i.default)(UploadList,[{key:"componentDidUpdate",value:function componentDidUpdate(){var e=this;"picture"!==this.props.listType&&"picture-card"!==this.props.listType||(this.props.items||[]).forEach(function(t){"undefined"!=typeof document&&"undefined"!=typeof window&&window.FileReader&&window.File&&t.originFileObj instanceof File&&void 0===t.thumbUrl&&(t.thumbUrl="",g(t.originFileObj,function(n){t.thumbUrl=n,e.forceUpdate()}))})}},{key:"render",value:function render(){var e,t=this,n=this.props,r=n.prefixCls,l=n.items,i=void 0===l?[]:l,u=n.listType,s=n.showPreviewIcon,g=n.showRemoveIcon,v=n.locale,y=i.map(function(e){var n,l=void 0,i=d.default.createElement(p.default,{type:"paper-clip"});"picture"!==u&&"picture-card"!==u||(i=d.default.createElement("a",{className:r+"-list-item-thumbnail",onClick:function onClick(n){return t.handlePreview(e,n)},href:e.url||e.thumbUrl,target:"_blank",rel:"noopener noreferrer"},d.default.createElement("img",{src:e.thumbUrl||e.url,alt:e.name}))),"picture-card"===u&&"uploading"===e.status&&(i=d.default.createElement(p.default,{className:r+"-list-item-thumbnail",type:"picture"})),"uploading"===e.status&&(l=d.default.createElement("div",{className:r+"-list-item-progress"},d.default.createElement(m.default,(0,o.default)({type:"picture-card"===t.props.listType?"circle":"line",width:"picture-card"===t.props.listType?80:null},t.props.progressAttr,{percent:Math.floor(e.percent),status:"error"===e.status?"exception":"active"}))));var y=(0,h.default)((n={},(0,a.default)(n,r+"-list-item",!0),(0,a.default)(n,r+"-list-item-"+e.status,!0),n)),b=e.url?d.default.createElement("a",(0,o.default)({},e.linkProps,{href:e.url||e.thumbUrl,target:"_blank",rel:"noopener noreferrer",className:r+"-list-item-name",onClick:function onClick(n){return t.handlePre(e,n)},title:e.name}),d.default.createElement(p.default,{type:"picture"===u||"picture-card"===u?null:"clip"}),d.default.createElement("span",null,"picture-card"===u?null:e.name),d.default.createElement(p.default,{type:"done"===e.status?"check":""})):d.default.createElement("span",{className:r+"-list-item-name",onClick:function onClick(n){return t.handlePreview(e,n)},title:e.name},d.default.createElement(p.default,{type:"picture"===t.props.listType||"picture-card"===u?null:"clip"}),d.default.createElement("span",null,"picture-card"===u?null:e.name),d.default.createElement(p.default,{type:"done"===e.status||"picture-card"===u?"check":""})),C=e.url||e.thumbUrl?void 0:{pointerEvents:"none",opacity:.5},_=s?d.default.createElement("a",{href:e.url||e.thumbUrl,target:"_blank",rel:"noopener noreferrer",style:C,onClick:function onClick(n){return t.handlePreview(e,n)},title:v.previewFile},d.default.createElement(p.default,{type:"eye"})):null,x=g?d.default.createElement(p.default,{type:"delete",title:v.removeFile,onClick:function onClick(){return t.handleClose(e)}}):null,R=g?d.default.createElement(p.default,{type:"close",title:v.removeFile,onClick:function onClick(){return t.handleClose(e)}}):null,k="picture-card"===u&&"uploading"!==e.status?d.default.createElement("span",{className:r+"-list-item-actions"},_,x):R,D=void 0;D=e.response&&"string"==typeof e.response?e.response:e.error&&e.error.statusText||v.uploadError;var w="error"===e.status?d.default.createElement(f.default,{title:D},i,b):d.default.createElement("span",null,i,b);return d.default.createElement("div",{className:y,key:e.uid},d.default.createElement("div",{className:r+"-list-item-info"},w),k,d.default.createElement(c.default,{transitionName:"fade",component:""},l))}),b=(0,h.default)((e={},(0,a.default)(e,r+"-list",!0),(0,a.default)(e,r+"-list-"+u,!0),e));return d.default.createElement("div",{className:b},d.default.createElement(c.default,{transitionName:"fade"},y))}}]),UploadList}(d.default.Component);v.defaultProps={listType:"text",progressAttr:{strokeWidth:3,showInfo:!0},prefixCls:"idoll-upload",showRemoveIcon:!0,showPreviewIcon:!0},t.default=v},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=function getFileItem(e,t){var n=e.uid?"byUid":"byName";return t.filter(function(t){return"byName"===n?t.name===e.name:t.uid===e.uid})[0]}},function(e,t,n){"use strict";n(30),n(1759)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=_interopRequireDefault(n(198));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(1761);var d=function(e){function Version(e){(0,o.default)(this,Version);var t=(0,l.default)(this,(Version.__proto__||(0,a.default)(Version)).call(this,e));return t.state={reverse:!0},t}return(0,i.default)(Version,e),(0,r.default)(Version,[{key:"render",value:function render(){return u.default.createElement("div",null,u.default.createElement(s.default,null,u.default.createElement(s.default.Item,null,u.default.createElement("h2",null,"0.2.9"),u.default.createElement("p",null,"2020-01-16"),u.default.createElement("p",null,"📢 更新 组件官网首页。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/506"},"#506")),u.default.createElement("p",null,"🐞 修复 Table组件排序图标过小。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/497"},"#497")),u.default.createElement("p",null,"🐞 修复 Tag组件cursor: pointer场景。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/507"},"#507")),u.default.createElement("p",null,"🐞 修复 Affix组件无法固定在容器顶部。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/517"},"#517")),u.default.createElement("p",null,"🐞 修复 Dropdown组件",u.default.createElement("code",null,"disabled"),"属性。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/510"},"#510")),u.default.createElement("p",null,"🐞 修复 Badge组件设置和显示数字不一致。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/498"},"#498")),u.default.createElement("p",null,"🐞 修复 Steps组件竖直场景下步骤图标距离。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/511"},"#511")),u.default.createElement("p",null,"🐞 修复 Calendar日历组件切换日期箭头颜色。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/500"},"#500")),u.default.createElement("p",null,"💄 优化 Modal组件 confirm场景下组件样式统一。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/496"},"#496")),u.default.createElement("p",null,"🛠 新增 Radio组件只读API readOnly ",u.default.createElement("code",null,"hidden"),"。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/516"},"#516")),u.default.createElement("p",null,"🛠 新增 Checkbox组件只读API readOnly ",u.default.createElement("code",null,"hidden"),"。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/505"},"#505"))),u.default.createElement(s.default.Item,null,u.default.createElement("h2",null,"0.2.8"),u.default.createElement("p",null,"2019-12-26"),u.default.createElement("p",null,"🐞 移除 Form ",u.default.createElement("code",null,"hideRequiredMark。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/477"},"#477"))),u.default.createElement("p",null,"🐞 修复 Calendar禁用文字样式看不清。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/475"},"#475")),u.default.createElement("p",null,"🐞 修复 Cascader禁用文字样式看不清。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/476"},"#476")),u.default.createElement("p",null,"🐞 移除 Modal头部，底部多余的margin。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/470"},"#470")),u.default.createElement("p",null,"🛠 新增Table columns的显隐API ",u.default.createElement("code",null,"hidden"),"。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/485"},"#485")),u.default.createElement("p",null,"🐞 修复 table带选择框选中所在行背景无变化。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/484"},"#484")),u.default.createElement("p",null,"🐞 修复 API ",u.default.createElement("code",null,"allowEmpty")," 无清除效果的问题。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/476"},"#486")),u.default.createElement("p",null,"🐞 修复 Badge必须在最顶层添加state，类名才能生效。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/474"},"#474")),u.default.createElement("p",null,"🐞 修复 Select disabled 为true 时字体颜色和背景颜色一致 。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/490"},"#490")),u.default.createElement("p",null,"🐞 修复 设置format设为",u.default.createElement("code",null,"HH:mm")," 时，时间面板秒的一列会空白一列。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/487"},"#487")),u.default.createElement("p",null,"🐞 修复 DatePicker组件中format属性为数组时，PropType数组校验报错。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/478"},"#478")),u.default.createElement("p",null,"🐞 修复 menu在禁用条件下",u.default.createElement("code",null,"hover"),"状态不正确、顶部导航高度写死问题。",u.default.createElement("a",{target:"_blank",href:"https://github.com/PIdoll/DBox/pull/482"},"#482")))))}}]),Version}(u.default.Component);t.default=d},function(e,t,n){"use strict";n(1762)},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/#/Components/General/Button"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"上一页"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/#/Components/General/Icon"},u.default.createElement("span",null,"下一页"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=_interopRequireDefault(n(1766)),d=_interopRequireDefault(n(1767)),c=_interopRequireDefault(n(1769)),p=_interopRequireDefault(n(1770)),f=_interopRequireDefault(n(1771)),m=_interopRequireDefault(n(1772));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(119);var h=function(e){function Color(){return(0,o.default)(this,Color),(0,l.default)(this,(Color.__proto__||(0,a.default)(Color)).apply(this,arguments))}return(0,i.default)(Color,e),(0,r.default)(Color,[{key:"render",value:function render(){return u.default.createElement("div",null,u.default.createElement("p",{className:"idoll-typography-p"},"颜色同字体一样也是构成设计体系的感知性设计模式要素，而清晰有效的感知性设计模式是构筑品牌差异化的重要手段。"),u.default.createElement("img",{src:s.default,className:"idoll-color-img"}),u.default.createElement(d.default,null),u.default.createElement(c.default,null),u.default.createElement(p.default,null),u.default.createElement(f.default,null),u.default.createElement(m.default,null))}}]),Color}(u.default.Component);t.default=h},function(e,t,n){e.exports=n.p+"c9d4b53bac04857d63b7f06fc4c2063d.png"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(119);var d=[{title:"Primary",value:"#13B886",description:"用于主要操作和按钮，链接，重要信息突出显示、以及进度指示和身份验证等场景。",bgColor:"#13B886",color:"#ffffff"},{title:"Black",value:"#000000",description:"用于字体颜色、页面背景、等中性色场景，并以不透明度进行层级区分。",bgColor:"#000000",color:"#ffffff"},{title:"White",value:"#FFFFFF",description:"用于字体颜色、卡片背景等不需要有色彩进行区分的场景，支持以不透明度进行层级区分。",bgColor:"#ffffff",color:"#000000",rightColor:"rgba(0,0,0,0.6)"}],c=function(e){function Color(){return(0,o.default)(this,Color),(0,l.default)(this,(Color.__proto__||(0,a.default)(Color)).apply(this,arguments))}return(0,i.default)(Color,e),(0,r.default)(Color,[{key:"render",value:function render(){return u.default.createElement(u.default.Fragment,null,u.default.createElement("h3",{className:"idoll-color-h3"},"主色（Primary Colors)"),u.default.createElement("p",{className:"idoll-color-p"},"DBox 的主要色板由绿色、黑色和白色组成。这些颜色存在于整个系统的所有页面之中。其中，Emeriald Green（宝石绿） 是我们的品牌色，寓意创新、活力、价值。"),u.default.createElement(s.Row,{gutter:16},d.map(function(e,t){return u.default.createElement(s.Col,{span:6,key:t},u.default.createElement("dl",{className:"idoll-color-item "},u.default.createElement("dt",{className:"idoll-color-item-title",style:{backgroundColor:e.value,color:e.color}},e.title,u.default.createElement("span",{className:"idoll-color-item-title-value",style:{color:e.rightColor}},e.value)),u.default.createElement("dd",{className:"idoll-color-item-desc"},e.description)))})),u.default.createElement(s.Row,{gutter:36},u.default.createElement("h3",{className:"idoll-color-main-title"},"推荐主色"),u.default.createElement(s.Col,{span:12},u.default.createElement("span",{className:"idoll-color-recommend1"},"#FF5F3F"),u.default.createElement("span",{className:"idoll-color-recommend2"},"#FF9933"),u.default.createElement("span",{className:"idoll-color-recommend3"},"#666699"),u.default.createElement("span",{className:"idoll-color-recommend4"},"#549FFF")),u.default.createElement(s.Col,{span:12},u.default.createElement("span",{className:"idoll-color-recommend5"},"#FF7457"),u.default.createElement("span",{className:"idoll-color-recommend6"},"#FF9966"),u.default.createElement("span",{className:"idoll-color-recommend7"},"#13B886"),u.default.createElement("span",{className:"idoll-color-recommend8"},"#336699"))))}}]),Color}(u.default.Component);t.default=c},function(e,t,n){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(119);var d=[{title:"Success",value:"#3CCB69",description:"用于成功状态和信息提示和反馈。",color:"#ffffff"},{title:"Warning",value:"#F9AA29",description:"用于主要操作和按钮，链接，重要信息突出显示、以及进度指示和身份验证等场景。",color:"#ffffff"},{title:"Error",value:"#F44336",description:"用于字体颜色、卡片背景等不需要有色彩进行区分的场景，支持以不透明度进行层级区分。",color:"#ffffff"}],c=function(e){function FunctionColor(){return(0,o.default)(this,FunctionColor),(0,l.default)(this,(FunctionColor.__proto__||(0,a.default)(FunctionColor)).apply(this,arguments))}return(0,i.default)(FunctionColor,e),(0,r.default)(FunctionColor,[{key:"render",value:function render(){return u.default.createElement(u.default.Fragment,null,u.default.createElement("h2",{className:"idoll-color-h3"},"功能色（Functional Colors）"),u.default.createElement("p",{className:"idoll-color-p"},"DBox 的功能色由绿色、黄色、红色组成，每种颜色都是有目的性的选择，以便在产品中提供有意义的反馈，且遵从用户对颜色的基本了解和认知习惯。"),u.default.createElement(s.Row,{gutter:16},d.map(function(e,t){return u.default.createElement(s.Col,{span:6,key:t},u.default.createElement("dl",{className:"idoll-color-item "},u.default.createElement("dt",{className:"idoll-color-item-title",style:{backgroundColor:e.value,color:e.color}},e.title,u.default.createElement("span",{className:"idoll-color-item-title-value"},e.value)),u.default.createElement("dd",{className:"idoll-color-item-desc"},e.description)))})))}}]),FunctionColor}(u.default.Component);t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(119);var d=[{title:"TableHeader",value:"#FAFAFA",description:"用于表格的标题行背景。",bgColor:"#FAFAFA",color:"#000000",rightColor:"rgba(0,0,0,0.6)"},{title:"Background",value:"#F8F8F8",description:"用于页面级的背景。",bgColor:"#F8F8F8",color:"#000000",rightColor:"rgba(0,0,0,0.6)"},{title:"Divider",value:"#F5F5F5",description:"用于分割线。",bgColor:"#F5F5F5",color:"#000000",rightColor:"rgba(0,0,0,0.6)"},{title:"Border",value:"#E2E2E2",description:"用于边框，含实线和虚线。",bgColor:"#E2E2E2",color:"#000000",rightColor:"rgba(0,0,0,0.6)"},{title:"Disable_Text",value:"#000 20%",description:"用于禁用文字的颜色，图标置灰。",bgColor:"rgba(0,0,0,.2)",color:"#ffffff"},{title:"Secondary_Text",value:"#000 40%",description:"用于次要文字颜色，图标默认颜色。（注：图标默认颜色比文字默认颜色低一个层级，弱化装饰元素）",bgColor:"rgba(0,0,0,.4)",color:"#ffffff"},{title:"Body_Text",value:"#000 60%",description:"用于默认文字颜色，图标Hover颜色。",bgColor:"rgba(0,0,0,.6)",color:"#ffffff"},{title:"Title_Text",value:"#000 80%",description:"用于标题文字的颜色，图标Pressed颜色。",bgColor:"rgba(0,0,0,.8)",color:"#ffffff"},{title:"DisableText",value:"#FFF 40%",description:"用于禁用文字颜色，图标置灰。",bgColor:"rgba(255,255,255,.4)",color:"#000000",rightColor:"rgba(0,0,0,0.6)"},{title:"Secondary",value:"#FFF 60%",description:"用于次要文字颜色，图标默认颜色。",bgColor:"rgba(255,255,255,.6)",color:"#000000",rightColor:"rgba(0,0,0,0.6)"},{title:"Body",value:"#FFF 80%",description:"用于主要（默认）文字颜色，图标Hover颜色。",bgColor:"rgba(255,255,255,.8)",color:"#000000",rightColor:"rgba(0,0,0,0.6)"},{title:"Title",value:"#FFFFFF",description:"用于标题文字颜色，图标Pressed颜色。",bgColor:"rgba(255,255,255,1)",color:"#000000",rightColor:"rgba(0,0,0,0.6)"}],c=function(e){function FunctionColor(){return(0,o.default)(this,FunctionColor),(0,l.default)(this,(FunctionColor.__proto__||(0,a.default)(FunctionColor)).apply(this,arguments))}return(0,i.default)(FunctionColor,e),(0,r.default)(FunctionColor,[{key:"render",value:function render(){return u.default.createElement(u.default.Fragment,null,u.default.createElement("h2",{className:"idoll-color-h3"},"中性色（Neutral Colors）"),u.default.createElement("p",{className:"idoll-color-p"},"DBox 的中性色是具有不同程度的饱和度和透明度的无色彩组成，通常用于文本界面和不需要用户过多关注的特定信息的展示。"),u.default.createElement(s.Row,{gutter:16},d.map(function(e,t){return u.default.createElement(s.Col,{span:6,key:t},u.default.createElement("dl",{className:"idoll-color-item "},u.default.createElement("dt",{className:"idoll-color-item-title",style:{backgroundColor:e.bgColor,color:e.color}},e.title,u.default.createElement("span",{className:"idoll-color-item-title-value",style:{color:e.rightColor}},e.value)),u.default.createElement("dd",{className:"idoll-color-item-desc"},e.description)))})))}}]),FunctionColor}(u.default.Component);t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(119);var d=[{title:"Disabled",value:"#F8F9FC",description:"用于不可用状态组件的颜色（白底）。",color:"#000000",rightColor:"rgba(0,0,0,0.6)"},{title:"Navbar",value:"#2F323B",description:"用于导航栏的默认背景色。",color:"#ffffff"}],c=function(e){function OthersColor(){return(0,o.default)(this,OthersColor),(0,l.default)(this,(OthersColor.__proto__||(0,a.default)(OthersColor)).apply(this,arguments))}return(0,i.default)(OthersColor,e),(0,r.default)(OthersColor,[{key:"render",value:function render(){return u.default.createElement(u.default.Fragment,null,u.default.createElement("h2",{className:"idoll-color-h3"},"其他颜色（Other Colors）"),u.default.createElement("p",{className:"idoll-color-p"},"DBox 的其他颜色是除主色和中性色之外有色彩的颜色，目前包括禁用色和导航条背景。"),u.default.createElement(s.Row,{gutter:16},d.map(function(e,t){return u.default.createElement(s.Col,{span:6,key:t},u.default.createElement("dl",{className:"idoll-color-item "},u.default.createElement("dt",{className:"idoll-color-item-title",style:{backgroundColor:e.value,color:e.color}},e.title,u.default.createElement("span",{className:"idoll-color-item-title-value",style:{color:e.rightColor}},e.value)),u.default.createElement("dd",{className:"idoll-color-item-desc"},e.description)))})))}}]),OthersColor}(u.default.Component);t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20);function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(119);var d=[{title:"Small",value:"0 8px 16px 0",description:"用于Select、Dropdown的下拉框等信息层级较低的需要用阴影的内容。",bgColor:"#ffffff",color:"#000000",shadow:"0px 2px 8px 0px rgba(0,0,0,0.1)",rightColor:"rgba(0,0,0,0.6)"},{title:"Large",value:"0 8px 16px 0",description:"用于Alert、Message、Popconfirm、Popover、Tooltip等信息层级较高的需要用阴影的内容。",bgColor:"#ffffff",color:"#000000",shadow:"0px 8px 16px 0px rgba(0,0,0,0.1)",rightColor:"rgba(0,0,0,0.6)"},{title:"Button",value:"0 2px 8px 0",description:"用于 Primary Button 不被卡片包裹单独使用时。",bgColor:"#13B886",color:"#ffffff",shadow:"0px 2px 8px 0px rgba(19,184,134,0.2)"}],c=function(e){function ShadowColor(){return(0,o.default)(this,ShadowColor),(0,l.default)(this,(ShadowColor.__proto__||(0,a.default)(ShadowColor)).apply(this,arguments))}return(0,i.default)(ShadowColor,e),(0,r.default)(ShadowColor,[{key:"render",value:function render(){return u.default.createElement(u.default.Fragment,null,u.default.createElement("h2",{className:"idoll-color-h3"},"阴影（Shadows）"),u.default.createElement("p",{className:"idoll-color-p"},"DBox 的投影规范了 3 种场景，Small、Large、Button，根据实际情况分别取用，基本能满足所有场景。为减少样式冗余，没有按方向细分。"),u.default.createElement(s.Row,{gutter:16},d.map(function(e,t){return u.default.createElement(s.Col,{span:6,key:t},u.default.createElement("dl",{className:"idoll-color-item "},u.default.createElement("dt",{className:"idoll-color-item-title-shadow",style:{backgroundColor:e.bgColor,color:e.color,boxShadow:e.shadow}},e.title,u.default.createElement("span",{className:"idoll-color-item-title-value",style:{color:e.rightColor}},e.value)),u.default.createElement("dd",{className:"idoll-color-item-desc"},e.description)))})))}}]),ShadowColor}(u.default.Component);t.default=c},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20);n(1774);var d=_interopRequireDefault(n(1776)),c=_interopRequireDefault(n(1777));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}var p=function(e){function Typography(){return(0,o.default)(this,Typography),(0,l.default)(this,(Typography.__proto__||(0,a.default)(Typography)).apply(this,arguments))}return(0,i.default)(Typography,e),(0,r.default)(Typography,[{key:"handelRender",value:function handelRender(e){var t=[];return e.map(function(e,n){t.push(u.default.createElement("dl",{key:n,className:"idoll-typography-props"},u.default.createElement("dt",null,e.name),u.default.createElement("dd",null,e.fontSize),u.default.createElement("dd",null,e.fontWeight),u.default.createElement("dd",null,e.color),u.default.createElement("dd",null,e.opacity)))}),t}},{key:"handleRenderUi",value:function handleRenderUi(e){var t=[];return e.map(function(e,n){t.push(u.default.createElement("dl",{key:n,className:"idoll-typography-props"},u.default.createElement("dt",{className:"idoll-typography-subtitle"},e.name),u.default.createElement("dd",null,e.lineHeight),u.default.createElement("dd",null,e.MarginTop)))}),t}},{key:"render",value:function render(){var e=this;return u.default.createElement("div",null,u.default.createElement("p",{className:"idoll-typography-p"},"字体是产品界面设计中感知性设计模式的要素之一，是设计模式可视化的内容和完成工作的主要方式，科学有序的字体系统可以有效提升产品的阅读体验。因此我们在进行大量的尝试和研究对比主流设计体系之后，制定出一套（以下）系统字体来处理 DBox 产品中所有标准字体，以确保使用 DBox 设计体系产出的产品或系统具有阅读清晰、层次分明和性能良好的特点。"),u.default.createElement("img",{className:"idoll-typography-img",src:d.default}),u.default.createElement("div",{className:"idoll-typography-title"},u.default.createElement("h4",null,"字体代码"),u.default.createElement("p",{className:"idoll-typography-p"},'font-family: -apple-system, BlinkMacSystemFont, "PingFang SC" , "Hiragino Sans GB" , "Microsoft YaHei" , "Helvetica Neue" , Helvetica , Arial , sans-serif ;')),u.default.createElement("div",{className:"idoll-typography-title"},u.default.createElement("h4",null,"推荐用法"),u.default.createElement("p",{className:"idoll-typography-p"},"DBox 提供了一套完整的标准字体，并提供建议用法，以帮助使用者更好的理解和使用本套系统。")),c.default.map(function(t,n){return u.default.createElement(s.Row,{key:n,className:"idoll-typography-wrap",gutter:32},u.default.createElement(s.Col,{span:10},u.default.createElement("h5",{style:{fontSize:t.size},className:"idoll-typography-h5"},t.title),u.default.createElement("p",{className:"idoll-typography-des"},t.description)),u.default.createElement(s.Col,{span:8},e.handelRender(t.basic)),u.default.createElement(s.Col,{span:6},e.handleRenderUi(t.ui)))}))}}]),Typography}(u.default.Component);t.default=p},function(e,t,n){"use strict";n(1775)},function(e,t,n){},function(e,t,n){e.exports=n.p+"500e0151baed0ce7305e4acbb94aaf6d.png"},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0}),t.default=[{title:"超大文字H1",description:"建议用法：适用于超大屏幕，Banner文案，适度使用。",size:"38px",basic:[{name:"基本属性",fontSize:"Font-size : 38px",fontWeight:"Font-weight ： 500 / Medium",color:"Color: #000000",opacity:"Opacity: 0.8"}],ui:[{name:"UI属性",lineHeight:"Line-height : 46px",MarginTop:"Margin-top: 56px"}]},{title:"标题文字H2",description:"建议用法：适用于空状态和功能介绍，顶级标题。",size:"30px",basic:[{name:"基本属性",fontSize:"Font-size : 30px",fontWeight:"Font-weight ： 500 / Medium",color:"Color: #000000",opacity:"Opacity: 0.8"}],ui:[{name:"UI属性",lineHeight:"Line-height : 38px",MarginTop:"Margin-top: 48px"}]},{title:"超大文字H3",description:"建议用法：适用于页面标题，每页只用一次。",size:"24px",basic:[{name:"基本属性",fontSize:"Font-size : 24px",fontWeight:"Font-weight ： 500 / Medium",color:"Color: #000000",opacity:"Opacity: 0.8"}],ui:[{name:"UI属性",lineHeight:"Line-height : 32px",MarginTop:"Margin-top: 40px"}]},{title:"超大文字H4",description:"建议用法：适用于标识关键功能的标题，模块标题。",size:"20px",basic:[{name:"基本属性",fontSize:"Font-size : 20px",fontWeight:"Font-weight ： 500 / Medium",color:"Color: #000000",opacity:"Opacity: 0.8"}],ui:[{name:"UI属性",lineHeight:"28px",MarginTop:"Margin-top: 32px"}]},{title:"标题文字H5",description:"建议用法：适用于段落和字段组标题。",size:"16px",basic:[{name:"基本属性",fontSize:"Font-size : 16px",fontWeight:"Font-weight ： 500 / Medium",color:"Color: #000000",opacity:"Opacity: 0.8"}],ui:[{name:"UI属性",lineHeight:"Line-height : 24px",MarginTop:"Margin-top: 24px"}]},{title:"标题文字H6",description:"建议用法：适用于层级较深的标题，或突出显示重要信息，表格的标题。",size:"14px",basic:[{name:"基本属性",fontSize:"Font-size : 14px",fontWeight:"Font-weight ： 500 / Medium",color:"Color: #000000",opacity:"Opacity: 0.8"}],ui:[{name:"UI属性",lineHeight:"Line-height : 22px",MarginTop:"Margin-top: 24px"}]},{title:"正文文字（大号）",description:"建议用法：适用于大尺寸的组件中的文本，比如按钮、进度条等。",size:"16px",basic:[{name:"基本属性",fontSize:"Font-size : 16px",fontWeight:"Font-weight ： 400 / Regular",color:"Color: #000000",opacity:"Opacity: 0.6"}],ui:[{name:"UI属性",lineHeight:"Line-height : 22px",MarginTop:"Margin-top: 16px"}]},{title:"正文文字（主字号）",description:"建议用法：适用于正文文字。",size:"14px",basic:[{name:"基本属性",fontSize:"Font-size : 14px",fontWeight:"Font-weight ： 400 / Regular",color:"Color: #000000",opacity:"Opacity: 0.8"}],ui:[{name:"UI属性",lineHeight:"Line-height : 22px",MarginTop:"Margin-top: 24px"}]},{title:"正文字体（小号）",description:"建议用法：适用于表单字段下的帮助文本和应用程序中的辅助支持文本，应谨慎使用。",size:"12px",basic:[{name:"基本属性",fontSize:"Font-size : 12px",fontWeight:"Font-weight ： 400 / Regular",color:"Color: #000000",opacity:"Opacity; 0.6"}],ui:[{name:"UI属性",lineHeight:"Line-height : 20px",MarginTop:"Margin-top: 8px"}]},{title:"段落文字P",description:"建议用法：适用于常规段落文字。",size:"14px",basic:[{name:"基本属性",fontSize:"Font-size : 14px",fontWeight:"Font-weight ： 400 / Regular",color:"Color: #000000",opacity:"Opacity: 0.6"}],ui:[{name:"UI属性",lineHeight:"Line-height : 22px",MarginTop:"Margin-top: 24px",LetterSpacing:"Letter-spacing: 0.5px"}]}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/GetStarted"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"快速上手"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Color"},u.default.createElement("span",null,"色彩"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/color":n(1780),react:n(1)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);",o);e.exports=[{type:"code",content:"import { Color } from 'dbox-ui';\n<Color />",settings:{noeditor:!0},evalInContext:r},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport ColorView from '../prevPage/color';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <ColorView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Version"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"版本更新"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Typography"},u.default.createElement("span",null,"字体"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/typography":n(1782),react:n(1)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);",o);e.exports=[{type:"code",content:"import {Typography} from 'dbox-ui';\n\n<Typography />",settings:{noeditor:!0},evalInContext:r},{type:"code",content:"import { BackTop } from 'dbox-ui';\nimport TypographyView from '../prevPage/typography';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <TypographyView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Color"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"色彩"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/General/Button"},u.default.createElement("span",null,"按钮"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Button",examples:n(1784)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/button":n(1785),react:n(1),"./index.jsx":n(75)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Button$0 = require('./index.jsx');\nconst Button = Button$0['Button'] || (Button$0.default || Button$0);",o);e.exports=[{type:"markdown",content:"用来触发操作和链接。\n\n##### **基本用法**\n\n通过 `type` 属性来控制按钮样式；\n按钮中的文字要尽可能短，并且清晰的表示按钮被激活时会发生什么。一个屏幕上应该只出现一个主按钮，主按钮需谨慎使用。"},{type:"code",content:"import { Button } from 'dbox-ui';\nconst buttonStyle = {\n  marginLeft: '10px'\n};\n<div>\n  <Button style={buttonStyle}>默认</Button>\n  <Button type='primary' style={buttonStyle}>主要</Button>\n  <Button type='secondary' style={buttonStyle}>次要</Button>\n  <Button disabled style={buttonStyle}>禁用</Button>\n  <Button type='dashed' style={buttonStyle}>虚线</Button>\n  <Button type='danger' style={buttonStyle}>危险</Button>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **图标按钮**\n\n通过 `icon` 属性在按钮中嵌入图标，设置 iconLocation 可以控制图标的位置，对于没有文字的图标按钮可以通过设置 `shape` 属性控制按钮的形状为圆形或方形。 在按钮中使用图标可以吸引更多注意力或帮助传达更多意义。"},{type:"code",content:"import { Button } from 'dbox-ui';\nconst buttonStyle = {\n  marginLeft: '10px'\n};\n\nhandleOnClick = () => {\n  console.log('click');\n}\n<div>\n  <Button icon='delete' size='small' style={buttonStyle}>图标</Button>\n  <Button icon='delete' style={buttonStyle}>图标</Button>\n  <Button icon='delete' size='large' style={buttonStyle}>图标</Button>\n  <br /><br />\n  <Button icon='down' iconLocation='right' size='small' style={buttonStyle}>图标</Button>\n  <Button icon='down' iconLocation='right' style={buttonStyle}>图标</Button>\n  <Button icon='down' iconLocation='right' size='large' style={buttonStyle}>图标</Button>\n  <br /><br />\n\n  <Button icon='delete' size='small' shape='circle' style={buttonStyle}/>\n  <Button icon='delete' shape='circle' style={buttonStyle}/>\n  <Button icon='delete' size='large' shape='circle' style={buttonStyle}/>\n  <br /><br />\n\n  <Button icon='delete' shape='square' size='small' style={buttonStyle}/>\n  <Button icon='delete' shape='square' style={buttonStyle}/>\n  <Button icon='delete' shape='square' size='large' style={buttonStyle}/>\n\n  <br /><br />\n  <Button type='primary' icon='delete' shape='square' size='small' style={buttonStyle}/>\n  <Button type='primary' icon='delete' shape='square' style={buttonStyle}/>\n  <Button type='primary' icon='delete' shape='square' size='large' style={buttonStyle}/>\n\n  <br /><br />\n  <Button type='secondary' icon='delete' shape='square' size='small' style={buttonStyle}/>\n  <Button type='secondary' icon='delete' shape='square' style={buttonStyle}/>\n  <Button type='secondary' icon='delete' shape='square' size='large' style={buttonStyle}/>\n\n  <br /><br />\n  <Button type='dashed' icon='delete' shape='square' size='small' style={buttonStyle}/>\n  <Button type='dashed' icon='delete' shape='square' style={buttonStyle}/>\n  <Button type='dashed' icon='delete' shape='square' size='large' style={buttonStyle}/>\n\n  <br /><br />\n  <Button type='danger' icon='delete' shape='square' size='small' style={buttonStyle}/>\n  <Button type='danger' icon='delete' shape='square' style={buttonStyle}/>\n  <Button type='danger' icon='delete' shape='square' size='large' style={buttonStyle}/>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **记载中按钮**\n\n通过`loading`属性，点击按钮后进行数据加载操作，在按钮上显示加载状态。"},{type:"code",content:"import { Button } from 'dbox-ui';\nconst buttonStyle = {\n  marginLeft: '10px'\n};\n<div>\n  <Button type='parmily' loading style={buttonStyle}>加载中</Button>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **文字按钮**\n\n通过添加 `text` 属性可以设置文字按钮，文字按钮常用于链接跳转。"},{type:"code",content:"import { Button } from 'dbox-ui';\nconst buttonStyle = {\n  marginLeft: '10px'\n};\n<div>\n  <Button text style={buttonStyle}>默认</Button>\n  <Button type='secondary' text style={buttonStyle}>主要</Button>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **按钮尺寸**\n\n通过 `size` 属性来控制按钮的大、小尺寸，默认尺寸为中。"},{type:"code",content:"import { Button } from 'dbox-ui';\nconst buttonStyle = {\n  marginLeft: '10px'\n};\n<div>\n  <Button type='primary' size='small' style={buttonStyle}>按钮</Button>\n  <Button type='primary' style={buttonStyle}>按钮</Button>\n  <Button type='primary' size='large' style={buttonStyle}>按钮</Button>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **跳转按钮**\n\n通过 `href` 属性来设置跳转按钮，并且可以通过 `target` 属性控制打开方式。"},{type:"code",content:"import { Button } from 'dbox-ui';\nconst buttonStyle = {\n  marginLeft: '10px'\n};\n<div>\n  <Button type='secondary' href='http://www.baidu.com' target='_blank' style={buttonStyle}>新页面</Button>\n  <Button type='secondary' href='http://www.baidu.com' target='_self' style={buttonStyle}>本页面</Button>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **幽灵按钮**\n\n幽灵按钮将按钮的内容反色，背景变为透明，常用在有色背景上。"},{type:"code",content:"import { Button } from 'dbox-ui';\nconst buttonStyle = {\n  marginLeft: '10px'\n};\n<div style={{ background: '#2F323B',height: '50px',paddingTop: '10px',paddingLeft: '10px'}}>\n  <Button ghost style={buttonStyle}>默认</Button>\n  <Button type='primary' ghost style={buttonStyle}>重要</Button>\n  <Button type='success' ghost style={buttonStyle}>成功</Button>\n  <Button type='warning' ghost style={buttonStyle}>警告</Button>\n  <Button type='dashed' ghost style={buttonStyle}>虚线</Button>\n  <Button type='danger' ghost style={buttonStyle}>危险</Button>\n  <Button disabled ghost style={buttonStyle}>禁用</Button>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **block按钮**\n\n通过 `block` 属性将按钮宽度撑满父容器。"},{type:"code",content:"import { Button } from 'dbox-ui';\n<div style={{ width: '600px' }}>\n  <Button type='primary' block>主要</Button>\n  <br />\n  <br />\n  <Button block>默认</Button>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **组合按钮**\n\n通过 `ButtonGroup` 将按钮组合在一起，可通过设置 `size` 属性控制组合按钮的尺寸，默认为中。"},{type:"code",content:"import { Button,Icon } from 'dbox-ui';\nconst ButtonGroup = Button.Group;\n<div>\n  <ButtonGroup>\n    <Button>取消</Button>\n    <Button>确定</Button>\n  </ButtonGroup>\n  <br />\n  <br />\n\n  <ButtonGroup>\n    <Button >选择1</Button>\n    <Button >选择2</Button>\n    <Button >选择3</Button>\n  </ButtonGroup>\n  <br />\n  <br />\n\n  <ButtonGroup>\n    <Button>\n      <Icon type='left-circle-o' />向后\n    </Button>\n    <Button>\n      向前<Icon type='right-circle-o' />\n    </Button>\n  </ButtonGroup>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **Api**\n\n| 属性           | 说明                                                                                | 类型       | 默认值       |\n| ------------ | --------------------------------------------------------------------------------- | -------- | --------- |\n| block        | 将按钮宽度调整为其父宽度的选项                                                                   | boolean  | `false`   |\n| disabled     | 按钮失效状态                                                                            | boolean  | `false`   |\n| htmlType     | 设置 `button` 原生的 `type` 值 `[button, reset, submit]`                                | string   | `button`  |\n| ghost        | 幽灵属性，使按钮背景透明                                                                      | boolean  | `false`   |\n| href         | 点击跳转的地址，指定此属性 button 的行为和 a 链接一致                                                  | string   | -         |\n| icon         | 设置按钮的图标类型                                                                         | string   | -         |\n| iconLocation | 设置按钮的图标位置，可设置为 `right`                                                            | string   | -         |\n| loading      | 设置图标是否为加载中,设置后则icon设置无效                                                           | boolean  | `false`   |\n| shape        | 设置按钮形状，可选值为 `circle` 、`square` 或者不设                                               | string   | -         |\n| size         | 设置按钮大小，可选值为 `small`、`large` 或者不设                                                  | string   | `default` |\n| target       | 相当于 a 链接的 target 属性，href 存在时生效                                                    | string   | -         |\n| text         | 设置按钮为文字按钮                                                                         | boolean  | `false`   |\n| type         | 设置按钮类型，可选值为 `default`、 `primary`、 `secondary`、 `disabled`、 `dashed`、 `danger`或者不设 | string   | -         |\n| onClick      | 点击按钮时的回调                                                                          | function | -         |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport ButtonView from '../prevPage/button';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <ButtonView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Typography"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"字体"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/General/Icon"},u.default.createElement("span",null,"图标"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Icon",examples:n(1787)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/icon":n(1788),react:n(1),"./index.jsx":n(17)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Icon$0 = require('./index.jsx');\nconst Icon = Icon$0['Icon'] || (Icon$0.default || Icon$0);",o);e.exports=[{type:"markdown",content:"我们为每个图标赋予了语义化的命名，命名规则如下:\n\n-   实心和描线图标保持同名，用 `-o` 来区分，比如 `question-circle`(实心) 和 `question-circle-o`(描线)；\n\n-   命名顺序：`[icon名]-[形状可选]-[描线与否]-[方向可选]`。\n\n##### **如何使用**\n\n使用 `<Icon />` 标签声明组件，指定图标对应的 type 属性，示例代码如下:"},{type:"code",content:'<Icon type="home" style={{fontSize: 18}} />',settings:{},evalInContext:r},{type:"markdown",content:'最终会渲染为：\n\n```html\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>idoll-icon idoll-icon-${type}<span class="token punctuation">"</span></span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">></span></span>\n```\n\n#### **图标列表**\n\n##### **一. 方向性图标**'},{type:"code",content:"import {Icon} from 'dbox-ui';\n\nconst icons1 = ['arrows-alt', 'backspace', 'backward', 'caret-down','caret-left', 'caret-right', 'caret-up', 'down', 'forward', 'fullscreen-exit','fullscreen', 'left','left-circle-o', 'menu-fold', 'menu-unfold','redo', 'reply-all','reply','right','right-circle-o','shrink','swap-horiz','swap-vert','undo','up','zoom-out','insertion','demolitions','caret-right-circle','caret-left-circle','caret-up-circle','caret-down-circle'];\nclass IconView extends React.Component {\n  render() {\n    return (\n      icons1.map(function(val,index){\n      return <li key={val} className='iconList'><Icon type={val} /><span>{val}</span></li>})\n    )\n  }\n}\n<IconView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **二. 提示建议性图标**"},{type:"code",content:"import {Icon} from 'dbox-ui';\nconst icons2 = ['bars','block','check','check-circle-o','check-circle','checkbox-blank-o', 'checkbox-checked','checkbox-indeterminate','close-circle','close-circle-o','close','delete','done',\n'error-circle-o','error-circle','filter','help-circle-o','help-circle','history', 'info-circle-o','info-circle', 'list','loading','menu','more','plus_box','plus-circle-o',\n'plus-circle','plus','radio-checked','radio-unchecked','refresh','remove-circle-o','remove-circle','remove','search','warning-o','warning'];\n\nclass IconView extends React.Component {\n  render() {\n    return (\n      icons2.map(function(val,index){\n      return <li className='iconList' key={val}><Icon type={val} /><span>{val}</span></li>})\n    )\n  }\n}\n<IconView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **三. 网站通用图标**"},{type:"code",content:"import {Icon} from 'dbox-ui';\nconst icons3 = ['account-circle-o','account-circle','achievement','appstore-o','assessment','bank-o','bank','book','calendar','chart','clear','clip','clock-o','cloud-download','cloud-upload','cloud','computer','copy','copyright','creditcard','dashboard','download','edit','email','equalizer','explore','eye_close','eye','file','flag','folder','home','hourglass','image','link-off','link','lock','logout','message','notifications','phone','platform','sad','setting','share','smile','star-half','star-o','star','tag','thumb-down','thumb-up','tool','trophy','unlock','upload','user-add','user-group','user','verified','voice','volume-down','volume-mute','volume-off','volume-up','wallet','widgets','training','idle','transfer','phone-circle-o','process','match','knowledge','headset','group','phone-callback','phone-second-forward','phone-in-talk','phone-paused','phone-transfer','phone-end','phone-deal','print'\n,'phone-locked','sign-out','sign-in','security'];\n\nclass IconView extends React.Component {\n  render() {\n    return (\n      icons3.map(function(val,index){\n      return <li className='iconList' key={val}><Icon type={val} /><span>{val}</span></li>})\n    )\n  }\n}\n<IconView />",settings:{},evalInContext:r},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport IconView from '../prevPage/icon';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <IconView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/General/Button"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"按钮"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/General/Grid"},u.default.createElement("span",null,"栅格"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Grid",examples:n(1790)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/grid":n(1791),react:n(1),"./index.jsx":n(20)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Grid$0 = require('./index.jsx');\nconst Grid = Grid$0['Grid'] || (Grid$0.default || Grid$0);",o);e.exports=[{type:"markdown",content:"为在屏幕上和谐一致的定位元素提供依据，24栅格系统有助于提升页面的秩序感和体验。\n\n##### **基本栅格布局**\n\n使用Row、Col进行基本的布局操作"},{type:"code",content:"import { Row, Col } from 'dbox-ui';\n\nconst RowDemoStyle = {\n  backgroundColor: '#13B886',\n  padding: '10px 0',\n  textAlign: 'center',\n  fontSize: '16px',\n  color: '#fff'\n}\nconst evenColor = {\n  backgroundColor: ' #3CCB69',\n  padding: '10px 0',\n  textAlign: 'center',\n  fontSize: '16px',\n  color: '#fff'\n}\nconst RowSpace = {\n  marginBottom: '20px'\n}\nclass GridView extends React.Component {\n  render() {\n    return (\n      <div>\n        <Row style={RowSpace}>\n          <Col span={12}>\n            <div style={RowDemoStyle} >col-12</div>\n          </Col>\n          <Col span={12}>\n            <div style={evenColor} >col-12</div>\n          </Col>\n        </Row>\n        <Row style={RowSpace}>\n          <Col span={8}>\n            <div style={RowDemoStyle} >col-8</div>\n          </Col>\n          <Col span={8}>\n            <div style={evenColor} >col-8</div>\n          </Col>\n          <Col span={8}>\n            <div style={RowDemoStyle} >col-8</div>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={6}>\n            <div style={RowDemoStyle} >col-6</div>\n          </Col>\n          <Col span={6}>\n            <div style={evenColor} >col-6</div>\n          </Col>\n          <Col span={6}>\n            <div style={RowDemoStyle} >col-6</div>\n          </Col>\n          <Col span={6}>\n            <div style={evenColor} >col-6</div>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n<GridView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **拥有间隔的栅格**\n\n指定Gutter字段可实现有间隔的Col"},{type:"code",content:"import {Row, Col} from 'dbox-ui';\n\nconst RowDemoStyle = {\n  backgroundColor: '#13B886',\n  padding: '10px 0',\n  textAlign: 'center',\n  fontSize: '16px',\n  color: '#fff'\n}\nconst evenColor = {\n  backgroundColor: ' #3CCB69',\n  padding: '10px 0',\n  textAlign: 'center',\n  fontSize: '16px',\n  color: '#fff'\n}\nclass GridView extends React.Component {\n  render() {\n    return (\n      <Row gutter={16}>\n        <Col span={6}>\n          <div style={RowDemoStyle} >col-6</div>\n        </Col>\n        <Col span={6}>\n          <div style={evenColor} >col-6</div>\n        </Col>\n        <Col span={6}>\n          <div style={RowDemoStyle} >col-6</div>\n        </Col>\n        <Col span={6}>\n          <div style={evenColor} >col-6</div>\n        </Col>\n      </Row>\n    )\n  }\n}\n<GridView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **可以左右偏移的栅格**\n\n指定offset可以偏移单元格Col"},{type:"code",content:"import {Row, Col} from 'dbox-ui';\n\nconst RowDemoStyle = {\n  backgroundColor: '#13B886',\n  padding: '10px 0',\n  textAlign: 'center',\n  fontSize: '16px',\n  color: '#fff'\n}\nconst evenColor = {\n  backgroundColor: ' #3CCB69',\n  padding: '10px 0',\n  textAlign: 'center',\n  fontSize: '16px',\n  color: '#fff'\n}\nconst RowSpace = {\n  marginBottom: '20px'\n}\nclass GridView extends React.Component {\n  render() {\n    return (\n      <div>\n        <Row style={RowSpace}>\n          <Col span={6} offset={6}>\n            <div style={RowDemoStyle}>col-6 col-offset-6</div>\n          </Col>\n          <Col span={6} offset={6}>\n            <div style={evenColor} >col-6 col-offset-6</div>\n          </Col>\n        </Row>\n        <Row>\n          <Col span={8} offset={4}>\n            <div style={RowDemoStyle}>col-8 col-offset-4</div>\n          </Col>\n          <Col span={8} offset={4}>\n            <div style={evenColor} >col-8 col-offset-4</div>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n<GridView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **可排序的栅格**\n\n通过pull和push改变Col的顺序"},{type:"code",content:"import {Row, Col} from 'dbox-ui';\n\nconst RowDemoStyle = {\n  backgroundColor: '#13B886',\n  padding: '10px 0',\n  textAlign: 'center',\n  fontSize: '16px',\n  color: '#fff'\n}\nconst evenColor = {\n  backgroundColor: ' #3CCB69',\n  padding: '10px 0',\n  textAlign: 'center',\n  fontSize: '16px',\n  color: '#fff'\n}\n\nclass GridView extends React.Component {\n  render() {\n    return (\n      <div>\n        <Row>\n          <Col span={16} push={8}>\n            <div style={RowDemoStyle}>col-6 col-push-8</div>\n          </Col>\n          <Col span={8} pull={16}>\n            <div style={evenColor} >col-6 col-pull-16</div>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n<GridView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **Flex布局水平对齐**\n\n通过给Row指定flex类型，指定justify为‘start’，‘end’，‘center’，‘space-between’,'space-around'等值实现水平对齐。"},{type:"code",content:"import {Row, Col} from 'dbox-ui';\nconst RowDemoStyle = {\n  backgroundColor: '#13B886',\n  padding: '10px 0',\n  textAlign: 'center',\n  fontSize: '16px',\n  color: '#fff'\n}\nconst evenColor = {\n  backgroundColor: ' #3CCB69',\n  padding: '10px 0',\n  textAlign: 'center',\n  fontSize: '16px',\n  color: '#fff'\n}\nconst headDemo = {\n  margin: '30px 0 10px 0'\n}\nconst alignDemo = {\n      height: '80px',\n      backgroundColor: '#f5f5f5'\n    }\nclass GridView extends React.Component {\n  render() {\n    return (\n      <div>\n        <h5 style={headDemo}>左对齐</h5>\n        <Row type='flex' justify='start' align='middle' style={alignDemo}>\n          <Col span={4} >\n            <div style={RowDemoStyle}>col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={evenColor} >col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={RowDemoStyle} >col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={evenColor} >col-6</div>\n          </Col>\n        </Row>\n        <h5 style={headDemo}>右对齐</h5>\n        <Row type='flex' justify='end' align='middle' style={alignDemo}>\n          <Col span={4} >\n            <div style={RowDemoStyle}>col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={evenColor} >col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={RowDemoStyle} >col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={evenColor} >col-6</div>\n          </Col>\n        </Row>\n        <h5 style={headDemo}>居中对齐</h5>\n        <Row type='flex' justify='center' align='middle' style={alignDemo}>\n          <Col span={4} >\n            <div style={RowDemoStyle}>col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={evenColor} >col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={RowDemoStyle} >col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={evenColor} >col-6</div>\n          </Col>\n        </Row>\n        <h5 style={headDemo}>两端对齐</h5>\n        <Row type='flex' justify='space-between' align='middle' style={alignDemo}>\n          <Col span={4} >\n            <div style={RowDemoStyle}>col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={evenColor} >col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={RowDemoStyle} >col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={evenColor} >col-6</div>\n          </Col>\n        </Row>\n        <h5 style={headDemo}>每个项目两端间隔相等</h5>\n        <Row type='flex' justify='space-around' align='middle' style={alignDemo}>\n          <Col span={4} >\n            <div style={RowDemoStyle}>col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={evenColor} >col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={RowDemoStyle} >col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={evenColor} >col-6</div>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n<GridView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **Flex布局垂直对齐**\n\n指定flex类型，通过指定algin为‘top’，‘middle’,'bottom'实现上、中、下对齐。"},{type:"code",content:"import {Row, Col} from 'dbox-ui';\n\nconst RowDemoStyle = {\n  backgroundColor: '#13B886',\n  padding: '10px 0',\n  textAlign: 'center',\n  fontSize: '16px',\n  color: '#fff'\n}\nconst evenColor = {\n  backgroundColor: ' #3CCB69',\n  padding: '10px 0',\n  textAlign: 'center',\n  fontSize: '16px',\n  color: '#fff'\n}\nconst headDemo = {\n  margin: '30px 0 10px 0'\n}\nconst alignDemo = {\n      height: '80px',\n      backgroundColor: '#f5f5f5'\n    }\nclass GridView extends React.Component {\n  render() {\n    return (\n      <div>\n        <h5 style={headDemo}>垂直分布在顶部</h5>\n        <Row type='flex' justify='center' align='top' style={alignDemo}>\n          <Col span={4} >\n            <div style={RowDemoStyle}>col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={evenColor} >col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={RowDemoStyle} >col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={evenColor} >col-6</div>\n          </Col>\n        </Row>\n        <h5 style={headDemo}>垂直分布在中间</h5>\n        <Row type='flex' justify='center' align='middle' style={alignDemo}>\n          <Col span={4} >\n            <div style={RowDemoStyle}>col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={evenColor} >col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={RowDemoStyle} >col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={evenColor} >col-6</div>\n          </Col>\n        </Row>\n        <h5 style={headDemo}>垂直分布在低部</h5>\n        <Row type='flex' justify='center' align='bottom' style={alignDemo}>\n          <Col span={4} >\n            <div style={RowDemoStyle}>col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={evenColor} >col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={RowDemoStyle} >col-6</div>\n          </Col>\n          <Col span={4} >\n            <div style={evenColor} >col-6</div>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n<GridView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **Flex排序**\n\n通过order可以对col进行排序"},{type:"code",content:"import {Row, Col} from 'dbox-ui';\n\nconst RowDemoStyle = {\n  backgroundColor: '#13B886',\n  padding: '10px 0',\n  textAlign: 'center',\n  fontSize: '16px',\n  color: '#fff'\n}\nconst evenColor = {\n  backgroundColor: ' #3CCB69',\n  padding: '10px 0',\n  textAlign: 'center',\n  fontSize: '16px',\n  color: '#fff'\n}\n const alignDemo = {\n  height: '80px',\n  backgroundColor: '#f5f5f5'\n}\nclass GridView extends React.Component {\n  render() {\n    return (\n      <div>\n        <Row type='flex' justify='space-around' align='middle' style={alignDemo}>\n          <Col span={4} order={4}>\n            <div style={RowDemoStyle} >col-order1</div>\n          </Col>\n          <Col span={4} order={3}>\n            <div style={evenColor} >col-order2</div>\n          </Col>\n          <Col span={4} order={2}>\n            <div style={RowDemoStyle} >col-order3</div>\n          </Col>\n          <Col span={4} order={1}>\n            <div style={evenColor} >col-order4</div>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n<GridView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **自定义栅格布局**\n\n指定xs，sm，md，lg和xl进行相应的响应式操作"},{type:"code",content:"import {Row, Col} from 'dbox-ui';\n\nconst RowDemoStyle = {\n  backgroundColor: '#13B886',\n  padding: '10px 0',\n  textAlign: 'center',\n  fontSize: '16px',\n  color: '#fff'\n}\nconst evenColor = {\n  backgroundColor: ' #3CCB69',\n  padding: '10px 0',\n  textAlign: 'center',\n  fontSize: '16px',\n  color: '#fff'\n}\nconst alignDemo = {\n  height: '80px',\n  backgroundColor: '#f5f5f5'\n}\nclass GridView extends React.Component {\n  render() {\n    return (\n      <div>\n        <Row style={alignDemo} type='flex' align='middle'>\n          <Col xs={4} sm={12} md={14} lg={2} xl={12}>\n            <div style={RowDemoStyle}>col-12 </div>\n          </Col>\n          <Col xs={20} sm={12} md={4} lg={22} xl={12}>\n            <div style={evenColor} >col-12</div>\n          </Col>\n        </Row>\n      </div>\n    )\n  }\n}\n<GridView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **Row**\n\n| 参数      | 说明                                                                    | 类型     | 默认值     |\n| ------- | --------------------------------------------------------------------- | ------ | ------- |\n| gutter  | 栅格间隔                                                                  | number | 0       |\n| type    | 布局模式，可选 `flex`，现代浏览器下有效                                               | string |         |\n| align   | flex 布局下的垂直对齐方式：`top` `middle` `bottom`                               | string | `top`   |\n| justify | flex 布局下的水平排列方式：`start` `end` `center` `space-around` `space-between` | string | `start` |\n\n##### **Col**\n\n| 参数     | 说明                                | 类型               | 默认值 |\n| ------ | --------------------------------- | ---------------- | --- |\n| span   | 栅格占位格数，为 0 时相当于 `display: none`   | number           | -   |\n| order  | 栅格顺序，`flex` 布局模式下有效               | number           | 0   |\n| offset | 栅格左侧的间隔格数，间隔内不可以有栅格               | number           | 0   |\n| push   | 栅格向右移动格数                          | number           | 0   |\n| pull   | 栅格向左移动格数                          | number           | 0   |\n| xs     | `<768px` 响应式栅格，可为栅格数或一个包含其他属性的对象  | number or object | -   |\n| sm     | `≥768px` 响应式栅格，可为栅格数或一个包含其他属性的对象  | number or object | -   |\n| md     | `≥992px` 响应式栅格，可为栅格数或一个包含其他属性的对象  | number or object | -   |\n| lg     | `≥1200px` 响应式栅格，可为栅格数或一个包含其他属性的对象 | number or object | -   |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport GridView from '../prevPage/grid';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <GridView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/General/Icon"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"图标"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/General/Layout"},u.default.createElement("span",null,"布局"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Layout",examples:n(1793)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/layout":n(1794),react:n(1),"./index.jsx":n(664)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Layout$0 = require('./index.jsx');\nconst Layout = Layout$0['Layout'] || (Layout$0.default || Layout$0);",o);e.exports=[{type:"markdown",content:"提供常用网页布局\n\n##### **基础布局**"},{type:"code",content:"import {Layout} from 'dbox-ui';\nconst Header = Layout.Header;\nconst Content = Layout.Content;\nconst Footer = Layout.Footer;\nconst Sider = Layout.Sider;\n<div className='base'>\n  <Layout style={{ height: '50vh'}}>\n    <Header style={{ height: '10vh'}}>头部</Header>\n    <Content>内容</Content>\n    <Footer style={{ height: '10vh'}}>底部</Footer>\n  </Layout>\n  <br />\n  <Layout style={{ height: '50vh'}}>\n    <Header style={{ height: '10vh'}}>头部</Header>\n    <Layout>\n      <Sider style={{width: '10vh'}}>侧边栏</Sider>\n      <Content>内容</Content>\n    </Layout>\n    <Footer style={{ height: '10vh'}}>底部</Footer>\n  </Layout>\n  <br />\n  <Layout style={{height: '50vh'}}>\n    <Sider style={{ width: '10vh'}}>侧边栏</Sider>\n    <Layout style={{height: '50vh'}}>\n      <Header style={{height: '10vh'}}>头部</Header>\n      <Content>内容</Content>\n      <Footer style={{height: '10vh'}}>底部</Footer>\n    </Layout>\n  </Layout>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **顶部导航**\n\n顺应了从上至下的正常浏览顺序，方便浏览信息；适用于导航较少，页面篇幅较长的网站。"},{type:"code",content:"import {Menu, Breadcrumb, Layout} from 'dbox-ui';\nconst SubMenu = Menu.SubMenu;\nconst Header = Layout.Header;\nconst Content = Layout.Content;\nclass LayoutView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: 'platform'\n    }\n    this.handleClick = this.handleClick.bind(this)\n  };\n  handleClick (e) {\n    this.setState({\n      current: e.key,\n    })\n  }\n  render() {\n    return (\n      <Layout className='layout-horizontal'>\n        <Header>\n          <div className='logo'><div>LOGO</div></div>\n          <Menu\n            onClick={this.handleClick}\n            selectedKeys={[this.state.current]}\n            mode='horizontal'\n            theme='dark'>\n            <Menu.Item key='1'><div>首页</div></Menu.Item>\n            <Menu.Item key='2'><div>工作台</div></Menu.Item>\n            <SubMenu key='sub1' title={<div>订单中心</div>}>\n              <Menu.Item key='3'>子菜单一</Menu.Item>\n              <Menu.Item key='4'>子菜单二</Menu.Item>\n              <Menu.Item key='5'>子菜单三</Menu.Item>\n              <Menu.Item key='6'>子菜单四</Menu.Item>\n            </SubMenu>\n            <Menu.Item indexkey='tool'>\n              <a href='javascript:;' target='_blank'><div>配置管理</div></a>\n            </Menu.Item>\n          </Menu>\n        </Header>\n        <Breadcrumb>\n          <Breadcrumb.Item>首页</Breadcrumb.Item>\n          <Breadcrumb.Item><a href='javascript:void(0);'>订单中心</a></Breadcrumb.Item>\n          <Breadcrumb.Item>子菜单</Breadcrumb.Item>\n        </Breadcrumb>\n        <Content style={{padding: 24, backgroundColor: '#f5f5f5'}}>\n          <div className='content' style={{backgroundColor: '#fff'}}>内容</div>\n        </Content>\n      </Layout>\n    )\n  }\n}\n<LayoutView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **侧边导航-面包屑**\n\n搭配传统面包屑的侧边导航，提高导航可见性，方便页面之间切换，常用于中后台网站。"},{type:"code",content:"import {Menu, Breadcrumb, Avatar, Icon, Dropdown, Layout} from 'dbox-ui';\nconst SubMenu = Menu.SubMenu;\nconst Header = Layout.Header;\nconst Content = Layout.Content;\nconst Sider = Layout.Sider;\nconst DropdownNormal = Dropdown.DropdownNormal;\nconst menu = (\n  <Menu theme='light'>\n    <Menu.Item key='2'><a href='javascript:;' target='_blank'>Alvin</a></Menu.Item>\n    <Menu.Item key='3'><a href='javascript:;' target='_blank'>Dbox</a></Menu.Item>\n    <Menu.Item key='4'><a href='javascript:;' target='_blank'>Idoll</a></Menu.Item>\n  </Menu>\n)\nclass LayoutView extends React.Component {\n  constructor(props) {\n    super(props);\n    const panes = [\n      { title: <Icon type='home' />, content: '首页', key: '7' }\n    ];\n    this.state = {\n      current: 'home',\n      flag: false,\n      openKeys: ['item_1'],\n      modeMenu: 'inline',\n      mode: 'top',\n      panes,\n      activeKey: panes[0].key\n    }\n    this.handleClickBread = this.handleClickBread.bind(this)\n    this.changeModel = this.changeModel.bind(this)\n    this.onOpenChange = this.onOpenChange.bind(this)\n    this.inlineMenu = this.inlineMenu.bind(this)\n  };\n  handleClickBread (e) {\n    this.setState({\n      current: e.key,\n    })\n  }\n  changeModel () {\n    this.setState({\n      modeMenu: !this.state.flag ? 'vertical' : 'inline',\n      flag: !this.state.flag,\n      openKeys: [],\n    })\n  }\n  onOpenChange (openKeys) {\n    const latestOpenKey = openKeys.find(i => this.state.openKeys.indexOf(i) === -1);\n      this.setState({\n        openKeys: latestOpenKey ? [latestOpenKey] : [],\n      });\n  }\n  inlineMenu () {\n    if (this.state.flag) {\n      return (<Sider className='miniSlider'>\n        <div className={this.state.flag ? 'miniLogo' : 'logo'}><div>LOGO</div></div>\n        <Menu\n        onClick={this.handleClickBread}\n        defaultSelectedKeys={['7']}\n        mode={this.state.modeMenu}\n>\n        <Menu.Item key='7'><div><Icon type='home' /><span>首页</span></div></Menu.Item>\n        <SubMenu key='item_1' title={<div><Icon type='platform' /><span>工作台</span></div>}>\n          <Menu.Item key='8'>子菜单一</Menu.Item>\n          <Menu.Item key='9'>子菜单二</Menu.Item>\n          <Menu.Item key='10'>子菜单三</Menu.Item>\n          <Menu.Item key='11'>子菜单四</Menu.Item>\n        </SubMenu>\n        <SubMenu key='item_2' title={<div><Icon type='bars' /><span>订单中心</span></div>}>\n          <Menu.Item key='12'>子菜单五</Menu.Item>\n          <Menu.Item key='13'>子菜单六</Menu.Item>\n          <Menu.Item key='14'>子菜单七</Menu.Item>\n          <Menu.Item key='15'>子菜单八</Menu.Item>\n        </SubMenu>\n        <SubMenu key='item_3' title={<div><Icon type='tool' /><span>配置管理</span></div>}>\n          <Menu.Item key='16'>子菜单九</Menu.Item>\n          <Menu.Item key='17'>子菜单十</Menu.Item>\n          <Menu.Item key='18'>子菜单十一</Menu.Item>\n          <Menu.Item key='19'>子菜单十二</Menu.Item>\n        </SubMenu>\n      </Menu>\n      <Icon type={this.state.flag ? 'right-circle-o' : 'left-circle-o'} onClick={this.changeModel} />\n      </Sider>)\n    } else {\n      return (<Sider className='normalSlider'>\n        <div className={this.state.flag ? 'miniLogo' : 'logo'}><div>LOGO</div></div>\n        <Menu\n        onClick={this.handleClickBread}\n        defaultSelectedKeys={['7']}\n        openKeys={this.state.openKeys}\n        onOpenChange={this.onOpenChange}\n        mode={this.state.modeMenu}>\n        <Menu.Item key='7'><div><Icon type='home' /><span>首页</span></div></Menu.Item>\n        <SubMenu key='item_1' title={<div><Icon type='platform' /><span>工作台</span></div>}>\n          <Menu.Item key='8'>子菜单一</Menu.Item>\n          <Menu.Item key='9'>子菜单二</Menu.Item>\n          <Menu.Item key='10'>子菜单三</Menu.Item>\n          <Menu.Item key='11'>子菜单四</Menu.Item>\n        </SubMenu>\n        <SubMenu key='item_2' title={<div><Icon type='bars' /><span>订单中心</span></div>}>\n          <Menu.Item key='12'>子菜单五</Menu.Item>\n          <Menu.Item key='13'>子菜单六</Menu.Item>\n          <Menu.Item key='14'>子菜单七</Menu.Item>\n          <Menu.Item key='15'>子菜单八</Menu.Item>\n        </SubMenu>\n        <SubMenu key='item_3' title={<div><Icon type='tool' /><span>配置管理</span></div>}>\n          <Menu.Item key='16'>子菜单九</Menu.Item>\n          <Menu.Item key='17'>子菜单十</Menu.Item>\n          <Menu.Item key='18'>子菜单十一</Menu.Item>\n          <Menu.Item key='19'>子菜单十二</Menu.Item>\n        </SubMenu>\n      </Menu>\n      <Icon type={this.state.flag ? 'right-circle-o' : 'left-circle-o'} onClick={this.changeModel} />\n      </Sider>)\n    }\n  }\n  render() {\n    return (\n      <div className='layout-inlineNav'>\n        <Layout>\n          {this.inlineMenu()}\n          <Layout>\n            <Header style={{height: 56, paddingRight: 24, border: '1px solid #f5f5f5', lineHeight: '56px'}} >\n              <Icon type='message' />\n              <Avatar size='small' src='https://images.pexels.com/users/avatars/26735/lisa-fotios-223.jpeg?w=60&h=60&fit=crop&crop=faces' alt='DBox' />\n              <DropdownNormal overlay={menu} type='caret-down' trigger={['hover']} >\n                Alvin\n              </DropdownNormal>\n            </Header>\n            <Breadcrumb>\n              <Breadcrumb.Item>首页</Breadcrumb.Item>\n              <Breadcrumb.Item><a href='javascript:void(0);'>订单中心</a></Breadcrumb.Item>\n              <Breadcrumb.Item>子菜单</Breadcrumb.Item>\n            </Breadcrumb>\n            <Content style={{padding: '0 24px 24px 24px', backgroundColor: '#f5f5f5'}}>\n              <div className='content' style={{backgroundColor: '#fff'}}>内容</div>\n            </Content>\n          </Layout>\n        </Layout>\n      </div>\n    )\n  }\n}\n<LayoutView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **侧边导航-Tab页**\n\n用Tab页签代替面包屑的侧边导航，提高常用页面切换的灵活性。"},{type:"code",content:"import{Menu, Avatar, Tabs, Icon, Dropdown, Layout} from 'dbox-ui';\nconst SubMenu = Menu.SubMenu;\nconst TabPane = Tabs.TabPane;\nconst Header = Layout.Header;\nconst Content = Layout.Content;\nconst Sider = Layout.Sider;\nconst DropdownNormal = Dropdown.DropdownNormal;\nconst menu = (\n  <Menu theme='light'>\n    <Menu.Item key='2'><a href='javascript:;' target='_blank'>Alvin</a></Menu.Item>\n    <Menu.Item key='3'><a href='javascript:;' target='_blank'>Dbox</a></Menu.Item>\n    <Menu.Item key='4'><a href='javascript:;' target='_blank'>Idoll</a></Menu.Item>\n  </Menu>\n)\nconst array = [];\nclass LayoutView extends React.Component {\n  constructor(props) {\n    super(props);\n    const panes = [\n      { title: <Icon type='home' />, content: '首页', key: '27' }\n    ];\n    this.state = {\n      openKeys: ['sub1'],\n      flag: false,\n      modeMenu: 'inline',\n      mode: 'top',\n      panes,\n      activeKey: panes[0].key\n    }\n    this.handleClickTabs = this.handleClickTabs.bind(this)\n    this.changeModel = this.changeModel.bind(this)\n    this.onChange = this.onChange.bind(this)\n    this.onEdit = this.onEdit.bind(this)\n    this.add = this.add.bind(this)\n    this.remove = this.remove.bind(this)\n    this.onOpenChange = this.onOpenChange.bind(this)\n    this.inlineMenu = this.inlineMenu.bind(this)\n  };\n  onOpenChange (openKeys) {\n    const latestOpenKey = openKeys.find(i => this.state.openKeys.indexOf(i) === -1);\n      this.setState({\n        openKeys: latestOpenKey ? [latestOpenKey] : [],\n      });\n  }\n  handleClickTabs (e) {\n    array.push(...e.keyPath)\n    this.setState({\n      current: e.key,\n      activeKey: e.key\n    });\n    if (this.state.panes.findIndex(i => i.key === e.key) !== -1) {\n      return false\n    } else {\n      this.add(e.key, e.item.props.title)\n    }\n  }\n  changeModel () {\n    this.setState({\n      modeMenu: !this.state.flag ? 'vertical' : 'inline',\n      flag: !this.state.flag,\n      openKeys: [],\n    })\n  }\n  onChange (activeKey) {\n    const id = array.indexOf(activeKey) + 1\n    this.setState({ activeKey, openKeys: [array[id]] });\n  }\n  onEdit (targetKey, action) {\n    this[action](targetKey);\n  }\n  add (key, title) {\n    const panes = this.state.panes;\n    const activeKey = key;\n    panes.push({ title: title, content: title, key: activeKey });\n    this.setState({panes, activeKey});\n  }\n  remove (targetKey) {\n    let activeKey = this.state.activeKey;\n    let lastIndex;\n    this.state.panes.forEach((pane, i) => {\n      if (pane.key === targetKey) {\n        lastIndex = i - 1;\n      }\n    });\n    const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n    if (lastIndex >= 0 && activeKey === targetKey) {\n      activeKey = panes[lastIndex].key;\n    }\n    const id = array.indexOf(activeKey) + 1\n    this.setState({\n      panes,\n      activeKey,\n      openKeys: [array[id]]});\n  }\n  inlineMenu () {\n    if (this.state.flag) {\n      return (<Sider className='miniSlider'>\n        <div className={this.state.flag ? 'miniLogo' : 'logo'}><div>LOGO</div></div>\n        <Menu\n        onClick={this.handleClickTabs}\n        defaultSelectedKeys={['27']}\n        selectedKeys={[this.state.activeKey]}\n        mode={this.state.modeMenu}\n>\n        <Menu.Item title='首页' key='27'><div><Icon type='home' /><span>首页</span></div></Menu.Item>\n        <SubMenu key='sub1' title={<div><Icon type='platform' /><span>工作台</span></div>}>\n          <Menu.Item title='子菜单一' key='28'>子菜单一</Menu.Item>\n          <Menu.Item title='子菜单二' key='29'>子菜单二</Menu.Item>\n          <Menu.Item title='子菜单三' key='30'>子菜单三</Menu.Item>\n          <Menu.Item title='子菜单四' key='31'>子菜单四</Menu.Item>\n        </SubMenu>\n        <SubMenu key='sub2' title={<div><Icon type='bars' /><span>订单中心</span></div>}>\n          <Menu.Item title='子菜单五' key='32'>子菜单五</Menu.Item>\n          <Menu.Item title='子菜单六' key='33'>子菜单六</Menu.Item>\n          <Menu.Item title='子菜单七' key='34'>子菜单七</Menu.Item>\n          <Menu.Item title='子菜单八' key='35'>子菜单八</Menu.Item>\n        </SubMenu>\n        <SubMenu key='sub3' title={<div><Icon type='tool' /><span>配置管理</span></div>}>\n          <Menu.Item title='子菜单九' key='36'>子菜单九</Menu.Item>\n          <Menu.Item title='子菜单十' key='37'>子菜单十</Menu.Item>\n          <Menu.Item title='子菜单十一' key='38'>子菜单十一</Menu.Item>\n          <Menu.Item title='子菜单十二' key='39'>子菜单十二</Menu.Item>\n        </SubMenu>\n      </Menu>\n      <Icon type={this.state.flag ? 'right-circle-o' : 'left-circle-o'} onClick={this.changeModel} />\n      </Sider>)\n    } else {\n      return (<Sider className='normalSlider'>\n        <div className={this.state.flag ? 'miniLogo' : 'logo'}><div>LOGO</div></div>\n        <Menu\n        onClick={this.handleClickTabs}\n        defaultSelectedKeys={['27']}\n        selectedKeys={[this.state.activeKey]}\n        openKeys={this.state.openKeys}\n        onOpenChange={this.onOpenChange}\n        mode={this.state.modeMenu}>\n        <Menu.Item title='首页' key='27'><div><Icon type='home' /><span>首页</span></div></Menu.Item>\n        <SubMenu key='sub1' title={<div><Icon type='platform' /><span>工作台</span></div>}>\n          <Menu.Item title='子菜单一' key='28'>子菜单一</Menu.Item>\n          <Menu.Item title='子菜单二' key='29'>子菜单二</Menu.Item>\n          <Menu.Item title='子菜单三' key='30'>子菜单三</Menu.Item>\n          <Menu.Item title='子菜单四' key='31'>子菜单四</Menu.Item>\n        </SubMenu>\n        <SubMenu key='sub2' title={<div><Icon type='bars' /><span>订单中心</span></div>}>\n          <Menu.Item title='子菜单五' key='32'>子菜单五</Menu.Item>\n          <Menu.Item title='子菜单六' key='33'>子菜单六</Menu.Item>\n          <Menu.Item title='子菜单七' key='34'>子菜单七</Menu.Item>\n          <Menu.Item title='子菜单八' key='35'>子菜单八</Menu.Item>\n        </SubMenu>\n        <SubMenu key='sub3' title={<div><Icon type='tool' /><span>配置管理</span></div>}>\n          <Menu.Item title='子菜单九' key='36'>子菜单九</Menu.Item>\n          <Menu.Item title='子菜单十' key='37'>子菜单十</Menu.Item>\n          <Menu.Item title='子菜单十一' key='38'>子菜单十一</Menu.Item>\n          <Menu.Item title='子菜单十二' key='39'>子菜单十二</Menu.Item>\n        </SubMenu>\n      </Menu>\n      <Icon type={this.state.flag ? 'right-circle-o' : 'left-circle-o'} onClick={this.changeModel} />\n      </Sider>)\n    }\n  }\n  render() {\n    return (\n      <div className='layout-inlineNav inlineTabs'>\n        <Layout>\n          {this.inlineMenu()}\n          <Layout>\n            <Header style={{height: 56, paddingRight: 24, border: '1px solid #f5f5f5', lineHeight: '56px'}} >\n              <Icon type='message' />\n              <Avatar size='small' src='https://images.pexels.com/users/avatars/26735/lisa-fotios-223.jpeg?w=60&h=60&fit=crop&crop=faces' alt='DBox' />\n              <DropdownNormal overlay={menu} type='caret-down' trigger={['hover']} >\n                Alvin\n              </DropdownNormal>\n            </Header>\n            <Content style={{backgroundColor: '#f5f5f5'}}>\n              <Tabs conentStyle={{padding: '24px'}} hideAdd onChange={this.onChange} activeKey={this.state.activeKey} type='editable-card' onEdit={this.onEdit}>\n                {this.state.panes.map(pane => <TabPane closable={pane.key === '27' ? false : 'true'} tab={pane.title} key={pane.key}>{pane.content}</TabPane>)}\n              </Tabs>\n            </Content>\n          </Layout>\n        </Layout>\n      </div>\n    )\n  }\n}\n<LayoutView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **API**\n\nLayout\n\n| 参数        | 说明           | 类型     | 默认值 |\n| --------- | ------------ | ------ | --- |\n| className | 容器 className | string | -   |\n| style     | 样式           | object | -   |\n\n\\-具体API可参考使用的组件API"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport LayoutView from '../prevPage/layout';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <LayoutView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/General/Grid"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"栅格"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Navigation/Affix"},u.default.createElement("span",null,"固钉"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Affix",examples:n(1796)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/affix":n(1797),react:n(1),"./index.jsx":n(188)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Affix$0 = require('./index.jsx');\nconst Affix = Affix$0['Affix'] || (Affix$0.default || Affix$0);",o);e.exports=[{type:"markdown",content:"将元素固定在特定区域，一般用于导航栏或反馈按钮。\n\n##### **固定在顶部**\n\n最简单的用法"},{type:"code",content:"import { Affix, Button } from 'dbox-ui';\n\nclass AffixView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      top: 64,\n    }\n  }\n  render() {\n    return (\n      <Affix offsetTop={this.state.top} ref='box_affix'>\n        <Button  >距离顶部64px触发</Button>\n      </Affix>\n    )\n  }\n}\n<AffixView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **固定在底部**\n\n固定状态改变时的回调"},{type:"code",content:"import { Affix, Button } from 'dbox-ui';\n\nconst AffixView = () => {\n  return (\n    <Affix offsetBottom={0} onChange={affixed => console.log(affixed)}>\n      <Button >距离底部0px触发</Button>\n    </Affix>\n  )\n}\n<AffixView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **固定在容器**\n\n使用target设置Affix需要监听其滚动事件的元素"},{type:"code",content:"import { Affix, Button } from 'dbox-ui';\n\nclass AffixView extends React.Component{\n  render() {\n    return (\n      <div id='container' style={{height: '100px', overflow: 'scroll'}}>\n        <div style={{backgroundColor: '#dedede', paddingTop: '30px', height: '300px'}}>\n          <Affix target={() => document.getElementById('container')}>\n            <Button type=\"primary\">\n                固定在容器的顶部\n            </Button>\n          </Affix>\n        </div>\n      </div>\n    )\n  }\n}\n<AffixView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **API**\n\n| 成员           | 说明                                         | 类型                | 默认值          |\n| ------------ | ------------------------------------------ | ----------------- | ------------ |\n| offsetBottom | 距离窗口底部达到指定偏移量后触发                           | number            |              |\n| offsetTop    | 距离窗口顶部达到指定偏移量后触发                           | number            |              |\n| target       | 设置 `Affix` 需要监听其滚动事件的元素，值为一个返回对应 DOM 元素的函数 | () => HTMLElement | () => window |\n| onChange     | 固定状态改变时触发的回调函数                             | Function(affixed) | 无            |\n\n**注意：**`Affix` 内的元素不要使用绝对定位，如需要绝对定位的效果，可以直接设置 `Affix` 为绝对定位："},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport AffixView from '../prevPage/affix';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <AffixView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/General/Layout"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"布局"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Navigation/Breadcrumb"},u.default.createElement("span",null,"面包屑"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Breadcrumb",examples:n(1799)}},function(e,t,n){var a={"dbox-ui":n(21),"react-router-dom":n(1927),"../prevPage/breadcrumb":n(1801),react:n(1),"./index.jsx":n(269)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Breadcrumb$0 = require('./index.jsx');\nconst Breadcrumb = Breadcrumb$0['Breadcrumb'] || (Breadcrumb$0.default || Breadcrumb$0);",o);e.exports=[{type:"markdown",content:"帮助用户查看当前所处的位置。\n\n##### **基本用法**\n\n最基本的用法"},{type:"code",content:"import { Breadcrumb } from 'dbox-ui';\n\nclass BreadcrumbView extends React.Component {\n  render() {\n    return (\n      <Breadcrumb>\n        <Breadcrumb.Item><a href='#'>首页</a></Breadcrumb.Item>\n        <Breadcrumb.Item><a href='javascript:void(0);'>个人中心</a></Breadcrumb.Item>\n        <Breadcrumb.Item>设置</Breadcrumb.Item>\n      </Breadcrumb>\n    )\n  }\n}\n<BreadcrumbView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **带图标的**\n\n将图标放在文字的前面"},{type:"code",content:"import { Breadcrumb, Icon } from 'dbox-ui';\n\nclass BreadcrumbView extends React.Component {\n  render() {\n    return (\n      <Breadcrumb>\n        <Breadcrumb.Item href='#'>\n          <Icon type='home' />\n        </Breadcrumb.Item>\n        <Breadcrumb.Item href='#'>\n          <Icon type='user' />\n          <span>点击</span>\n        </Breadcrumb.Item>\n        <Breadcrumb.Item>\n          点击\n        </Breadcrumb.Item>\n      </Breadcrumb>\n    )\n  }\n}\n<BreadcrumbView />",settings:{},evalInContext:r},{type:"markdown",content:'##### **自定义分隔符**\n\n使用separator=">"可以自定义分隔符'},{type:"code",content:"import { Breadcrumb } from 'dbox-ui';\n\nclass BreadcrumbView extends React.Component {\n  render() {\n    return (\n      <Breadcrumb separator='>'>\n        <Breadcrumb.Item><a href='#'>首页</a></Breadcrumb.Item>\n        <Breadcrumb.Item><a href='javascript:void(0);'>个人中心</a></Breadcrumb.Item>\n        <Breadcrumb.Item>设置</Breadcrumb.Item>\n      </Breadcrumb>\n    )\n  }\n}\n<BreadcrumbView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **Router**"},{type:"code",content:"import {Breadcrumb, Alert} from 'dbox-ui';\nimport { HashRouter as Router, Route, Switch, Link, withRouter } from 'react-router-dom';\n\nclass RouterBreadcrumb extends React.Component {\n  render() {\n    const Apps = () => (\n      <ul className='app-list'>\n        <li>\n          <Link to='/apps/1'>Router1</Link>：<Link to='/apps/1/detail'>点击</Link>\n        </li>\n        <li>\n          <Link to='/apps/2'>Router2</Link>：<Link to='/apps/2/detail'>点击</Link>\n        </li>\n      </ul>\n    );\n    const breadcrumbNameMap = {\n      '/GetStarted': 'Application List',\n      '/apps/1': 'Application1',\n      '/apps/2': 'Application2',\n      '/apps/1/detail': 'Detail',\n      '/apps/2/detail': 'Detail'\n    };\n    const Home = withRouter((props) => {\n      const { location } = props;\n      const pathSnippets = location.pathname.split('/').filter(i => i);\n      const extraBreadcrumbItems = pathSnippets.map((_, index) => {\n        const url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\n        return (\n          <Breadcrumb.Item key={url}>\n            <Link to={url}>\n              {breadcrumbNameMap[url]}\n            </Link>\n          </Breadcrumb.Item>\n        );\n      });\n      const breadcrumbItems = [(\n        <Breadcrumb.Item key='home'>\n          <Link to='/'>点击</Link>\n        </Breadcrumb.Item>\n      )].concat(extraBreadcrumbItems);\n      return (\n        <div className='demo'>\n          <div className='demo-nav'>\n            <Link to='/'>点击</Link>\n            <Link to='/apps'>点击</Link>\n          </div>\n          <Switch>\n            <Route path='/apps' component={Apps} />\n            <Route render={() => <span>内容</span>} />\n          </Switch>\n          <Alert style={{ margin: '16px 0' }} message='内容:' />\n          <Breadcrumb>\n            {breadcrumbItems}\n          </Breadcrumb>\n        </div>\n      );\n    });\n    return (\n      <Router>\n        <Home />\n      </Router>\n    )\n  }\n}\n<RouterBreadcrumb />",settings:{},evalInContext:r},{type:"markdown",content:'##### **API**\n\n| 参数         | 说明                        | 类型                                         | 默认值 |\n| ---------- | ------------------------- | ------------------------------------------ | --- |\n| separator  | 分隔符自定义                    | string\\\\ReactNode                          | \'/\' |\n| params     | 路由的参数                     | object                                     | -   |\n| routes     | router的路由栈信息              | object\\[]                                  | -   |\n| itemRender | 自定义链接函数，和react-router配置使用 | （route， params, routes, paths）=> ReactNode | -   |\n\n##### **与browserHistory配合**\n\n```html\nimport { Link } from \'react-router\';\n\nconst routes = [{\n  path: \'index\',\n  breadcrumbName: \'首页\'\n}, {\n  path: \'first\',\n  breadcrumbName: \'一级面包屑\'\n}, {\n  path: \'second\',\n  breadcrumbName: \'当前页面\'\n}];\nfunction itemRender(route, params, routes, paths) {\n  const last = routes.indexOf(route) === routes.length - 1;\n  return last ? <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>span</span><span class="token punctuation">></span></span>{route.breadcrumbName}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>span</span><span class="token punctuation">></span></span> : &lt;Link to={paths.join(\'/\')}>{route.breadcrumbName}<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>Link</span><span class="token punctuation">></span></span>;\n}\n\nreturn <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>Breadcrumb</span> <span class="token attr-name">itemRender</span><span class="token attr-value"><span class="token punctuation">=</span>{itemRender}</span> <span class="token attr-name">routes</span><span class="token attr-value"><span class="token punctuation">=</span>{routes}/</span><span class="token punctuation">></span></span>;\n```'},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport BreadcrumbView from '../prevPage/breadcrumb';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <BreadcrumbView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},,function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Navigation/Affix"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"固钉"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Navigation/Dropdown"},u.default.createElement("span",null,"下拉框"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Dropdown",examples:n(1803)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/dropdown":n(1804),react:n(1),"./index.jsx":n(194)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Dropdown$0 = require('./index.jsx');\nconst Dropdown = Dropdown$0['Dropdown'] || (Dropdown$0.default || Dropdown$0);",o);e.exports=[{type:"markdown",content:"使用下拉菜单从一组选项中选择一个或多个选项，下拉菜单中的选项一般为5-15个\n\n##### **基本用法**\n\n只允许用户选择单个选项，其中按钮提供文字按钮和默认按钮两种样式。触发对象可以是链接、按钮等各种元素。"},{type:"code",content:"import {Button, Dropdown, Menu} from 'dbox-ui';\nconst MenuItem = Menu.MenuItem;\nconst DropdownNormal = Dropdown.DropdownNormal;\nconst menu2 = (\n  <Menu theme = 'light' onClick={handleMenu1Click}>\n    <MenuItem key='2.1'><a >操作选项</a></MenuItem>\n    <MenuItem key='2.2'><a >操作选项</a></MenuItem>\n    <MenuItem key='2.3'><a >操作选项</a></MenuItem>\n  </Menu>\n);\nconst menu1 = (\n  <Menu theme = 'light' onClick={handleMenu1Click}>\n    <MenuItem key='1'><a >操作选项</a></MenuItem>\n    <MenuItem key='2'><a >操作选项</a></MenuItem>\n    <MenuItem key='3'><a >操作选项</a></MenuItem>\n  </Menu>\n);\nfunction handleButtonClick(e) {\n  console.info('click left button', e);\n};\nfunction handleMenu1Click(e) {\n  console.info('click', e);\n};\n<div>\n  <DropdownNormal style={{marginRight: 20}} overlay={menu2} type='caret-down' trigger={['hover']} >\n    下拉菜单\n  </DropdownNormal>\n  <Dropdown overlay={menu1} trigger={['hover']} onClick={handleButtonClick}>\n    <Button style={{marginLeft: '50px'}}>\n    默认菜单\n    </Button>\n  </Dropdown>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **常用类型**\n\n通过 type 属性可设置下拉菜单按钮的样式。"},{type:"code",content:"import {Icon, Button, Dropdown, Menu} from 'dbox-ui';\nconst MenuItem = Menu.MenuItem;\nconst DropdownButton = Dropdown.DropdownButton;\nconst DropdownNormal = Dropdown.DropdownNormal;\nconst menu4 = (\n  <Menu theme = 'light' onClick={handleMenu1Click}>\n    <MenuItem key='1'><a ><Icon type='bars' />操作选项</a></MenuItem>\n    <MenuItem key='2'><a ><Icon type='bars' />操作选项</a></MenuItem>\n    <MenuItem key='3'><a ><Icon type='bars' />操作选项</a></MenuItem>\n  </Menu>\n);\nconst menu2 = (\n  <Menu theme = 'light' onClick={handleMenu1Click}>\n    <MenuItem key='2.1'><a >操作选项</a></MenuItem>\n    <MenuItem key='2.2'><a >操作选项</a></MenuItem>\n    <MenuItem key='2.3'><a >操作选项</a></MenuItem>\n  </Menu>\n);\nfunction handleButtonClick(e) {\n  console.info('click left button', e);\n};\nfunction handleMenu1Click(e) {\n  console.info('click', e);\n};\n<div>\n    <Dropdown overlay={menu4} trigger={['hover']} onClick={handleButtonClick}>\n      <Button>\n        默认菜单\n      </Button>\n    </Dropdown>\n    <Dropdown overlay={menu4} trigger={['hover']} onClick={handleButtonClick}>\n      <Button style={{marginLeft: '50px', marginRight: '50px' }} type='primary'>\n        主要菜单\n      </Button>\n    </Dropdown>\n    <Dropdown overlay={menu4} trigger={['hover']} onClick={handleButtonClick}>\n      <Button type='secondary'>\n        次要菜单\n      </Button>\n    </Dropdown>\n    <DropdownButton  style={{marginLeft: '50px', marginRight: '50px' }} disabled overlay={menu4} trigger={['hover']} onClick={handleButtonClick}>\n      禁用菜单\n    </DropdownButton>\n    <DropdownNormal overlay={menu2} type='caret-down' trigger={['hover']} >\n      文本菜单\n    </DropdownNormal>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **组合使用**\n\n在一组按钮中可放置一个Dropdown按钮，常置于最右侧。"},{type:"code",content:"import {Button, Dropdown, Menu} from 'dbox-ui';\nconst MenuItem = Menu.MenuItem;\nconst ButtonGroup = Button.Group;\nconst DropdownButton = Dropdown.DropdownButton;\nconst menu1 = (\n  <Menu theme = 'light' onClick={handleMenu1Click}>\n    <MenuItem key='1'><a >操作选项</a></MenuItem>\n    <MenuItem key='2'><a >操作选项</a></MenuItem>\n    <MenuItem key='3'><a >操作选项</a></MenuItem>\n  </Menu>\n);\nfunction handleMenu1Click(e) {\n  console.info('click', e);\n};\n\n<ButtonGroup>\n  <Button>\n    操作一\n  </Button>\n  <Button>\n    操作二\n  </Button>\n  <DropdownButton style={{float: 'none'}} overlay={menu1} trigger={['hover']}>\n  操作三\n  </DropdownButton>\n</ButtonGroup>",settings:{},evalInContext:r},{type:"markdown",content:"##### **三种尺寸**\n\n通过 size 属性设置为 large small 来控制大、小尺寸，默认尺寸为中。"},{type:"code",content:"import {Dropdown, Menu} from 'dbox-ui';\nconst MenuItem = Menu.MenuItem;\nconst DropdownButton = Dropdown.DropdownButton;\nconst menu2 = (\n  <Menu theme = 'light' onClick={handleMenu1Click}>\n    <MenuItem key='2.1'><a >操作选项</a></MenuItem>\n    <MenuItem key='2.2'><a >操作选项</a></MenuItem>\n    <MenuItem key='2.3'><a >操作选项</a></MenuItem>\n  </Menu>\n);\nfunction handleMenu1Click(e) {\n  console.info('click', e);\n};\n<div>\n  <DropdownButton size='small' overlay={menu2} trigger={['hover']}>\n      默认菜单\n    </DropdownButton>\n    <DropdownButton style={{marginLeft: '50px', marginRight: '50px' }} overlay={menu2} trigger={['hover']}>\n      默认菜单\n    </DropdownButton>\n    <DropdownButton size='large' overlay={menu2} trigger={['hover']}>\n      默认菜单\n  </DropdownButton>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **弹出位置**\n\n通过 placement 属性来设置弹框弹出位置，支持6个方向。"},{type:"code",content:"import {Button, Dropdown, Menu} from 'dbox-ui';\nconst MenuItem = Menu.MenuItem;\nconst menu = (\n  <Menu theme='light' onClick={handleMenu1Click}>\n    <MenuItem key='1'><a >操作选项</a></MenuItem>\n    <MenuItem key='2'><a >操作选项</a></MenuItem>\n    <MenuItem key='3'><a >操作选项</a></MenuItem>\n  </Menu>\n);\nfunction handleMenu1Click(e) {\n  console.info('click', e);\n};\n<div>\n  <Dropdown overlay={menu} placement='topLeft'>\n    <Button>上左</Button>\n  </Dropdown>\n  <Dropdown overlay={menu} placement='topCenter'>\n    <Button  style={{marginLeft: 25, marginRight: 25}}>上中</Button>\n  </Dropdown>\n  <Dropdown overlay={menu} placement='topRight'>\n    <Button>上右</Button>\n  </Dropdown>\n  <Dropdown overlay={menu} placement='bottomLeft'>\n    <Button  style={{marginLeft: 25, marginRight: 25}}>下左</Button>\n  </Dropdown>\n  <Dropdown overlay={menu} placement='bottomCenter'>\n    <Button>下中</Button>\n  </Dropdown>\n  <Dropdown overlay={menu} placement='bottomRight'>\n    <Button style={{marginLeft: 25}}>下右</Button>\n  </Dropdown>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **触发方式**\n\n通过 trigger 属性设置为 hover click 来控制触发方式，默认鼠标移入触发弹框。"},{type:"code",content:"import { Button, Dropdown, Menu } from 'dbox-ui';\nconst MenuItem = Menu.MenuItem;\nconst DropdownNormal = Dropdown.DropdownNormal;\nconst menu = (\n  <Menu theme='light'onClick={handleMenu1Click}>\n    <MenuItem key='1'><a >操作选项</a></MenuItem>\n    <MenuItem key='2'><a >操作选项</a></MenuItem>\n    <MenuItem key='3'><a >操作选项</a></MenuItem>\n  </Menu>\n);\nconst menu2 = (\n  <Menu theme = 'light' onClick={handleMenu1Click}>\n    <MenuItem key='2.1'><a >操作选项</a></MenuItem>\n    <MenuItem key='2.2'><a >操作选项</a></MenuItem>\n    <MenuItem key='2.3'><a >操作选项</a></MenuItem>\n  </Menu>\n);\nfunction handleMenu1Click(e) {\n  console.info('click', e);\n};\nfunction handleButtonClick(e) {\n  console.info('click left button', e);\n};\n<div>\n  <DropdownNormal overlay={menu2} type='caret-down' trigger={['click']} >\n    点击下拉菜单\n  </DropdownNormal>\n  <Dropdown overlay={menu} trigger={['hover']} onClick={handleButtonClick}>\n    <Button style={{marginLeft: 25}}>\n    hover默认菜单\n    </Button>\n  </Dropdown>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **触发事件**\n\n点击菜单触发相应事件，用户可以通过相应的菜单项 key 进行不同的操作。"},{type:"code",content:"import {Button, Dropdown, Menu} from 'dbox-ui';\nconst MenuItem = Menu.MenuItem;\nconst menu = (\n  <Menu theme = 'light' onClick={handleMenu1Click}>\n    <MenuItem key='2.1'><a >操作选项</a></MenuItem>\n    <MenuItem key='2.2'><a >操作选项</a></MenuItem>\n    <MenuItem key='2.3'><a >操作选项</a></MenuItem>\n  </Menu>\n);\nfunction handleMenu1Click(e) {\n  console.info('click', e);\n};\nfunction onVisibleChangeBtn (visible) {\nconsole.log(`按钮菜单发生了变化====>${visible}`)\n};\nfunction handleButtonClick(e) {\n  console.info('click left button', e);\n};\n<Dropdown overlay={menu} trigger={['hover']} onVisibleChange={onVisibleChangeBtn} onClick={handleButtonClick}>\n  <Button>\n  hover默认菜单\n  </Button>\n</Dropdown>",settings:{},evalInContext:r},{type:"markdown",content:"##### **多级菜单**\n\n弹出框里的菜单支持多级传入。"},{type:"code",content:"import {Icon, Button, Dropdown, Menu} from 'dbox-ui';\nconst MenuItem = Menu.MenuItem;\nconst SubMenu = Menu.SubMenu;\nconst DropdownButton = Dropdown.DropdownButton;\nconst menu1 = (\n  <Menu theme = 'light' onClick={handleMenu1Click}>\n    <MenuItem key='1.1'><a >操作选项</a></MenuItem>\n    <MenuItem key='1.2'><a >操作选项</a></MenuItem>\n    <SubMenu title='子菜单'>\n      <MenuItem key='2.3'><a >操作选项</a></MenuItem>\n      <MenuItem key='2.4'><a >操作选项</a></MenuItem>\n    </SubMenu>\n  </Menu>\n)\nfunction handleMenu1Click(e) {\n  console.info('click', e);\n};\n<DropdownButton placement='bottomLeft' overlay={menu1} trigger={['hover']}>\n  默认菜单\n</DropdownButton>",settings:{},evalInContext:r},{type:"markdown",content:"##### **API**\n\n| 参数              | 说明                          | 类型                                                                                  | 默认值          |\n| --------------- | --------------------------- | ----------------------------------------------------------------------------------- | ------------ |\n| trigger         | 触发下拉的行为                     | ['click'] or ['hover']                                                              | ['hover']    |\n| placement       | 菜单弹出位置                      | string (`bottomLeft` `bottomCenter` `bottomRight` `topLeft` `topCenter` `topRight`) | `bottomLeft` |\n| overlay         | 菜单                          | Menu                                                                                | -            |\n| disabled        | 菜单是否禁用                      | `boolean`                                                                           | false        |\n| visible         | 菜单是否显示                      | Bool                                                                                | 无            |\n| onVisibleChange | 菜单显示状态改变时调用，参数为 { visible } | Function                                                                            | -            |\n\n##### **DropdownButton**\n\n| 参数        | 说明                      | 类型                                                                                  | 默认值          |\n| --------- | ----------------------- | ----------------------------------------------------------------------------------- | ------------ |\n| type      | 按钮类型，和 `Button` 一致      | String                                                                              | -            |\n| onClick   | 点击左侧按钮的回调，和 `Button` 一致 | Function                                                                            | -            |\n| trigger   | 触发下拉的行为                 | ['click'] or ['hover']                                                              | ['hover']    |\n| overlay   | 菜单                      | `Menu`                                                                              | -            |\n| disabled  | 菜单是否禁用                  | `boolean`                                                                           | false        |\n| visible   | 菜单是否显示                  | Bool                                                                                | 无            |\n| placement | 菜单弹出位置                  | string (`bottomLeft` `bottomCenter` `bottomRight` `topLeft` `topCenter` `topRight`) | `bottomLeft` |\n| size      | 按钮菜单大小和Button一致         | string (`large` `small`)                                                            | -            |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport DropdownView from '../prevPage/dropdown';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <DropdownView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Navigation/Breadcrumb"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"面包屑"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Navigation/Menu"},u.default.createElement("span",null,"菜单"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Menu",examples:n(1806)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/menu":n(1807),react:n(1),"./index.jsx":n(665)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Menu$0 = require('./index.jsx');\nconst Menu = Menu$0['Menu'] || (Menu$0.default || Menu$0);",o);e.exports=[{type:"markdown",content:"提供导航的功能菜单。\n\n##### **顶部导航**\n\n广泛适用的顶部导航。通过 theme 属性设置为 light dark 切换主题模式。"},{type:"code",content:"import {Menu} from 'dbox-ui';\nconst SubMenu = Menu.SubMenu;\nclass MenuView extends React.Component {\n  constructor(props) {\n    super(props);\n\t  this.state = {\n\t    current: 'home'\n\t  }\n\t  this.handleClick = this.handleClick.bind(this)\n  };\n  handleClick (e) {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    });\n  }\n  render() {\n    return (\n      <Menu\n        onClick={this.handleClick}\n        selectedKeys={[this.state.current]}\n        mode='horizontal'\n        theme='dark'\n        >\n        <Menu.Item key='home'>首页</Menu.Item>\n        <Menu.Item key='platform' disabled>工作台</Menu.Item>\n        <SubMenu key='bars' title={<span>订单中心</span>}>\n          <Menu.Item key='1'>子菜单一</Menu.Item>\n          <Menu.Item key='2'>子菜单二</Menu.Item>\n          <Menu.Item key='3'>子菜单三</Menu.Item>\n          <Menu.Item key='4'>子菜单四</Menu.Item>\n        </SubMenu>\n        <Menu.Item key='tool'>\n          <a href='javascript:;' target='_blank' rel='noopener noreferrer'>配置管理</a>\n        </Menu.Item>\n      </Menu>\n    )\n  }\n}\n<MenuView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **手风琴菜单**\n\n每次只打开一个菜单，其他菜单自动收起，使菜单简洁聚焦，同时避免同时展开多个菜单，导致侧边导航文字溢出。"},{type:"code",content:"import {Menu, Icon} from 'dbox-ui';\nconst SubMenu = Menu.SubMenu;\nclass MenuView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      openKeys: ['sub_1'],\n      current: 'home'\n    }\n    this.onOpenChange = this.onOpenChange.bind(this)\n  };\n  onOpenChange (value) {\n    const latestOpenKey = value.find(key => this.state.openKeys.indexOf(key) === -1);\n      this.setState({\n        openKeys: latestOpenKey ? [latestOpenKey] : [],\n      });\n  }\n  render() {\n    return (\n      <Menu\n        onClick={this.handleClick}\n        defaultSelectedKeys={['55']}\n        openKeys={this.state.openKeys}\n        onOpenChange={this.onOpenChange}\n        mode='inline'>\n        <Menu.Item key='55'><div><Icon type='home' /><span>首页</span></div></Menu.Item>\n        <SubMenu key='sub_1' title={<div><Icon type='platform' /><span>工作台</span></div>}>\n          <Menu.Item key='56'>子菜单一</Menu.Item>\n          <Menu.Item key='57'>子菜单二</Menu.Item>\n          <Menu.Item key='58'>子菜单三</Menu.Item>\n          <Menu.Item key='59'>子菜单四</Menu.Item>\n        </SubMenu>\n        <SubMenu key='sub_2' title={<div><Icon type='bars' /><span>订单中心</span></div>}>\n          <Menu.Item key='60'>子菜单五</Menu.Item>\n          <Menu.Item key='61'>子菜单六</Menu.Item>\n          <Menu.Item key='62'>子菜单七</Menu.Item>\n          <Menu.Item key='63'>子菜单八</Menu.Item>\n        </SubMenu>\n        <SubMenu key='sub_3' title={<div><Icon type='tool' /><span>配置管理</span></div>}>\n          <Menu.Item key='64'>子菜单九</Menu.Item>\n          <Menu.Item key='65'>子菜单十</Menu.Item>\n          <Menu.Item key='66'>子菜单十一</Menu.Item>\n          <Menu.Item key='67'>子菜单十二</Menu.Item>\n        </SubMenu>\n      </Menu>\n    )\n  }\n}\n<MenuView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **内嵌侧栏导航**\n\n垂直导航的基本使用，支持展开/收起。"},{type:"code",content:"import {Menu, Switch, Icon} from 'dbox-ui';\nconst SubMenu = Menu.SubMenu;\nclass MenuView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: 'home',\n      mode: 'inline',\n    }\n    this.handleClick = this.handleClick.bind(this)\n    this.changeMode = this.changeMode.bind(this)\n  };\n  handleClick (e) {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    });\n  }\n  changeMode (value) {\n    this.setState({\n      mode: value ? 'vertical' : 'inline',\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Switch\n          onChange={this.changeMode}\n          type='primary'\n          checkedChildren='折叠' />\n        <br />\n        <Menu\n          onClick={this.handleClick}\n          defaultSelectedKeys={['5']}\n          mode={this.state.mode}>\n        <Menu.Item key='5'><div><Icon type='home' /><span>首页</span></div></Menu.Item>\n        <SubMenu key='sub1' title={<div><Icon type='platform' /><span>工作台</span></div>}>\n          <Menu.Item key='6'>子菜单一</Menu.Item>\n          <Menu.Item key='7'>子菜单二</Menu.Item>\n          <Menu.Item key='8'>子菜单三</Menu.Item>\n          <Menu.Item key='9'>子菜单四</Menu.Item>\n        </SubMenu>\n        <SubMenu key='sub2' title={<div><Icon type='bars' /><span>订单中心</span></div>}>\n          <Menu.Item key='10'>子菜单五</Menu.Item>\n          <Menu.Item key='11'>子菜单六</Menu.Item>\n          <Menu.Item key='12'>子菜单七</Menu.Item>\n          <Menu.Item key='13'>子菜单八</Menu.Item>\n        </SubMenu>\n        <SubMenu key='sub3' title={<div><Icon type='tool' /><span>配置管理</span></div>}>\n          <Menu.Item key='14'>子菜单九</Menu.Item>\n          <Menu.Item key='15'>子菜单十</Menu.Item>\n          <Menu.Item key='16'>子菜单十一</Menu.Item>\n          <Menu.Item key='17'>子菜单十二</Menu.Item>\n        </SubMenu>\n      </Menu>\n    </div>\n    )\n  }\n}\n<MenuView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **动态侧栏导航**\n\n支持两种主题切换,垂直导航的基本使用，支持展开/收起。"},{type:"code",content:"import {Menu, Switch, Icon} from 'dbox-ui';\nconst SubMenu = Menu.SubMenu;\nclass MenuView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: 'platform',\n      theme: 'light',\n      mode: 'inline',\n    }\n    this.handleClick = this.handleClick.bind(this)\n    this.changeMode = this.changeMode.bind(this)\n    this.changeTheme = this.changeTheme.bind(this)\n  };\n   handleClick (e) {\n    console.log('click ', e);\n    this.setState({\n      current: e.key,\n    });\n  }\n  changeTheme (value) {\n    this.setState({\n      theme: value ? 'light' : 'dark',\n    })\n  }\n  changeMode (value) {\n    this.setState({\n      mode: value ? 'vertical' : 'inline',\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Switch\n          checked={this.state.theme === 'light'}\n          onChange={this.changeTheme}\n          checkedChildren='浅色'\n          unCheckedChildren='深色' />\n        <Switch\n          onChange={this.changeMode}\n          type='primary'\n          checkedChildren='折叠'\n          unCheckedChildren='展开' />\n        <br />\n        <Menu\n          theme={this.state.theme}\n          onClick={this.handleClick}\n          mode={this.state.mode}\n          defaultSelectedKeys={['21']}\n          defaultOpenKeys={['sub11']}>\n          <Menu.Item key='21'><div><Icon type='home' /><span>首页</span></div></Menu.Item>\n          <SubMenu key='sub11' title={<div><Icon type='platform' /><span>工作台</span></div>}>\n            <Menu.Item key='22'>子菜单五</Menu.Item>\n            <Menu.Item key='23'>子菜单六</Menu.Item>\n            <Menu.Item key='24'>子菜单七</Menu.Item>\n            <Menu.Item key='25'>子菜单八</Menu.Item>\n          </SubMenu>\n          <SubMenu key='sub12' title={<div><Icon type='bars' /><span>订单中心</span></div>}>\n            <Menu.Item key='26'>子菜单九</Menu.Item>\n            <Menu.Item key='27'>子菜单十</Menu.Item>\n            <Menu.Item key='28'>子菜单十一</Menu.Item>\n            <Menu.Item key='29'>子菜单十二</Menu.Item>\n          </SubMenu>\n          <SubMenu key='sub13' title={<div><Icon type='tool' /><span>配置管理</span></div>}>\n            <Menu.Item key='30'>子菜单九</Menu.Item>\n            <Menu.Item key='31'>子菜单十</Menu.Item>\n            <Menu.Item key='32'>子菜单十一</Menu.Item>\n            <Menu.Item key='33'>子菜单十二</Menu.Item>\n          </SubMenu>\n        </Menu>\n      </div>\n    )\n  }\n}\n<MenuView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **Menu**\n\n| 参数                  | 说明                       | 类型                                                        | 默认值        |\n| ------------------- | ------------------------ | --------------------------------------------------------- | ---------- |\n| defaultOpenKeys     | 初始展开的 SubMenu 菜单项 key 数组 |                                                           |            |\n| defaultSelectedKeys | 初始选中的菜单项 key 数组          | string\\[]                                                 |            |\n| forceSubMenuRender  | 在子菜单展示之前就渲染进 DOM         | boolean                                                   | false      |\n| mode                | 菜单类型，现在支持垂直、水平、和内嵌模式三种   | string: `vertical` `vertical-right` `horizontal` `inline` | `vertical` |\n| multiple            | 是否允许多选                   | boolean                                                   | false      |\n| openKeys            | 当前展开的 SubMenu 菜单项 key 数组 | string\\[]                                                 |            |\n| selectable          | 是否允许选中                   | boolean                                                   | true       |\n| selectedKeys        | 当前选中的菜单项 key 数组          | string\\[]                                                 |            |\n| style               | 根节点样式                    | object                                                    |            |\n| subMenuCloseDelay   | 用户鼠标离开子菜单后关闭延时，单位：秒      | number                                                    | 0.1        |\n| subMenuOpenDelay    | 用户鼠标进入子菜单后开启延时，单位：秒      | number                                                    | 0          |\n| theme               | 主题颜色                     | string: `light` `dark`                                    | `dark`     |\n| onClick             | 点击 MenuItem 调用此函数        | function({ item, key, keyPath })                          | -          |\n| onDeselect          | 取消选中时调用，仅在 multiple 生效   | function({ item, key, selectedKeys })                     | -          |\n| onOpenChange        | SubMenu 展开/关闭的回调         | function(openKeys: string\\[])                             | noop       |\n| onSelect            | 被选中时调用                   | function({ item, key, selectedKeys })                     | 无          |\n\n##### **Menu.Item**\n\n| 参数       | 说明         | 类型      | 默认值   |\n| -------- | ---------- | ------- | ----- |\n| disabled | 是否禁用       | boolean | false |\n| key      | item 的唯一标志 | string  |       |\n\n##### **Menu.SubMenu**\n\n| 参数       | 说明      | 类型                         | 默认值   |\n| -------- | ------- | -------------------------- | ----- |\n| children | 子菜单的菜单项 | Array&lt;MenuItem/SubMenu> |       |\n| disabled | 是否禁用    | boolean                    | false |\n| key      | 唯一标志    | string                     |       |\n| title    | 子菜单项值   | string/ReactNode           |       |\n\n##### **Menu.ItemGroup**\n\n| 参数       | 说明     | 类型               | 默认值 |\n| -------- | ------ | ---------------- | --- |\n| children | 分组的菜单项 | MenuItem\\[]      |     |\n| title    | 分组标题   | string/ReactNode |     |\n\n##### **Menu.Divider**\n\n菜单项分割线，只用在弹出菜单内。"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport MenuView from '../prevPage/menu';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <MenuView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Navigation/Dropdown"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"下拉框"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Navigation/Pagination"},u.default.createElement("span",null,"分页"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Pagination",examples:n(1809)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/pagination":n(1810),react:n(1),"./index.jsx":n(196)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Pagination$0 = require('./index.jsx');\nconst Pagination = Pagination$0['Pagination'] || (Pagination$0.default || Pagination$0);",o);e.exports=[{type:"markdown",content:"当数据量较多时，使用分页可以帮助快速移动，常见于列表、表格、搜索结果和目录\n\n##### **基础分页**\n\n较简单的基础用法，不设置 defaultPageSize 时默认为每页10条数据；通过 total 可以设置总条数。"},{type:"code",content:"import {Pagination} from 'dbox-ui';\n<Pagination defaultCurrent={5} total={500} showLessItems />",settings:{},evalInContext:r},{type:"markdown",content:"##### **更多分页**\n\n页数过多时自动折叠。"},{type:"code",content:"import {Pagination} from 'dbox-ui';\n<Pagination defaultCurrent={6} total={500} />",settings:{},evalInContext:r},{type:"markdown",content:"##### **改变每页显示条数目**\n\n通过 defaultPageSize 设置每页显示的条数。"},{type:"code",content:"import {Pagination} from 'dbox-ui';\nfunction onShowSizeChange(current, pageSize) {\n  console.log(current, pageSize);\n};\nfunction onChange(pageNumber) {\n  console.log('Page: ', pageNumber);\n};\n<Pagination onChange={onChange} onShowSizeChange={onShowSizeChange} defaultCurrent={1} defaultPageSize={11} pageSizeOptions={['11', '21', '31', '41']} total={50} showSizeChanger />",settings:{},evalInContext:r},{type:"markdown",content:"##### **跳转分页**\n\n添加 showQuickJumper 设置快速页面跳转。"},{type:"code",content:"import {Pagination} from 'dbox-ui';\n<Pagination defaultCurrent={2} total={500} showQuickJumper />",settings:{},evalInContext:r},{type:"markdown",content:"##### **迷你分页**\n\n较小的分页器，可通过 showSizeChanger showQuickJumper showTotal={showTotal} 来控制是否\n显示每页显示的条数、跳转和总条数。"},{type:"code",content:"import {Pagination} from 'dbox-ui';\nfunction showTotal(total) {\n  return `总 ${total} 条`;\n}\n<div>\n  <Pagination size='small' total={50} />\n  <br />\n  <Pagination size='small' total={50} showSizeChanger showQuickJumper />\n  <br />\n  <Pagination size='small' total={50} showTotal={showTotal} />\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **简洁翻页**\n\n通过 simple 设置简洁分页器，常用户弹出框中。"},{type:"code",content:"import {Pagination} from 'dbox-ui';\n<Pagination simple defaultCurrent={2} total={500} />",settings:{},evalInContext:r},{type:"markdown",content:"##### **包含总数**\n\n与表格搭配较常用的分页器。"},{type:"code",content:"import {Pagination} from 'dbox-ui';\n<Pagination showTotal={(total) => (`总 ${total} 条`)} defaultCurrent={2} total={5000} pageSize={50} showQuickJumper />",settings:{},evalInContext:r},{type:"markdown",content:"##### **Pagination**\n\n| 参数               | 说明                                                                              | 类型                       | 默认值                        |\n| ---------------- | ------------------------------------------------------------------------------- | ------------------------ | -------------------------- |\n| current          | 当前页数与defaultCurrent同时存在会覆盖defaultCurrent且current和defaultCurrent同时使用会无法切换分页！！！！！ | number                   | -                          |\n| defaultCurrent   | 默认的当前页数                                                                         | number                   | 1                          |\n| defaultPageSize  | 默认的每页条数                                                                         | number                   | 10                         |\n| pageSize         | 每页条数与defaultPageSize同时存在会覆盖defaultPageSize                                      | number                   | -                          |\n| showQuickJumper  | 是否可以快速跳转至某页                                                                     | boolean                  | false                      |\n| showSizeChanger  | 是否可以改变pageSize                                                                  | boolean                  | false                      |\n| pageSizeOptions  | 改变showSizeChanger的默认值搭配defaultPageSize使用                                        | Array                    | `['10', '20', '30', '40']` |\n| showTotal        | 用于显示数据总量和当前数据顺序                                                                 | Function(total, range)   | -                          |\n| simple           | 当添加该属性时，显示为简单分页                                                                 | boolean                  | -                          |\n| size             | 当为`small`时，是小尺寸分页                                                               | string                   | -                          |\n| total            | 数据总数                                                                            | number                   | 0                          |\n| showLessItems    | 显示较少的页码项                                                                        | boolean                  | false                      |\n| onChange         | 页码改变的回调，参数是改变后的页码及每页条数                                                          | Function(page, pageSize) | noop                       |\n| onShowSizeChange | pageSize 变化的回调                                                                  | Function(current, size)  | noop                       |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport PaginationView from '../prevPage/pagination';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <PaginationView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Navigation/Menu"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"菜单"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Navigation/Steps"},u.default.createElement("span",null,"步骤条"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Steps",examples:n(1812)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/steps":n(1813),react:n(1),"./index.jsx":n(675)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Steps$0 = require('./index.jsx');\nconst Steps = Steps$0['Steps'] || (Steps$0.default || Steps$0);",o);e.exports=[{type:"markdown",content:"用于指导用户完成跨多个屏幕的流程和操作，或引导用户按照流程完成任务的导航。\n\n##### **基本用法**\n\n最基本的步骤条"},{type:"code",content:"import { Steps } from 'dbox-ui';\n\nconst StepsView = () => {\n  return(\n    <Steps current={1} >\n      <Steps.Step title='提交完成' description='这里是一段描述文字，最多不超过两行' />\n      <Steps.Step title='正在处理' description='这里是一段描述文字，最多不超过两行' />\n      <Steps.Step title='等待处理' description='这里是一段描述文字，最多不超过两行' />\n      <Steps.Step title='完成' description='这里是一段描述文字，最多不超过两行' />\n    </Steps>\n    )\n}\n<StepsView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **小尺寸**\n\n迷你版的步骤条，通过设置size=“small”启用"},{type:"code",content:"import { Steps } from 'dbox-ui';\n\nconst StepsView = () => {\n  return (\n    <Steps size='small' current={2}>\n      <Steps.Step title='示例文字' />\n      <Steps.Step title='示例文字' />\n      <Steps.Step title='等待处理' />\n      <Steps.Step title='完成' />\n    </Steps>\n  )\n}\n<StepsView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **点状步骤条**\n\n通过progressDot实现包含步骤点的步骤条"},{type:"code",content:"import { Steps } from 'dbox-ui';\n\nconst StepsView = () => {\n  return (\n    <Steps progressDot current={1}>\n      <Steps.Step title='步骤一' description='这里是一段描述性文字' />\n      <Steps.Step title='步骤二' description='这里是一段描述性文字' />\n      <Steps.Step title='步骤三' description='这里是一段描述性文字' />\n      <Steps.Step title='步骤四' description='这里是一段描述性文字' />\n    </Steps>\n  )\n}\n<StepsView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **带popover点状步骤条**\n\n自定义progressDot指定一个回调函数，添加popover效果。"},{type:"code",content:"import { Steps, Popover } from 'dbox-ui';\n\nconst customDot = (dot, {status, index}) => (\n  <Popover placement='top' content={<span>步骤： {index} 状态: {status}</span>}>{dot}</Popover>\n);\nclass StepsView extends React.Component {\n  render() {\n    return (\n      <div>\n        <Steps progressDot={ customDot }  current={1}>\n          <Steps.Step title='步骤一' description='这是一段描述文字' />\n          <Steps.Step title='步骤二' description='这是一段描述文字' />\n          <Steps.Step title='步骤三' description='这是一段描述文字' />\n          <Steps.Step title='步骤四' description='这是一段描述文字' />\n      </Steps>\n      </div>\n    )\n  }\n}\n<StepsView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **可步骤切换**\n\n点击按钮可表示一个流程的处理进度"},{type:"code",content:"import { Steps, Button, Message } from 'dbox-ui';\n\nconst Step = Steps.Step;\nconst steps = [\n  {title: '提交完成', content: '这里是一段描述文字，最多不超过两行'},\n  {title: '正在处理', content: '这里是一段描述文字，最多不超过两行'},\n  {title: '等待处理', content: '这里是一段描述文字，最多不超过两行'},\n]\nconst stepsContent = {\n  marginTop: '16px',\n  border: '1px dashed #e9e9e9',\n  borderRadius: '6px',\n  backgroundColor: '#fafafa',\n  minHeight: '200px',\n  paddingTop: '80px',\n  textAlign: 'center'\n}\nconst stepsAction = {\n  marginTop: '24px'\n}\nclass StepsView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      current: 0\n    }\n  }\n   next() {\n    const current = this.state.current + 1;\n    this.setState({current});\n  }\n   prev() {\n    const current = this.state.current - 1;\n    this.setState({current});\n  }\n  render() {\n  const {current} = this.state;\n  return (\n    <div>\n      <Steps progressDot current={current}>\n        {steps.map(item => <Step key={item.title} title={item.title} />)}\n      </Steps>\n      <div style={stepsContent} >{steps[current].content}</div>\n      <div style={stepsAction} >\n          {\n            current < steps.length - 1 && <Button type='primary' onClick={() => this.next()} >下一步</Button>\n          }\n          {\n            current === steps.length - 1 && <Button type='primary' onClick={() => Message.success('处理完成啦！')}>完成</Button>\n          }\n          {\n            current > 0 && <Button style={{ marginLeft: 8 }} onClick={() => this.prev()} >上一步</Button>\n          }\n        </div>\n    </div>\n  )\n}\n}\n<StepsView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **步骤运行错误**\n\n使用Steps的status 属性来指定当前步骤的状态"},{type:"code",content:"import { Steps } from 'dbox-ui';\n\nconst Step = Steps.Step;\nclass StepsView extends React.Component {\n  render() {\n    return (\n      <Steps current={1} status='error'>\n        <Step title='步骤一' description='这里是一段描述性文字' />\n        <Step title='步骤二' description='这里是一段描述性文字' />\n        <Step title='步骤三' description='这里是一段描述性文字' />\n      </Steps>\n    )\n  }\n}\n<StepsView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **竖直方向步骤条**\n\n通过direaction='vertical'来实现竖直的步骤条"},{type:"code",content:"import { Steps } from 'dbox-ui';\n\nconst Step = Steps.Step;\nclass StepsView extends React.Component {\n  render() {\n    return (\n      <Steps direction='vertical' current={1} >\n        <Step title='步骤一' description='这里是一段描述性文字' />\n        <Step title='步骤二' description='这里是一段描述性文字' />\n        <Step title='步骤三' description='这里是一段描述性文字' />\n      </Steps>\n    )\n  }\n}\n<StepsView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **竖直方向小尺寸步骤条**"},{type:"code",content:"import { Steps } from 'dbox-ui';\n\nconst Step = Steps.Step;\nclass StepsView extends React.Component {\n  render() {\n    return (\n      <Steps direction='vertical' current={1} size='small' >\n        <Step title='步骤一' description='这里是一段描述性文字' />\n        <Step title='步骤二' description='这里是一段描述性文字' />\n        <Step title='步骤三' description='这里是一段描述性文字' />\n      </Steps>\n    )\n  }\n}\n<StepsView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **Steps**\n\n整体步骤条\n\n| 参数             | 说明                                    | 类型     | 默认值        |\n| -------------- | ------------------------------------- | ------ | ---------- |\n| current        | 指定当前步骤                                | number | 0          |\n| direction      | 指定步骤条方向(可选horizontal 、vertical)       | string | horizontal |\n| labelPlacement | 指定标签放置位置，可选（vertical）放图标放图标下面         | string | horizontal |\n| progressDot    |                                       |        |            |\n| size           | 指定大小，可选（default 、small）               | string | default    |\n| status         | 指定当前步骤的状态,可选wait、process、finish、error | string | process    |\n| initial        | 起始序号，从0开始计数                           | number | 0          |\n\n##### **Steps.Step**\n\n步骤条内的每一个步骤\n\n| 参数          | 说明         | 类型     | 默认值       |\n| ----------- | ---------- | ------ | --------- |\n| description | 步骤的详情描述，可选 | string | ReactNode |\n| icon        | 步骤图标的类型，可选 | string | ReactNode |\n| title       | 标题         | string | ReactNode |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport StepsView from '../prevPage/steps';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <StepsView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Navigation/Pagination"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"分页"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/AutoComplete"},u.default.createElement("span",null,"自动完成"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"AutoComplete",examples:n(1815)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/autoComplete":n(1816),react:n(1),"./index.jsx":n(260)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst AutoComplete$0 = require('./index.jsx');\nconst AutoComplete = AutoComplete$0['AutoComplete'] || (AutoComplete$0.default || AutoComplete$0);",o);e.exports=[{type:"markdown",content:"需要自动完成时。\n\n##### **基本使用**\n\n通过 dataSource 设置自动完成的数据源。"},{type:"code",content:"import { AutoComplete } from 'dbox-ui';\nclass AutoCompleteDemo extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n             dataSource: []\n        }\n        this.handleSearch = this.handleSearch.bind(this);\n        this.onSelect = this.onSelect.bind(this);\n    }\n\n    handleSearch(value) {\n        let {dataSource} = this.state;\n        if (!value || value.indexOf('@') >= 0) {\n            dataSource = [];\n        } else {\n            dataSource = ['126.com', '163.com', 'qq.com'].map(domain => `${value}@${domain}`);\n        }\n        this.setState({ dataSource });\n   }\n    onSelect(value){\n        console.log('onSelect', value);\n    }\n    render(){\n        const { dataSource } = this.state;\n        return(\n            <AutoComplete\n                dataSource={dataSource}\n                style={{ width: '200px' }}\n                onSelect={this.onSelect}\n                onSearch={this.handleSearch}\n                placeholder='请输入'\n            />\n        )\n    }\n}\n<AutoCompleteDemo />",settings:{},evalInContext:r},{type:"markdown",content:"##### **自定义选项**\n\n可以直接传 `AutoComplete.Option` 作为 `AutoComplete` 的 `children`，而非使用 `dataSource`。"},{type:"code",content:"import { AutoComplete } from 'dbox-ui';\nconst Option = AutoComplete.Option;\nclass AutoCompleteDemo extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n             dataSource: []\n        }\n        this.handleSearch = this.handleSearch.bind(this);\n    }\n\n    handleSearch(value) {\n        let {dataSource} = this.state;\n        if (!value || value.indexOf('@') >= 0) {\n            dataSource = [];\n        } else {\n            dataSource = [\n                value,\n                value+value,\n                value+value+value,\n            ]\n        }\n        this.setState({ dataSource });\n   }\n\n    render(){\n        const { dataSource } = this.state;\n        const children = dataSource.map((email) => {\n            return <Option key={email}>{email}</Option>;\n        });\n        return(\n            <AutoComplete\n                style={{ width: '200px' }}\n                onSearch={this.handleSearch}\n                placeholder='请输入'\n            >\n            {children}\n            </AutoComplete>\n        )\n    }\n}\n<AutoCompleteDemo />",settings:{},evalInContext:r},{type:"markdown",content:"##### **不区分大小写**\n\n不区分大小写的 `AutoComplete`。"},{type:"code",content:"import { AutoComplete } from 'dbox-ui';\nclass AutoCompleteDemo extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            dataSource: ['shanghai', 'BeiJing', 'Shen zhen'],\n        }\n        this.filterOptionChange = this.filterOptionChange.bind(this);\n    }\n\n    filterOptionChange(inputValue, option) {\n        return option.props.children.toUpperCase().indexOf(inputValue.toUpperCase()) !== -1;\n    }\n\n\n    render(){\n        const { dataSource } = this.state;\n        return(\n           <AutoComplete\n            style={{ width: '200px' }}\n            dataSource={dataSource}\n            placeholder='输入小写 `b`'\n            filterOption={this.filterOptionChange}\n            />\n        )\n    }\n}\n<AutoCompleteDemo />",settings:{},evalInContext:r},{type:"markdown",content:"##### **查询模式-确定类目**\n\n查询模式: 确定类目 示例。"},{type:"code",content:"import { AutoComplete,Input,Icon } from 'dbox-ui';\nconst Option = AutoComplete.Option;\nconst OptGroup = AutoComplete.OptGroup;\nclass AutoCompleteDemo extends React.Component {\n    constructor(){\n        super();\n        this.renderTitle = this.renderTitle.bind(this);\n    }\n    renderTitle(title) {\n      return (\n        <span>\n          {title}\n          <a\n            style={{ float: 'right' }}\n            href='https://www.google.com/search?q=react'\n            target='_blank'\n            rel='noopener noreferrer'\n          >更多\n          </a>\n        </span>\n      );\n    }\n    render(){\n        const dataSource = [{\n            title: '语言',\n            children: [{\n                title: 'react ',\n                count: 10000,\n            }, {\n                title: 'vue ',\n                count: 10600,\n            }, {\n                title: 'angular ',\n                count: 1222,\n            }],\n            }, {\n            title: '问题',\n            children: [{\n                title: 'react, vue, angular哪个好',\n                count: 60100,\n            }, {\n                title: '性能问题',\n                count: 30010,\n            }],\n        }];\n        const options = dataSource.map(group => (\n            <OptGroup\n                key={group.title}\n                label={this.renderTitle(group.title)}\n            >\n                {group.children.map(opt => (\n                <Option key={opt.title} value={opt.title}>\n                    {opt.title}\n                    <span className='certain-search-item-count'>{opt.count} 人 关注</span>\n                </Option>\n                ))}\n            </OptGroup>\n            )).concat([\n            <Option disabled key='all' className='show-all'>\n                <a\n                href='https://www.google.com/search?q=react'\n                target='_blank'\n                rel='noopener noreferrer'\n                >\n                查看所有结果\n                </a>\n            </Option>,\n        ]);\n        return(\n            <AutoComplete\n            style={{ width: '300px' }}\n            dataSource={options}\n            placeholder='请输入'\n            optionLabelProp='value'\n            allowClear\n            >\n            <Input suffix={<Icon type='search' />} />\n        </AutoComplete>\n        )\n    }\n}\n<AutoCompleteDemo />",settings:{},evalInContext:r},{type:"markdown",content:"##### **查询模式-不确定类目**\n\n查询模式: 不确定类目 示例。"},{type:"code",content:"import { AutoComplete,Input,Icon } from 'dbox-ui';\nconst Option = AutoComplete.Option;\nconst OptGroup = AutoComplete.OptGroup;\nclass AutoCompleteDemo extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            dataSource:[]\n        }\n        this.handleSearch = this.handleSearch.bind(this);\n        this.onSelect = this.onSelect.bind(this);\n        this.getRandomInt = this.getRandomInt.bind(this);\n        this.renderOption = this.renderOption.bind(this);\n        this.searchResult = this.searchResult.bind(this);\n    }\n\n    handleSearch(value) {\n        this.setState({\n            dataSource: value ? this.searchResult(value) : [],\n        });\n    }\n\n    onSelect(value){\n        console.log('onSelect', value);\n    }\n\n    getRandomInt(max, min = 0){\n        return Math.floor(Math.random() * (max - min + 1)) + min; // eslint-disable-line no-mixed-operators\n    }\n\n\n   searchResult(query) {\n    return (new Array(this.getRandomInt(5))).join('.').split('.')\n      .map((item, idx) => ({\n        query,\n        category: `${query}${idx}`,\n        count: this.getRandomInt(200, 100),\n      }));\n  }\n\n    renderOption(item){\n        return (\n        <Option key={item.category} text={item.category}>\n            {item.query} 在\n            <a\n            href={`https://s.taobao.com/search?q=${item.query}`}\n            target='_blank'\n            rel='noopener noreferrer'\n            >\n            {item.category}\n            </a>\n            区块中\n            <span className='global-search-item-count'>约 {item.count} 个结果</span>\n        </Option>\n        );\n    }\n    render(){\n        const {dataSource} = this.state;\n        return(\n        <AutoComplete\n            className='global-search'\n            style={{ width: '300px' }}\n            dataSource={dataSource.map(this.renderOption)}\n            onSelect={this.onSelect}\n            onSearch={this.handleSearch}\n            placeholder='请输入'\n            optionLabelProp='text'\n        >\n            <Input suffix={<Icon type='search' />} />\n          </AutoComplete>\n        )\n    }\n}\n<AutoCompleteDemo />",settings:{},evalInContext:r},{type:"markdown",content:"##### **API**\n\n| 参数                       | 说明                                                                                               | 类型                                                                                                            | 默认值         |\n| ------------------------ | ------------------------------------------------------------------------------------------------ | ------------------------------------------------------------------------------------------------------------- | ----------- |\n| allowClear               | 支持清除, 单选模式有效                                                                                     | boolean                                                                                                       | false       |\n| autoFocus                | 自动获取焦点                                                                                           | boolean                                                                                                       | false       |\n| backfill                 | 使用键盘选择选项的时候把选中项回填到输入框中                                                                           | boolean                                                                                                       | false       |\n| children (自动完成的数据源)      | 自动完成的数据源                                                                                         | React.ReactElement / Array&lt;React.ReactElement                                                              | -           |\n| children (自定义输入框)        | 自定义输入框                                                                                           | HTMLInputElement / HTMLTextAreaElement / React.ReactElement                                                   | `<Input />` |\n| dataSource               | 自动完成的数据源                                                                                         | [DataSourceItemType](https://git.io/vMMKF)\\[]                                                                 |             |\n| defaultActiveFirstOption | 是否默认高亮第一个选项。                                                                                     | boolean                                                                                                       | true        |\n| defaultValue             | 指定默认选中的条目                                                                                        | string/string/\\[]/{ key: string, label: string/ReactNode }/Array&lt;{ key: string, label: string/ReactNode}>  | 无           |\n| disabled                 | 是否禁用                                                                                             | boolean                                                                                                       | false       |\n| filterOption             | 是否根据输入项进行筛选。当其为一个函数时，会接收 `inputValue` `option` 两个参数，当 `option` 符合筛选条件时，应返回 `true`，反之则返回 `false`。 | boolean or function(inputValue, option)                                                                       | true        |\n| optionLabelProp          | 回填到选择框的 Option 的属性值，默认是 Option 的子元素。比如在子元素需要高亮效果时，此值可以设为 `value`。                                | string                                                                                                        | `children`  |\n| placeholder              | 输入框提示                                                                                            | string                                                                                                        | -           |\n| value                    | 指定当前选中的条目                                                                                        | string/string/\\[]/{ key: string, label: string/ReactNode }/Array&lt;{ key: string, label: string/ReactNode }> | 无           |\n| onChange                 | 选中 option，或 input 的 value 变化时，调用此函数                                                              | function(value)                                                                                               | 无           |\n| onSearch                 | 搜索补全项的时候调用                                                                                       | function(value)                                                                                               | 无           |\n| onSelect                 | 被选中时调用，参数为选中项的 value 值                                                                           | function(value, option)                                                                                       | 无           |\n\n##### **方法**\n\n| 名称      | 描述   |\n| ------- | ---- |\n| focus() | 获取焦点 |\n| blur()  | 移除焦点 |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport AutoCompleteView from '../prevPage/autoComplete';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <AutoCompleteView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Navigation/Steps"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"步骤条"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Cascader"},u.default.createElement("span",null,"级联选择"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Cascader",examples:n(1818)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/cascader.jsx":n(1819),react:n(1),"./index.jsx":n(524)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Cascader$0 = require('./index.jsx');\nconst Cascader = Cascader$0['Cascader'] || (Cascader$0.default || Cascader$0);",o);e.exports=[{type:"markdown",content:"级联选择器，用于在同一浮层中从一组关联的数据中进行选择。\n\n##### **基本使用**\n\n可通过设置 `options` 属性来展示数据,其中 `disabled` 字段可设置是否禁用。"},{type:"code",content:"import { Cascader } from 'dbox-ui';\nconst basicDatas = [{\n    value: '浙江',\n    label: '浙江',\n    children: [{\n      value: '杭州',\n      label: '杭州',\n      children: [{\n        value: '西湖',\n        label: '西湖',\n      }],\n    }],\n  }, {\n    value: '江苏',\n    label: '江苏',\n    children: [{\n      value: '南京',\n      label: '南京',\n      children: [{\n        value: '中华门',\n        label: '中华门',\n      }],\n    }],\n  }, {\n    value: '安徽',\n    label: '安徽',\n    disabled: true,\n    children: [{\n      value: '合肥',\n      label: '合肥',\n      children: [{\n        value: '三国',\n        label: '三国',\n      }],\n    }],\n  }];\n\nfunction onChange(value) {\n  console.log(value);\n}\n\n<Cascader options={basicDatas} onChange={onChange} />",settings:{},evalInContext:r},{type:"markdown",content:"##### **默认值**\n\n可通过设置 `defaultValue` 属性用于展示默认值。"},{type:"code",content:"import { Cascader } from 'dbox-ui';\nconst basicDatas = [{\n    value: '浙江',\n    label: '浙江',\n    children: [{\n      value: '杭州',\n      label: '杭州',\n      children: [{\n        value: '西湖',\n        label: '西湖',\n      }],\n    }],\n  }, {\n    value: '江苏',\n    label: '江苏',\n    children: [{\n      value: '南京',\n      label: '南京',\n      children: [{\n        value: '中华门',\n        label: '中华门',\n      }],\n    }],\n  }, {\n    value: '安徽',\n    label: '安徽',\n    children: [{\n      value: '合肥',\n      label: '合肥',\n      children: [{\n        value: '三国',\n        label: '三国',\n      }],\n    }],\n  }];\n\nfunction onChange(value) {\n  console.log(value);\n}\n\n <Cascader defaultValue={['浙江', '杭州', '西湖']} options={basicDatas} disabled onChange={onChange} />",settings:{},evalInContext:r},{type:"markdown",content:"##### **移入展开**\n\n可通过设置 `expandTrigger` 属性为 `hover` 来移入展开下级菜单，点击完成选择。"},{type:"code",content:"import { Cascader } from 'dbox-ui';\nconst basicDatas = [{\n    value: '浙江',\n    label: '浙江',\n    children: [{\n      value: '杭州',\n      label: '杭州',\n      children: [{\n        value: '西湖',\n        label: '西湖',\n      }],\n    }],\n  }, {\n    value: '江苏',\n    label: '江苏',\n    children: [{\n      value: '南京',\n      label: '南京',\n      children: [{\n        value: '中华门',\n        label: '中华门',\n      }],\n    }],\n  }, {\n    value: '安徽',\n    label: '安徽',\n    children: [{\n      value: '合肥',\n      label: '合肥',\n      children: [{\n        value: '三国',\n        label: '三国',\n      }],\n    }],\n}];\n\nfunction displayRender(label) {\n    return label[label.length - 1];\n}\n\nfunction onChange(value) {\n  console.log(value);\n}\n\n<Cascader\n    options={basicDatas}\n    expandTrigger='hover'\n    displayRender={displayRender}\n    onChange={onChange}\n/>",settings:{},evalInContext:r},{type:"markdown",content:"##### **尺寸**\n\n可通过设置 `size` 属性控制级联框的尺寸，默认为中。"},{type:"code",content:"import { Cascader } from 'dbox-ui';\nconst basicDatas = [{\n    value: '浙江',\n    label: '浙江',\n    children: [{\n      value: '杭州',\n      label: '杭州',\n      children: [{\n        value: '西湖',\n        label: '西湖',\n      }],\n    }],\n  }, {\n    value: '江苏',\n    label: '江苏',\n    children: [{\n      value: '南京',\n      label: '南京',\n      children: [{\n        value: '中华门',\n        label: '中华门',\n      }],\n    }],\n  }, {\n    value: '安徽',\n    label: '安徽',\n    children: [{\n      value: '合肥',\n      label: '合肥',\n      children: [{\n        value: '三国',\n        label: '三国',\n      }],\n    }],\n}];\n\nfunction onChange(value) {\n  console.log(value);\n}\n<div>\n    <Cascader size='small' options={basicDatas} onChange={onChange} /><br /><br />\n    <Cascader options={basicDatas} onChange={onChange} /><br /><br />\n    <Cascader size='large' options={basicDatas} onChange={onChange} />\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **自定义字段名**\n\n通过设置`fieldNames`可自定义字段名"},{type:"code",content:"import { Cascader } from 'dbox-ui';\nconst basicDatas = [{\n    code: '浙江',\n    name: '浙江',\n    items: [{\n      code: '杭州',\n      name: '杭州',\n      items: [{\n        code: '西湖',\n        name: '西湖',\n      }],\n    }],\n  }, {\n    code: '江苏',\n    name: '江苏',\n    items: [{\n      code: '南京',\n      name: '南京',\n      items: [{\n        code: '中华门',\n        name: '中华门',\n      }],\n    }],\n  }, {\n    code: '安徽',\n    name: '安徽',\n    items: [{\n      code: '合肥',\n      name: '合肥',\n      items: [{\n        code: '三国',\n        name: '三国',\n      }],\n    }],\n}];\n\nfunction onChange(value) {\n  console.log(value);\n}\n<div>\n    <Cascader fieldNames={{ label: 'name', value: 'code', children: 'items' }} options={basicDatas} onChange={onChange} />\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **动态加载选项**\n\n可通过设置 `loadData` 实现动态加载选项（注意：`loadData` 与 `showSearch` 无法一起使用。）"},{type:"code",content:"import { Cascader } from 'dbox-ui';\nclass CascaderExample extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            text: '未选择',\n            loadDataOptions: [{\n                value: '浙江',\n                label: '浙江',\n                isLeaf: false,\n            }, {\n                value: '江苏',\n                label: '江苏',\n                isLeaf: false,\n            },\n            {\n                value: '上海',\n                label: '上海',\n                isLeaf: false,\n            }]\n        };\n        this.onChange = this.onChange.bind(this);\n        this.loadData = this.loadData.bind(this);\n    }\n\n    onChange(value, selectOptions){\n         this.setState({\n             text: selectOptions.map(o => o.label).join(',')\n         })\n    };\n\n    loadData(selectedOptions){\n        const targetOption = selectedOptions[selectedOptions.length - 1];\n        targetOption.loading = true;\n        setTimeout(() => {\n            targetOption.loading = false;\n            targetOption.children = [{\n              label: `${targetOption.label} 城市`,\n              value: '城市',\n            }, {\n              label: `${targetOption.label} 地名`,\n              value: '地名',\n            }];\n            this.setState({\n              options: [...this.state.loadDataOptions],\n            });\n        }, 1000)\n    }\n\n    render(){\n        return (\n            <Cascader\n                options={this.state.loadDataOptions}\n                loadData={this.loadData}\n                onChange={this.onChange}\n                changeOnSelect\n                />\n        )\n    }\n}\n<CascaderExample />",settings:{},evalInContext:r},{type:"markdown",content:"##### **搜索**\n\n可设置 `showSearch` 属性实现级联框中内容的搜索。"},{type:"code",content:"import { Cascader } from 'dbox-ui';\nconst searchData = [{\n    value: '上海',\n    label: '上海',\n    children: [{\n      value: '浦东新区',\n      label: '浦东新区',\n      children: [{\n        value: '外滩',\n        label: '外滩',\n      }, {\n        value: '唐镇',\n        label: '唐镇',\n        disabled: true,\n      }],\n    }],\n  }, {\n    value: '浙江',\n    label: '浙江',\n    children: [{\n      value: '杭州',\n      label: '杭州',\n      children: [{\n        value: '西湖',\n        label: '西湖',\n      }],\n    }],\n}];\n\nfunction onChange(value) {\n  console.log(value);\n}\nfunction filter(inputValue, path) {\n    return (path.some(option => (option.label).toLowerCase().indexOf(inputValue.toLowerCase()) > -1));\n}\n<Cascader\n    options={searchData}\n    onChange={onChange}\n    showSearch={{ filter }}\n/>",settings:{},evalInContext:r},{type:"markdown",content:"##### **Cascader**\n\n| 参数                   | 说明                                                     | 类型                                      | 默认值                                                      |\n| -------------------- | ------------------------------------------------------ | --------------------------------------- | -------------------------------------------------------- |\n| allowClear           | 是否支持清除                                                 | boolean                                 | true                                                     |\n| autoFocus            | 自动获取焦点                                                 | boolean                                 | false                                                    |\n| changeOnSelect       | 当此项为 true 时，点选每级菜单选项值都会发生变化，具体见上面的演示                   | boolean                                 | false                                                    |\n| className            | 自定义类名                                                  | string                                  | -                                                        |\n| defaultValue         | 默认的选中项                                                 | string\\[]                               | \\[]                                                      |\n| disabled             | 禁用                                                     | boolean                                 | false                                                    |\n| displayRender        | 选择后展示的渲染函数                                             | `(label, selectedOptions) => ReactNode` | `label => label.join(' / ')`                             |\n| expandTrigger        | 次级菜单的展开方式，可选 'click' 和 'hover'                         | string                                  | 'click'                                                  |\n| fieldNames           | 自定义 options 中 label name children 的字段                  | object                                  | { label: 'label', value: 'value', children: 'children' } |\n| getPopupContainer    | 菜单渲染父节点。默认渲染到 body 上，如果你遇到菜单滚动定位问题，试试修改为滚动的区域，并相对其定位。  | Function(triggerNode)                   | () => document.body                                      |\n| loadData             | 用于动态加载选项，无法与 `showSearch` 一起使用                         | `(selectedOptions) => void`             | -                                                        |\n| notFoundContent      | 当下拉列表为空时显示的内容                                          | string                                  | 'Not Found'                                              |\n| options              | 可选项数据源                                                 | object                                  | -                                                        |\n| placeholder          | 输入框占位文本                                                | string                                  | '请选择'                                                    |\n| popupClassName       | 自定义浮层类名                                                | string                                  | -                                                        |\n| popupPlacement       | 浮层预设位置：`bottomLeft` `bottomRight` `topLeft` `topRight` | Enum                                    | `bottomLeft`                                             |\n| popupVisible         | 控制浮层显隐                                                 | boolean                                 | -                                                        |\n| showSearch           | 在选择框中显示搜索框                                             | boolean                                 | false                                                    |\n| size                 | 输入框大小，可选 `large` `default` `small`                     | string                                  | `default`                                                |\n| style                | 自定义样式                                                  | string                                  | -                                                        |\n| value                | 指定选中项                                                  | string\\[]                               | -                                                        |\n| onChange             | 选择完成后的回调                                               | `(value, selectedOptions) => void`      | -                                                        |\n| onPopupVisibleChange | 显示/隐藏浮层的回调                                             | `(value) => void`                       | -                                                        |\n\n`showSearch` 为对象时，其中的字段：\n\n| 参数              | 说明                                                                 | 类型                                      | 默认值 |\n| --------------- | ------------------------------------------------------------------ | --------------------------------------- | --- |\n| filter          | 接收 `inputValue` `path` 两个参数，当 `path` 符合筛选条件时，应返回 true，反之则返回 false。 | `function(inputValue, path): boolean`   |     |\n| matchInputWidth | 搜索结果列表是否与输入框同宽                                                     | boolean                                 |     |\n| render          | 用于渲染 filter 后的选项                                                   | `function(inputValue, path): ReactNode` |     |\n| sort            | 用于排序 filter 后的选项                                                   | `function(a, b, inputValue)`            |     |\n\n##### **方法**\n\n| 名称      | 描述   |\n| ------- | ---- |\n| blur()  | 移除焦点 |\n| focus() | 获取焦点 |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport CascaderView from '../prevPage/cascader.jsx';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <CascaderView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/AutoComplete"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"自动完成"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Checkbox"},u.default.createElement("span",null,"多选框"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Checkbox",examples:n(1821)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/checkbox":n(1822),react:n(1),"./index.jsx":n(102)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Checkbox$0 = require('./index.jsx');\nconst Checkbox = Checkbox$0['Checkbox'] || (Checkbox$0.default || Checkbox$0);",o);e.exports=[{type:"markdown",content:"在一组可选项中进行多项选择时；\n\n##### **通用多选框**\n\n可在选中和非选中之间切换"},{type:"code",content:"import {Checkbox} from 'dbox-ui';\n<Checkbox >\n  多选框\n</Checkbox>",settings:{},evalInContext:r},{type:"markdown",content:"##### **受控多选框**\n\n通过按钮控制多选框的属性"},{type:"code",content:"import {Checkbox, Button} from 'dbox-ui';\nclass CheckboxView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checked: false,\n      disabled: false\n    }\n    this.toggleChecked = this.toggleChecked.bind(this)\n    this.toggleDisabled = this.toggleDisabled.bind(this)\n    this.onChangeState = this.onChangeState.bind(this)\n  };\n  toggleChecked (checked) {\n    this.setState({ checked: !this.state.checked });\n  }\n  toggleDisabled (disabled) {\n    this.setState({ disabled: !this.state.disabled });\n  }\n  onChangeState (e) {\n    this.setState({\n      checked: !this.state.checked\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Checkbox onChange={this.onChangeState} checked={this.state.checked} disabled={this.state.disabled}>{`${this.state.checked ? '选中' : '非选中'}-${this.state.disabled ? '禁用' : '非禁用'}`}</Checkbox>\n        <br />\n        <br />\n        <Button onClick={this.toggleChecked}>选中切换</Button>\n        <Button style={{marginLeft: 10}} onClick={this.toggleDisabled}>禁用切换</Button>\n      </div>\n    )\n  }\n}\n<CheckboxView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **多选框全选**\n\n通过一个多选框来控制另一组多选框的选中状态"},{type:"code",content:"import {Checkbox} from 'dbox-ui';\nconst CheckboxGroup = Checkbox.CheckboxGroup;\nconst plainOptions = ['苹果', '梨', '桔子'];\nconst defaultCheckedList = ['苹果', '桔子'];\nconst options = [\n  { label: '苹果', value: '苹果' },\n  { label: '梨', value: '梨' },\n  { label: '桔子', value: '桔子' },\n];\nclass CheckboxView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      checkedList: defaultCheckedList,\n      indeterminate: true,\n      checkAll: false,\n    }\n    this.onChange = this.onChange.bind(this)\n    this.onCheckAllChange = this.onCheckAllChange.bind(this)\n  };\n  onChange (checkedList) {\n      this.setState({\n        checkedList,\n        indeterminate: !!checkedList.length && (checkedList.length < plainOptions.length),\n        checkAll: checkedList.length === plainOptions.length\n      })\n    }\n  onCheckAllChange (e) {\n      this.setState({\n        checkedList: e.target.checked ? plainOptions : [],\n        indeterminate: false,\n        checkAll: e.target.checked\n      })\n    }\n  render() {\n    return (\n      <div>\n        <Checkbox indeterminate={this.state.indeterminate} checked={this.state.checkAll} onChange={this.onCheckAllChange}>\n          选择所有选项\n        </Checkbox>\n        <br />\n        <CheckboxGroup options={plainOptions} value={this.state.checkedList} onChange={this.onChange} />\n      </div>\n    )\n  }\n}\n<CheckboxView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **多选框组**\n\n多个多选框形成的多选框组合"},{type:"code",content:"import {Checkbox} from 'dbox-ui';\nconst optionsWithDisabled = [\n  { label: '苹果', value: '苹果' },\n  { label: '梨', value: '梨' },\n  { label: '桔子', value: '桔子', disabled: false },\n];\nconst options = [\n  { label: '苹果', value: '苹果' },\n  { label: '梨', value: '梨' },\n  { label: '桔子', value: '桔子' },\n];\nconst plainOptions = ['苹果', '梨', '桔子'];\nconst CheckboxGroup = Checkbox.CheckboxGroup;\n<div>\n  <CheckboxGroup options={plainOptions} defaultValue={['苹果']} />\n  <br />\n  <CheckboxGroup options={options} defaultValue={['梨']} />\n  <br />\n  <CheckboxGroup options={optionsWithDisabled} disabled defaultValue={['梨']} />\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **多选框不可用**\n\n通过disabled控制多选框的可操作属性"},{type:"code",content:"import {Checkbox} from 'dbox-ui';\n<div>\n  <Checkbox defaultChecked={false} disabled >不可操作</Checkbox>\n  <Checkbox defaultChecked disabled >不允许操作</Checkbox>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **Checkbox**\n\n| 参数             | 说明                          | 类型                | 默认值   |\n| -------------- | --------------------------- | ----------------- | ----- |\n| autoFocus      | 自动获取焦点和disabled同时使用无效       | boolean           | false |\n| checked        | 指定当前是否选中                    | boolean           | false |\n| defaultChecked | 初始是否选中                      | boolean           | false |\n| disabled       | 失效状态                        | boolean           | false |\n| readOnly       | 只读状态                        | boolean           | false |\n| indeterminate  | 设置 indeterminate 状态，只负责样式控制 | boolean           | false |\n| onChange       | 变化时回调函数                     | Function(e:Event) | -     |\n| onClick        | 点击时回调函数                     | Function(e:Event) | -     |\n\n#### **CheckboxGroup**\n\n| 参数           | 说明      | 类型                     | 默认值   |\n| ------------ | ------- | ---------------------- | ----- |\n| defaultValue | 默认选中的选项 | string\\[]              | \\[]   |\n| options      | 指定可选项   | string\\[]              | \\[]   |\n| value        | 指定选中的选项 | string\\[]              | \\[]   |\n| disabled     | 整组失效    | boolean                | false |\n| readOnly     | 整组只读状态  | boolean                | false |\n| onChange     | 变化时回调函数 | Function(checkedValue) | -     |\n\n<style>.idoll-steps{margin-bottom: 10px}</style>"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport CheckboxView from '../prevPage/checkbox';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <CheckboxView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Cascader"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"级联选择"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/DatePicker"},u.default.createElement("span",null,"日期选择器"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"DatePicker",examples:n(1824)}},function(e,t,n){var a={"dbox-ui":n(21),moment:n(12),components:n(21),"../prevPage/dataPicker":n(1825),react:n(1),"./index.jsx":n(526)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst DatePicker$0 = require('./index.jsx');\nconst DatePicker = DatePicker$0['DatePicker'] || (DatePicker$0.default || DatePicker$0);",o);e.exports=[{type:"markdown",content:"当用户需要一个日期(年、月、日、时、分、秒)，可以点击标准输入框，弹出日期面板进行选择。\n\n##### **基本用法**"},{type:"code",content:"import { DatePicker } from 'dbox-ui';\n\nconst RangePicker = DatePicker.RangePicker;\nconst MonthPicker = DatePicker.MonthPicker;\nconst WeekPicker = DatePicker.WeekPicker;\n\nonPanelChange = (value, mode) => {\n  console.log('onPanelChange', value, mode);\n}\nonChange = (date, dateString) => {\n  console.log('onChange', date, dateString);\n}\nonOk = () => {\n  console.log('OK')\n}\n<div>\n  <div style={{ marginBottom: 15 }}>\n    <DatePicker onPanelChange={this.onPanelChange} />\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <MonthPicker onChange={this.onChange} placeholder='请选择月份' />\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <RangePicker onChange={this.onChange} onOk={onOk} />\n  </div>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **三种大小**"},{type:"code",content:"import { Radio, DatePicker } from 'dbox-ui';\n\nconst RadioGroup = Radio.RadioGroup;\nconst RadioButton = Radio.RadioButton;\nconst RangePicker = DatePicker.RangePicker;\nconst MonthPicker = DatePicker.MonthPicker;\nconst WeekPicker = DatePicker.WeekPicker;\n\nclass DatePickerView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      size: 'default',\n    }\n    this.handleSizeChange = this.handleSizeChange.bind(this);\n    this.onOk = this.onOk.bind(this);\n  }\n  handleSizeChange(e) {\n    this.setState({ size: e.target.value });\n  }\n  onOk() {\n    console.log('OK')\n  }\n  render() {\n    const { size } = this.state;\n    return (\n      <div>\n        <RadioGroup value={size} onChange={this.handleSizeChange}>\n          <RadioButton value='large'>大尺寸</RadioButton>\n          <RadioButton value='default'>默认</RadioButton>\n          <RadioButton value='small'>小尺寸</RadioButton>\n        </RadioGroup>\n        <br /><br />\n        <div style={{ marginBottom: 15 }}>\n          <DatePicker size={size} />\n        </div>\n        <div style={{ marginBottom: 15 }}>\n          <MonthPicker size={size} />\n        </div>\n        <div style={{ marginBottom: 15 }}>\n          <RangePicker size={size} onOk={this.onOk} />\n        </div>\n      </div>\n    )\n  }\n}\n<DatePickerView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **禁用**"},{type:"code",content:"import { DatePicker } from 'dbox-ui';\nimport moment from 'moment';\n\nconst RangePicker = DatePicker.RangePicker;\nconst MonthPicker = DatePicker.MonthPicker;\nconst WeekPicker = DatePicker.WeekPicker;\nconst dateFormat = 'YYYY-MM-DD';\n\nonOk = () => {\n  console.log('OK')\n}\n<div>\n  <div style={{ marginBottom: 15 }}>\n    <DatePicker defaultValue={moment('2015-06-06', dateFormat)} disabled />\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <MonthPicker defaultValue={moment('2015-06', 'YYYY-MM')} disabled />\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <RangePicker\n      onOk={this.onOk}\n      disabled\n      defaultValue={[moment('2015-06-06', dateFormat), moment('2015-06-06', dateFormat)]} />\n  </div>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **日期格式**"},{type:"code",content:"import { DatePicker } from 'dbox-ui';\nimport moment from 'moment';\n\nconst RangePicker = DatePicker.RangePicker;\nconst MonthPicker = DatePicker.MonthPicker;\nconst WeekPicker = DatePicker.WeekPicker;\nconst dateFormat1 = 'YYYY/MM/DD';\nconst dateFormat = 'YYYY-MM-DD';\nconst monthFormat = 'YYYY/MM';\n\n<div>\n  <div style={{ marginBottom: 15 }}>\n    <DatePicker defaultValue={moment('2015/01/01', dateFormat1)} format={dateFormat1} />\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <MonthPicker defaultValue={moment('2015/01', monthFormat)} format={monthFormat} />\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <RangePicker\n      defaultValue={[moment('2015/01/01', dateFormat1), moment('2015/01/01', dateFormat1)]}\n      format={dateFormat1}\n    />\n  </div>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **日期时间选择**"},{type:"code",content:"import { DatePicker } from 'dbox-ui';\n\nconst RangePicker = DatePicker.RangePicker;\nconst MonthPicker = DatePicker.MonthPicker;\nconst WeekPicker = DatePicker.WeekPicker;\n\nonChange = (date, dateString) => {\n  console.log('onChange', date, dateString);\n}\nonOk = () => {\n  console.log('OK')\n}\n<div>\n  <div style={{ marginBottom: 15 }}>\n    <DatePicker\n      showTime\n      format='YYYY-MM-DD HH:mm:ss'\n      placeholder='请选择时间'\n      onChange={this.onChange}\n      onOk={this.onOk}\n    />\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <RangePicker\n      showTime={{ format: 'HH:mm' }}\n      format='YYYY-MM-DD HH:mm'\n      placeholder={['开始时间', '结束时间']}\n      onChange={this.onChange}\n      onOk={this.onOk}\n    />\n  </div>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **不可选择日期和时间**"},{type:"code",content:"import { DatePicker } from 'dbox-ui';\nimport moment from 'moment';\n\nconst RangePicker = DatePicker.RangePicker;\nconst MonthPicker = DatePicker.MonthPicker;\nconst WeekPicker = DatePicker.WeekPicker;\n\ndisabledDate = (current) => {\n  // Can not select days before today and today\n  return current && current < moment().endOf('day');\n}\nrange = (start, end) => {\n  const result = [];\n  for (let i = start; i < end; i++) {\n    result.push(i);\n  }\n  return result;\n}\ndisabledRangeTime = (_, type) => {\n  if (type === 'start') {\n    return {\n      disabledHours: () => this.range(0, 60).splice(4, 20),\n      disabledMinutes: () => this.range(30, 60),\n      disabledSeconds: () => [55, 56],\n    };\n  }\n    return {\n      disabledHours: () => this.range(0, 60).splice(20, 4),\n      disabledMinutes: () => this.range(0, 31),\n      disabledSeconds: () => [55, 56],\n    };\n  }\n<div>\n  <div style={{ marginBottom: 15 }}>\n    <DatePicker\n      format='YYYY-MM-DD HH:mm:ss'\n      disabledDate={this.disabledDate}\n      disabledTime={this.disabledRangeTime}\n      showTime\n    />\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <MonthPicker disabledDate={this.disabledDate} placeholder='请选择月份' />\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <RangePicker\n      onOk={this.onOk}\n      disabledDate={this.disabledDate}\n      disabledTime={this.disabledRangeTime}\n      showTime={{\n        hideDisabledOptions: true,\n        defaultValue: [moment('00:00:00', 'HH:mm:ss'), moment('11:59:59', 'HH:mm:ss')],\n      }}\n      format='YYYY-MM-DD HH:mm:ss'\n    />\n  </div>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"#### **自定义日期范围选择**"},{type:"code",content:'import { DatePicker } from \'components\';\nclass DiyDatePickerView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      startValue: null,\n      endValue: null,\n      endOpen: false,\n    }\n    this.disabledStartDate = this.disabledStartDate.bind(this);\n    this.disabledEndDate = this.disabledEndDate.bind(this);\n    this.onChange = this.onChange.bind(this);\n    this.onStartChange = this.onStartChange.bind(this);\n    this.onEndChange = this.onEndChange.bind(this);\n    this.handleStartOpenChange = this.handleStartOpenChange.bind(this);\n    this.handleEndOpenChange = this.handleEndOpenChange.bind(this);\n  }\n\n  disabledStartDate(startValue) {\n    const endValue = this.state.endValue;\n    if (!startValue || !endValue) {\n      return false;\n    }\n    return startValue.valueOf() > endValue.valueOf();\n  }\n\n  disabledEndDate(endValue) {\n    const startValue = this.state.startValue;\n    if (!endValue || !startValue) {\n      return false;\n    }\n    return endValue.valueOf() <= startValue.valueOf();\n  }\n\n  onChange(field, value) {\n    this.setState({\n      [field]: value,\n    });\n  }\n\n  onStartChange(value) {\n    this.onChange(\'startValue\', value);\n  }\n\n  onEndChange(value) {\n    this.onChange(\'endValue\', value);\n  }\n\n  handleStartOpenChange(open) {\n    if (!open) {\n      this.setState({ endOpen: true });\n    }\n  }\n\n  handleEndOpenChange(open) {\n    this.setState({ endOpen: open });\n  }\n\n  render() {\n    const { startValue, endValue, endOpen } = this.state;\n    return (\n      <div>\n        <DatePicker\n          disabledDate={this.disabledStartDate}\n          showTime\n          format="YYYY-MM-DD HH:mm:ss"\n          value={startValue}\n          placeholder="Start"\n          onChange={this.onStartChange}\n          onOpenChange={this.handleStartOpenChange}\n        />\n        <DatePicker\n          disabledDate={this.disabledEndDate}\n          showTime\n          format="YYYY-MM-DD HH:mm:ss"\n          value={endValue}\n          placeholder="End"\n          onChange={this.onEndChange}\n          open={endOpen}\n          onOpenChange={this.handleEndOpenChange}\n        />\n      </div>\n    )\n  }\n\n}\n<DiyDatePickerView />',settings:{},evalInContext:r},{type:"markdown",content:"#### **API**\n\n以下API为DatePIcker、MonthPicker、RangePicker共享API\n\n| 参数           | 说明                                         | 类型                               | 默认值            |     |\n| ------------ | ------------------------------------------ | -------------------------------- | -------------- | --- |\n| allowClear   | 是否显示清除按钮                                   | boolean                          | true           |     |\n| autoFocus    | 自动获取焦点                                     | boolean                          | false          |     |\n| className    | 选择器 className                              | string                           | ''             |     |\n| disabled     | 禁用                                         | boolean                          | false          |     |\n| disabledDate | 不可选择的日期                                    | (currentDate: moment) => boolean | 无              |     |\n| open         | 控制弹层是否展开                                   | boolean                          | -              |     |\n| placeholder  | 输入框提示文字                                    | string                           | RangePicker\\[] | -   |\n| size         | 输入框大小，large 高度为 40px，small 为 24px，默认是 32px | string                           | 无              |     |\n| style        | 自定义输入框样式                                   | object                           | {}             |     |\n| onOpenChange | 弹出日历和关闭日历的回调                               | function(status)                 | 无              |     |\n| suffixIcon   | 自定义的选择框后缀图标                                | ReactNode                        | -              |     |\n\n##### **共同的方法**\n\n| 名称      | 描述   |\n| ------- | ---- |\n| blur()  | 移除焦点 |\n| focus() | 获取焦点 |\n\n##### **DatePicker**\n\n| 参数                    | 说明                                         | 类型                                         | 默认值                |              |\n| --------------------- | ------------------------------------------ | ------------------------------------------ | ------------------ | ------------ |\n| defaultValue          | 默认日期                                       | moment                                     | 无                  |              |\n| defaultPickerValue    | 默认面板日期                                     | moment                                     | 无                  |              |\n| format                | 设置日期格式，为数组时支持多格式匹配，展示以第一个为准。配置参考 moment.js | string                                     | string\\[]          | \"YYYY-MM-DD\" |\n| showTime              | 增加时间选择功能                                   | Object , boolean                           | TimePicker Options |              |\n| showTime.defaultValue | 设置用户选择日期时默认的时分秒                            | moment                                     | moment()           |              |\n| showToday             | 是否展示“今天”按钮                                 | boolean                                    | true               |              |\n| value                 | 日期                                         | moment                                     | 无                  |              |\n| onChange              | 时间发生变化的回调                                  | function(date: moment, dateString: string) | 无                  |              |\n| onPanelChange         | 日期面板变化时的回调                                 | function(value, mode)                      | -                  |              |\n\n##### **MonthPicker**\n\n| 参数                 | 说明                     | 类型                                         | 默认值       |\n| ------------------ | ---------------------- | ------------------------------------------ | --------- |\n| defaultValue       | 默认日期                   | moment                                     | 无         |\n| defaultPickerValue | 默认面板日期                 | moment                                     | 无         |\n| format             | 展示的日期格式，配置参考 moment.js | string                                     | \"YYYY-MM\" |\n| value              | 日期                     | moment                                     | 无         |\n| onChange           | 时间发生变化的回调，发生在用户选择时间时   | function(date: moment, dateString: string) | -         |\n\n##### **RangePicker**\n\n| 参数                    | 说明                       | 类型                                                           | 默认值                   |                    |\n| --------------------- | ------------------------ | ------------------------------------------------------------ | --------------------- | ------------------ |\n| defaultValue          | 默认日期                     | moment\\[]                                                    | 无                     |                    |\n| defaultPickerValue    | 默认面板日期                   | moment\\[]                                                    | 无                     |                    |\n| disabledTime          | 不可选择的时间(需结合showTime一起使用) | function(dates: moment, moment, partial: 'start'             | 'end')                | 无                  |\n| showTime              | 增加时间选择功能                 | Object                                                       | boolean               | TimePicker Options |\n| format                | 展示的日期格式                  | string                                                       | \"YYYY-MM-DD HH:mm:ss\" |                    |\n| showTime.defaultValue | 设置用户选择日期时默认的时分秒          | moment\\[]                                                    | moment() , moment()   |                    |\n| value                 | 日期                       | moment\\[]                                                    | 无                     |                    |\n| onCalendarChange      | 待选日期发生变化的回调              | function(dates: moment, moment, dateStrings: string, string) | 无                     |                    |\n| onChange              | 日期范围发生变化的回调              | function(dates: moment, moment, dateStrings: string, string) | 无                     |                    |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport DataPickerView from '../prevPage/dataPicker';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <DataPickerView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Checkbox"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"多选框"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Form"},u.default.createElement("span",null,"表单"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Form",examples:n(1827)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/form":n(1828),react:n(1),"./index.jsx":n(658)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Form$0 = require('./index.jsx');\nconst Form = Form$0['Form'] || (Form$0.default || Form$0);",o);e.exports=[{type:"markdown",content:"用于可配置校验规则的数据提交，输入数据包含输入框、单选框、多选框、日期选择框、下拉框等元素。\n\n##### **登录框**\n\n普通的登录框，可以容纳更多的元素"},{type:"code",content:"import { Form,Input,Icon,Checkbox,Button } from 'dbox-ui';\nconst FormItem = Form.Item;\n\nclass LoginForm extends React.Component {\n  constructor(){\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  handleSubmit(e){\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('输入框中的内容 ', values);\n      }\n    });\n  }\n\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <Form onSubmit={this.handleSubmit} style={{width: '300px'}}>\n        <FormItem>\n          {getFieldDecorator('userName', {\n            rules: [{ required: true, message: '请输入用户名!' }],\n          })(\n            <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"用户名\" />\n          )}\n        </FormItem>\n        <FormItem>\n          {getFieldDecorator('Password', {\n            rules: [{ required: true, message: '请输入密码!' }],\n          })(\n            <Input prefix={<Icon type=\"unlock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"密码\" />\n          )}\n        </FormItem>\n        <FormItem>\n          {\n            getFieldDecorator('remember', {\n              valuePropName: 'checked',\n              initialValue: true,\n            })(\n              <Checkbox>记住我</Checkbox>\n            )\n          }\n          <a href=\"\" style={{float: 'right'}}>忘记密码</a> <br />\n        </FormItem>\n        <Button type=\"primary\" htmlType=\"submit\" style={{width: '100%',margin: 0}}>\n            登录\n        </Button>\n        <br />\n        或者 <a href=\"\">注册</a>\n      </Form>\n    );\n  }\n}\n\nconst WrappedLoginForm = Form.create()(LoginForm);\n<WrappedLoginForm />",settings:{},evalInContext:r},{type:"markdown",content:"##### **注册**\n\n注册新用户需要填写的信息"},{type:"code",content:"import { Form,Select,Input,Cascader,Checkbox,Button } from 'dbox-ui';\nconst FormItem = Form.Item;\nconst residences = [{\n  value: 'shanghai',\n  label: '上海',\n  children: [{\n    value: 'pudongxinqu',\n    label: '浦东新区',\n    children: [{\n      value: 'dongfangminzhu',\n      label: '东方明珠',\n    }],\n  }],\n}, {\n  value: 'jiangsu',\n  label: '江苏',\n  children: [{\n    value: 'nanjing',\n    label: '南京',\n    children: [{\n      value: 'xuanwuhu',\n      label: '玄武湖',\n    }],\n  }],\n}];\nclass RegistrationForm extends React.Component {\n\n  constructor(){\n    super();\n    this.validateToNextPassword = this.validateToNextPassword.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.compareToFirstPassword = this.compareToFirstPassword.bind(this);\n    this.handleConfirmBlur = this.handleConfirmBlur.bind(this);\n    this.state = {\n      confirmDirty: false,\n      autoCompleteResult: [],\n    };\n  }\n\n\n  validateToNextPassword(rule, value, callback){\n    const form = this.props.form;\n    if (value && this.state.confirmDirty) {\n      form.validateFields(['confirm'], { force: true });\n    }\n    callback();\n  }\n\n  compareToFirstPassword(rule, value, callback){\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('两次密码输入不一致!');\n    } else {\n      callback();\n    }\n  }\n\n  handleConfirmBlur(e){\n    const value = e.target.value;\n    this.setState({ confirmDirty: this.state.confirmDirty || !!value });\n  }\n\n\n  handleSubmit(e){\n    e.preventDefault();\n    this.props.form.validateFieldsAndScroll((err, values) => {\n      if (!err) {\n        console.log('提交表单内容: ', values);\n      }\n    });\n  }\n\n  render(){\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n\n    const tailFormItemLayout = {\n      wrapperCol: {\n        xs: {\n          span: 24,\n          offset: 0,\n        },\n        sm: {\n          span: 16,\n          offset: 8,\n        },\n      },\n    };\n\n    const prefixSelector = getFieldDecorator('prefix', {\n      initialValue: '86',\n    })(\n      <Select style={{ width: 70 }}>\n        <Option value=\"86\">+86</Option>\n        <Option value=\"87\">+87</Option>\n      </Select>\n    );\n\n    return(\n      <Form onSubmit={this.handleSubmit} style={{width: '600px'}}>\n        <FormItem\n          {...formItemLayout}\n          label=\"邮箱\"\n        >\n          {getFieldDecorator('Email', {\n            rules: [{\n              type: 'email', message: '输入项不符合邮箱格式!',\n            }, {\n              required: true, message: '请输入你的邮箱账号!',\n            }],\n          })(\n            <Input placeholder=\"请输入邮箱账号\"/>\n          )}\n        </FormItem>\n\n        <FormItem\n          {...formItemLayout}\n          label=\"密码\"\n        >\n          {getFieldDecorator('password', {\n            rules: [{\n              required: true, message: '请输入您的密码!',\n            }, {\n              validator: this.validateToNextPassword,\n            }],\n          })(\n            <Input type=\"password\" placeholder=\"请输入密码\"/>\n          )}\n        </FormItem>\n\n        <FormItem\n          {...formItemLayout}\n          label=\"确认密码\"\n        >\n          {getFieldDecorator('confirm', {\n            rules: [{\n              required: true, message: '请输入您的确认密码!',\n            }, {\n              validator: this.compareToFirstPassword,\n            }],\n          })(\n            <Input type=\"password\" onBlur={this.handleConfirmBlur} placeholder=\"请输入确认密码\"/>\n          )}\n        </FormItem>\n\n        <FormItem\n          {...formItemLayout}\n          label={(\n            <span>\n              别名\n            </span>\n          )}\n        >\n          {getFieldDecorator('nickname')(\n            <Input placeholder=\"选填\"/>\n          )}\n        </FormItem>\n\n         <FormItem\n          {...formItemLayout}\n          label=\"地址\"\n        >\n          {getFieldDecorator('residence', {\n            rules: [{ type: 'array', required: true, message: '请选择地址!' }],\n          })(\n            <Cascader options={residences} />\n          )}\n        </FormItem>\n\n        <FormItem\n          {...formItemLayout}\n          label=\"手机号码\"\n        >\n          {getFieldDecorator('telPhone', {\n            rules: [{ required: true, message: '请输入您的手机号码!' }],\n          })(\n            <Input addonBefore={prefixSelector} style={{ width: '100%' }} />\n          )}\n        </FormItem>\n\n        <FormItem {...tailFormItemLayout}>\n          {getFieldDecorator('agreement', {\n            valuePropName: 'checked',\n          })(\n            <Checkbox>I have read the <a href=\"\">agreement</a></Checkbox>\n          )}\n        </FormItem>\n\n         <FormItem {...tailFormItemLayout}>\n          <Button type=\"primary\" htmlType=\"submit\">注册</Button>\n        </FormItem>\n      </Form>\n    )\n  }\n}\nconst WrappedRegistrationForm = Form.create()(RegistrationForm);\n<WrappedRegistrationForm />",settings:{},evalInContext:r},{type:"markdown",content:"##### **高级搜索**\n\n常用于数据变表格的高级搜索"},{type:"code",content:"import { Form,Row,Col,DatePicker,Input,Cascader,Button,Icon } from 'dbox-ui';\nconst FormItem = Form.Item;\nconst {RangePicker} = DatePicker;\n\nconst labelValue = [\n  {\n    key: 'name',\n    value: '姓名',\n    type: 'input'\n  },{\n    key: 'phone',\n    value: '手机号',\n    type: 'input'\n  },{\n    key: 'account',\n    value: '账号',\n    type: 'input'\n  },{\n    key: 'address',\n    value: '地址',\n    type: 'cascader'\n  },{\n    key: 'degree',\n    value: '学位',\n    type: 'input'\n  },{\n    key: 'card',\n    value: '身份证号',\n    type: 'input'\n  },{\n    key: 'date',\n    value: '起止日期',\n    type: 'date'\n  }\n];\n\nconst searchData = [{\n    value: '上海',\n    label: '上海',\n    children: [{\n      value: '浦东新区',\n      label: '浦东新区',\n      children: [{\n        value: '外滩',\n        label: '外滩',\n      }, {\n        value: '唐镇',\n        label: '唐镇',\n        disabled: true,\n      }],\n    }],\n  }, {\n    value: '浙江',\n    label: '浙江',\n    children: [{\n      value: '杭州',\n      label: '杭州',\n      children: [{\n        value: '西湖',\n        label: '西湖',\n      }],\n    }],\n}];\n\nconst idollFormStyle = {\n  padding: '24px',\n  background: '#fbfbfb',\n  border: '1px solid #d9d9d9',\n  borderRadius: '6px',\n}\nclass AdvancedSearchForm extends React.Component {\n  constructor(){\n    super();\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.toggle = this.toggle.bind(this);\n    this.getFields = this.getFields.bind(this);\n    this.onCascaderChange = this.onCascaderChange.bind(this);\n    this.loadData = this.loadData.bind(this);\n    this.onDateChange = this.onDateChange.bind(this);\n    this.onOk = this.handleOnOk.bind(this);\n    this.getInputElement = this.getInputElement.bind(this);\n    this.getFormItem = this.getFormItem.bind(this);\n    this.state = {\n      expand: false,\n      text: '未选择',\n      loadDataOptions: [{\n          value: '浙江',\n          label: '浙江',\n          isLeaf: false,\n      }, {\n          value: '江苏',\n          label: '江苏',\n          isLeaf: false,\n      },{\n          value: '上海',\n          label: '上海',\n          isLeaf: false,\n      }]\n    };\n\n  }\n\n  onCascaderChange(value, selectOptions){\n    this.setState({\n        text: selectOptions.map(o => o.label).join(',')\n    })\n  };\n\n  loadData(selectedOptions){\n      const targetOption = selectedOptions[selectedOptions.length - 1];\n      targetOption.loading = true;\n      setTimeout(() => {\n          targetOption.loading = false;\n          targetOption.children = [{\n            label: `${targetOption.label} 城市`,\n            value: '城市',\n          }, {\n            label: `${targetOption.label} 地名`,\n            value: '地名',\n          }];\n          this.setState({\n            options: [...this.state.loadDataOptions],\n          });\n      }, 1000)\n  }\n\n  onDateChange(date, dateString){\n    console.log('onDateChange', date, dateString);\n  }\n\n  handleOnOk(){\n    console.log('OK')\n  }\n\n  getInputElement(type) {\n    switch(type){\n      case  'input' : return <Input placeholder='请输入'/>;\n      case 'cascader': return <Cascader\n                options={this.state.loadDataOptions}\n                loadData={this.loadData}\n                onChange={this.onCascaderChange}\n                changeOnSelect\n                />;\n      case 'date': return <RangePicker onChange={this.onDateChange} onOk={this.handleOnOk} />;\n      default: return <Input placeholder='请输入'/>;\n    }\n  }\n\n  getFormItem(i,count) {\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    const formItemLayout2 = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 17 },\n      },\n    };\n    if(labelValue[i].type === 'date') {\n      return (\n        <Col span={10} key={i} style={{ display: i < count ? 'block' : 'none' }} >\n          <FormItem label={labelValue[i].value} {...formItemLayout2} style={{ display: 'flex',marginLeft: '4px'}}>\n            {getFieldDecorator(`${labelValue[i].key}`, {\n              rules: [{\n                required: true,\n                message: '不能为空!',\n              }],\n            })(\n              this.getInputElement(labelValue[i].type)\n            )}\n          </FormItem>\n        </Col>\n      )\n    } else {\n      return (\n        <Col span={8} key={i} style={{ display: i < count ? 'block' : 'none' }} >\n          <FormItem label={labelValue[i].value} {...formItemLayout} style={{ display: 'flex'}}>\n            {getFieldDecorator(`${labelValue[i].key}`, {\n              rules: [{\n                required: true,\n                message: '不能为空!',\n              }],\n            })(\n              this.getInputElement(labelValue[i].type)\n            )}\n          </FormItem>\n        </Col>\n      )\n    }\n  }\n\n  getFields() {\n    const count = this.state.expand ? 7 : 6;\n    const children = [];\n    for (let i = 0; i < 7; i++) {\n      children.push(this.getFormItem(i,count));\n    }\n    return children;\n  }\n\n  handleSearch(e){\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      values.date =  [values.date[0].format('YYYY-MM-DD'), values.date[1].format('YYYY-MM-DD')];\n      console.log('表单提交内容: ', values);\n    });\n  }\n\n  handleReset(){\n    this.props.form.resetFields();\n  }\n\n  toggle(){\n    const { expand } = this.state;\n    this.setState({ expand: !expand });\n  }\n\n  render(){\n\n    return (\n      <Form\n        style={idollFormStyle}\n        onSubmit={this.handleSearch}\n      >\n        <Row gutter={24}>{this.getFields()}</Row>\n\n        <Row>\n          <Col span={24} style={{ textAlign: 'right' }}>\n            <Button type=\"primary\" htmlType=\"submit\">查询</Button>\n            <Button style={{ marginLeft: 8 }} onClick={this.handleReset}>\n              清除\n            </Button>\n            <a style={{ marginLeft: 8, fontSize: 12 }} onClick={this.toggle}>\n              {this.state.expand ? <span> 收起 <Icon type= 'up'/></span>: <span> 更多 <Icon type= 'down'/> </span>}\n            </a>\n          </Col>\n        </Row>\n      </Form>\n    )\n  }\n}\n\nconst WrappedAdvancedSearchForm = Form.create()(AdvancedSearchForm);\n<WrappedAdvancedSearchForm />",settings:{},evalInContext:r},{type:"markdown",content:"##### **紧凑型表单**\n\n使用formType实现紧凑型表单样式"},{type:"code",content:"import { Form,Row,Col,Select,DatePicker,Input,Button } from 'dbox-ui';\nconst FormItem = Form.Item;\nconst {Option} = Select;\nconst {RangePicker} = DatePicker;\nclass CompactSearchForm extends React.Component {\n  constructor(){\n    super();\n    this.handleSearch = this.handleSearch.bind(this);\n    this.handleReset = this.handleReset.bind(this);\n    this.onDateChange = this.onDateChange.bind(this);\n    this.handleOnOk = this.handleOnOk.bind(this);\n  }\n\n  onDateChange(date, dateString){\n    console.log('onDateChange', date, dateString);\n  }\n\n  handleOnOk(){\n    console.log('OK')\n  }\n\n  handleSearch(e){\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      values.date =  [values.date[0].format('YYYY-MM-DD'), values.date[1].format('YYYY-MM-DD')];\n      console.log('表单提交内容: ', values);\n    });\n  }\n\n  handleReset(){\n    this.props.form.resetFields();\n  }\n\n  render(){\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 9 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 15 },\n      },\n    };\n    const formItemLayout2 = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 6 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 15 },\n      },\n    };\n    const beforeLength = '100px';\n\n    return (\n       <Form onSubmit={this.handleSearch}>\n        <Row gutter={24}>\n          <Col span={8}>\n            <FormItem\n              {...formItemLayout}\n              formType='compact'\n              label='姓名'\n            >\n              {getFieldDecorator('user', {\n                rules: [{\n                  required: true, message: '不能为空!',\n                }],\n              })(\n                <Input placeholder='请输入'/>\n              )}\n            </FormItem>\n          </Col>\n\n          <Col span={8}>\n            <FormItem\n              {...formItemLayout}\n              formType='compact'\n              label='手机号码'\n            >\n              {getFieldDecorator('Telphone', {\n                rules: [{\n                  required: true, message: '不能为空!',\n                }],\n              })(\n                <Input placeholder='请输入'/>\n              )}\n            </FormItem>\n          </Col>\n\n          <Col span={8}>\n            <FormItem\n              {...formItemLayout}\n              formType='compact'\n              label='邮箱'\n            >\n              {getFieldDecorator('e-mail', {\n                rules: [{\n                  type: 'email', message: '输入项不符合邮箱格式!',\n                },{\n                  required: true, message: '不能为空!',\n                }],\n              })(\n                <Input placeholder='请输入'/>\n              )}\n            </FormItem>\n          </Col>\n        </Row>\n\n        <Row gutter={24}>\n          <Col span={8}>\n            <FormItem\n              {...formItemLayout}\n              formType='compact'\n              label='地址'\n            >\n              {getFieldDecorator('address', {\n                rules: [{\n                  required: true, message: '不能为空!',\n                }],\n              })(\n                <Select placeholder='请选择' allowClear>\n                    <Option value='beijing'>北京</Option>\n                    <Option value='shanghai'>上海</Option>\n                    <Option value='guangzhou'>广州</Option>\n                    <Option value='shenzhen'>深圳</Option>\n                </Select>\n              )}\n            </FormItem>\n          </Col>\n          <Col span={12}>\n            <FormItem\n              {...formItemLayout2}\n              formType='compact'\n              label='起止日期日期'\n            >\n              {getFieldDecorator('date', {\n                rules: [{\n                  required: true, message: '不能为空!',\n                }],\n              })(\n                <RangePicker onChange={this.onDateChange} onOk={this.handleOnOk} />\n              )}\n            </FormItem>\n          </Col>\n        </Row>\n\n         <Row>\n          <Col span={24} style={{ textAlign: 'right' }}>\n            <Button type=\"primary\" htmlType=\"submit\">查询</Button>\n            <Button style={{ marginLeft: 8 }} onClick={this.handleReset}>\n              清除\n            </Button>\n          </Col>\n        </Row>\n      </Form>\n    )\n  }\n}\n\nconst WrappedCompactSearchForm = Form.create()(CompactSearchForm);\n<WrappedCompactSearchForm />",settings:{},evalInContext:r},{type:"markdown",content:"##### **弹出层中新建表单**\n\n可以动态增加或者减少表单项"},{type:"code",content:"import { Form,Row,Col,Button,Modal,Input,Icon } from 'dbox-ui';\nconst FormItem = Form.Item;\nclass modalForm extends React.Component {\n  constructor(){\n    super();\n    this.compareToFirstPassword = this.compareToFirstPassword.bind(this);\n  }\n\n  compareToFirstPassword(rule, value, callback){\n    const form = this.props.form;\n    if (value && value !== form.getFieldValue('password')) {\n      callback('两次密码输入不一致!');\n    } else {\n      callback();\n    }\n  }\n  render() {\n    const {visible, onCancel, onCreate, form,} = this.props;\n    const { getFieldDecorator } = form;\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 8 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 16 },\n      },\n    };\n    return (\n      <Modal\n        visible={visible}\n        title=\"注册信息\"\n        okText=\"注册\"\n        onCancel={onCancel}\n        onOk={onCreate}\n      >\n\n        <Form onSubmit={this.handleSubmit} style={{width: '300px'}}>\n          <FormItem  label='账号' {...formItemLayout}>\n            {getFieldDecorator('userName', {\n              rules: [{ required: true, message: '不能为空!' }],\n            })(\n              <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"账号\" />\n            )}\n          </FormItem>\n          <FormItem label='密码' {...formItemLayout}>\n            {getFieldDecorator('passWord', {\n              rules: [{ required: true, message: '不能为空!' }],\n            })(\n              <Input prefix={<Icon type=\"unlock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"密码\" />\n            )}\n          </FormItem>\n\n            <FormItem label='确认密码' {...formItemLayout}>\n            {getFieldDecorator('confirmPassword', {\n              rules: [{ required: true, message: '不能为空!'\n              }, {validator: this.compareToFirstPassword,\n                }],\n            })(\n              <Input prefix={<Icon type=\"unlock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"确认密码\" />\n            )}\n          </FormItem>\n        </Form>\n\n      </Modal>\n    );\n  }\n}\nconst CollectionCreateForm = Form.create()(\n    modalForm\n);\n\nclass ModalNewForm extends React.Component {\n  constructor(){\n    super();\n    this.showModal = this.showModal.bind(this);\n    this.handleCancel = this.handleCancel.bind(this);\n    this.handleCreate = this.handleCreate.bind(this);\n    this.saveFormRef = this.saveFormRef.bind(this);\n    this.state = {\n      visible: false,\n    }\n  }\n\n  showModal(){\n    this.setState({ visible: true });\n  }\n\n  handleCancel(){\n    this.setState({ visible: false });\n  }\n\n  handleCreate(){\n    const form = this.formRef.props.form;\n    form.validateFields((err, values) => {\n      if (err) {\n        return;\n      }\n\n      console.log('表单提交内容: ', values);\n      form.resetFields();\n      this.setState({ visible: false });\n    });\n  }\n\n  saveFormRef(formRef){\n    this.formRef = formRef;\n  }\n\n\n  render(){\n      return(\n        <div>\n        <Button type=\"primary\" onClick={this.showModal}>注册</Button>\n        <CollectionCreateForm\n          wrappedComponentRef={this.saveFormRef}\n          visible={this.state.visible}\n          onCancel={this.handleCancel}\n          onCreate={this.handleCreate}\n        />\n      </div>\n      )\n  }\n}\n\n<ModalNewForm />",settings:{},evalInContext:r},{type:"markdown",content:"##### **表单联动**\n\n使用setFieldValue来动态设置其他控件的值"},{type:"code",content:"import { Form,Row,Col,Input,Select,Button } from 'dbox-ui';\nconst FormItem = Form.Item;\nclass FormDemo extends React.Component {\n  constructor(){\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n  }\n  handleSubmit(e){\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('表单提交内容: ', values);\n      }\n    });\n  }\n\n  handleSelectChange(value){\n    console.log(value);\n    this.props.form.setFieldsValue({\n      email: `123456789${value === '@qq.com' ? '@qq.com' : '@163.com'}`,\n    });\n  }\n\n  render(){\n    const { getFieldDecorator } = this.props.form;\n    return(\n      <Form onSubmit={this.handleSubmit}>\n        <FormItem\n          label=\"邮箱号\"\n          labelCol={{ span: 5 }}\n          wrapperCol={{ span: 12 }}\n        >\n          {getFieldDecorator('email', {\n            rules: [{ required: true, message: '不能为空!' }],\n          })(\n            <Input />\n          )}\n        </FormItem>\n        <FormItem\n          label=\"邮箱类型\"\n          labelCol={{ span: 5 }}\n          wrapperCol={{ span: 12 }}\n        >\n          {getFieldDecorator('emailType', {\n            rules: [{ required: true, message: '不能为空' }],\n          })(\n            <Select\n              placeholder=\"请选择邮箱类型\"\n              onChange={this.handleSelectChange}\n            >\n              <Option value=\"@qq.com\">@qq.com</Option>\n              <Option value=\"@163.com\">@163.com</Option>\n            </Select>\n          )}\n        </FormItem>\n        <FormItem\n          wrapperCol={{ span: 12, offset: 5 }}\n        >\n          <Button type=\"primary\" htmlType=\"submit\">\n            提交\n          </Button>\n        </FormItem>\n      </Form>\n    )\n  }\n}\nconst WrappedFormDemo = Form.create()(FormDemo);\n<WrappedFormDemo />",settings:{},evalInContext:r},{type:"markdown",content:"##### **表单布局**\n\n表单三种布局方式"},{type:"code",content:'import { Form,Row,Col,Input,Button,Radio} from \'dbox-ui\';\nconst RadioGroup = Radio.RadioGroup;\nconst RadioButton = Radio.RadioButton;\nconst FormItem = Form.Item;\nclass FormDemo extends React.Component {\n  constructor(){\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleFormLayoutChange = this.handleFormLayoutChange.bind(this);\n    this.state = {\n      formLayout: \'horizontal\',\n    };\n  }\n  handleSubmit(e){\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\'表单提交内容: \', values);\n      }\n    });\n  }\n\n  handleFormLayoutChange(e){\n    this.setState({ formLayout: e.target.value });\n  }\n\n  render(){\n    const { getFieldDecorator } = this.props.form;\n    const { formLayout } = this.state;\n    const formItemLayout = formLayout === \'horizontal\' ? {\n      labelCol: { span: 4 },\n      wrapperCol: { span: 14 },\n    } : null;\n    const buttonItemLayout = formLayout === \'horizontal\' ? {\n      wrapperCol: { span: 14, offset: 4 },\n    } : null;\n    return(\n        <Form layout={formLayout}>\n          <Form.Item\n            label="Form Layout"\n            {...formItemLayout}\n          >\n            <RadioGroup defaultValue="horizontal" onChange={this.handleFormLayoutChange}>\n              <RadioButton value="horizontal">Horizontal</RadioButton>\n              <RadioButton value="vertical">Vertical</RadioButton>\n              <RadioButton value="inline">Inline</RadioButton>\n            </RadioGroup>\n          </Form.Item>\n          <Form.Item\n            label="Field A"\n            {...formItemLayout}\n          >\n            <Input placeholder="input placeholder" />\n          </Form.Item>\n          <Form.Item\n            label="Field B"\n            {...formItemLayout}\n          >\n            <Input placeholder="input placeholder" />\n          </Form.Item>\n          <Form.Item {...buttonItemLayout}>\n            <Button type="primary">Submit</Button>\n          </Form.Item>\n        </Form>\n    )\n  }\n}\nconst WrappedFormDemo = Form.create()(FormDemo);\n<WrappedFormDemo />',settings:{},evalInContext:r},{type:"markdown",content:"##### **自定义校验**\n\n自定义一些表单空间的校验规则"},{type:"code",content:'import { Form,Row,Col,Input,DatePicker,TimePicker,Cascader,InputNumber,Select,Button } from \'dbox-ui\';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nclass FormDemo extends React.Component {\n  render(){\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 5 },\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 12 },\n      },\n    };\n    return (\n      <Form>\n        <FormItem\n          {...formItemLayout}\n          label="错误"\n          validateStatus="error"\n          help="输入数字和字母组合"\n        >\n          <Input placeholder="错误输入" id="error" />\n        </FormItem>\n\n        <FormItem\n          {...formItemLayout}\n          label="警告"\n          validateStatus="warning"\n        >\n          <Input placeholder="警告" id="warning" />\n        </FormItem>\n\n        <FormItem\n          {...formItemLayout}\n          label="验证"\n          hasFeedback\n          validateStatus="validating"\n          help="信息正在验证..."\n        >\n          <Input placeholder=\'验证输入\' id="validating" />\n        </FormItem>\n\n        <FormItem\n          {...formItemLayout}\n          label="成功"\n          hasFeedback\n          validateStatus="success"\n        >\n          <Input placeholder="正确输入" id="success" />\n        </FormItem>\n\n        <FormItem\n          {...formItemLayout}\n          label="警告"\n          hasFeedback\n          validateStatus="warning"\n        >\n          <Input placeholder="警告" id="Warning" />\n        </FormItem>\n\n        <FormItem\n          {...formItemLayout}\n          label="错误"\n          hasFeedback\n          validateStatus="error"\n          help="输入数字和字母组合"\n        >\n          <Input placeholder="错误输入" id="Error" />\n        </FormItem>\n\n        <FormItem\n          {...formItemLayout}\n          label="成功"\n          hasFeedback\n          validateStatus="success"\n        >\n          <DatePicker style={{ width: \'100%\' }} />\n        </FormItem>\n\n        <FormItem\n          {...formItemLayout}\n          label="警告"\n          hasFeedback\n          validateStatus="warning"\n        >\n          <TimePicker style={{ width: \'100%\' }} />\n        </FormItem>\n\n        <FormItem\n          {...formItemLayout}\n          label="错误"\n          hasFeedback\n          validateStatus="error"\n        >\n          <Select defaultValue="1">\n            <Option value="1">北京</Option>\n            <Option value="2">上海</Option>\n            <Option value="3">广州</Option>\n          </Select>\n        </FormItem>\n\n        <FormItem\n          {...formItemLayout}\n          label="验证"\n          hasFeedback\n          validateStatus="validating"\n          help="信息正在验证..."\n        >\n          <Cascader defaultValue={[\'1\']} options={[\'zhangjiang\']} />\n        </FormItem>\n\n        <FormItem\n          label="内联"\n          {...formItemLayout}\n        >\n          <Form.Item\n            validateStatus=\'error\'\n            help=\'请输入正确的日期\'\n            style={{ display: \'inline-block\', }}\n          >\n            <DatePicker />\n          </Form.Item>\n          <span style={{ display: \'inline-block\', width: \'24px\', textAlign: \'center\' }}>\n          -\n          </span>\n          <Form.Item style={{ display: \'inline-block\', width: \'calc(50% - 12px)\' }}>\n            <DatePicker />\n          </Form.Item>\n        </FormItem>\n\n        <FormItem\n          {...formItemLayout}\n          label="成功"\n          hasFeedback\n          validateStatus="success"\n        >\n          <InputNumber style={{ width: \'100%\' }} />\n        </FormItem>\n    </Form>\n    )\n  }\n}\n<FormDemo />',settings:{},evalInContext:r},{type:"markdown",content:"##### **动态校验规则**\n\n根据不同的情况执行不同的校验规则"},{type:"code",content:"import { Form,Row,Col,Select,Input,Checkbox,Button } from 'dbox-ui';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst formItemLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 8 },\n};\nconst formTailLayout = {\n  labelCol: { span: 4 },\n  wrapperCol: { span: 8, offset: 4 },\n};\nclass FormDemo extends React.Component {\n  constructor(){\n    super();\n    this.check = this.check.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n    this.state = {\n      phone: false,\n    }\n  }\n\n  check(){\n    this.props.form.validateFields((err,values) => {\n        if (!err) {\n          console.log('表单提交内容: ', values);\n        }\n      },\n    );\n  }\n\n  handleChange(e) {\n    this.setState({\n      phone: e.target.checked,\n    }, () => {\n      this.props.form.validateFields(['phone'], { force: true });\n    });\n  }\n\n  render(){\n    const { getFieldDecorator } = this.props.form;\n    return(\n      <div>\n        <FormItem {...formItemLayout} label=\"姓名\">\n          {getFieldDecorator('username', {\n            rules: [{\n              required: true,\n              message: '不能为空',\n            }],\n          })(\n            <Input placeholder=\"请输入\" />\n          )}\n        </FormItem>\n        <FormItem {...formItemLayout} label=\"手机号\">\n          {getFieldDecorator('Tel', {\n            rules: [{\n              required: this.state.phone,\n              message: '不能为空',\n            }],\n          })(\n            <Input placeholder={this.state.phone?\"请输入\":\"选填\"} />\n          )}\n        </FormItem>\n        <FormItem {...formTailLayout}>\n          <Checkbox\n            checked={this.state.phone}\n            onChange={this.handleChange}\n          >\n            手机号是否必填\n          </Checkbox>\n        </FormItem>\n        <FormItem {...formTailLayout}>\n          <Button type=\"primary\" onClick={this.check}>\n            提交\n          </Button>\n        </FormItem>\n      </div>\n    )\n  }\n}\nconst WrappedFormDemo = Form.create()(FormDemo);\n<WrappedFormDemo />",settings:{},evalInContext:r},{type:"markdown",content:"##### **校验其他组件**\n\n校验其他的表单控件"},{type:"code",content:'import { Form,Row,Col,Select,Radio,InputNumber,Switch,Slider,Button } from \'dbox-ui\';\nconst FormItem = Form.Item;\nconst Option = Select.Option;\nconst RadioGroup = Radio.RadioGroup;\nconst RadioButton = Radio.RadioButton;\nclass FormDemo extends React.Component {\n  constructor(){\n    super();\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n  handleSubmit(e){\n    e.preventDefault();\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log(\'Received values of form: \', values);\n      }\n    });\n  }\n\n  render(){\n    const { getFieldDecorator } = this.props.form;\n    const formItemLayout = {\n      labelCol: { span: 6 },\n      wrapperCol: { span: 9 },\n    };\n    return(\n        <Form onSubmit={this.handleSubmit}>\n          <FormItem\n            {...formItemLayout}\n            label="单选"\n            hasFeedback\n          >\n            {getFieldDecorator(\'select\', {\n              rules: [\n                { required: true, message: \'不能为空!\' },\n              ],\n            })(\n              <Select placeholder="请选择">\n                <Option value="shanghai">上海</Option>\n                <Option value="beijing">北京</Option>\n              </Select>\n            )}\n          </FormItem>\n\n          <FormItem\n            {...formItemLayout}\n            label="多选"\n          >\n            {getFieldDecorator(\'select-multiple\', {\n              rules: [\n                { required: true, message: \'不能为空\', type: \'array\' },\n              ],\n            })(\n              <Select mode="multiple" placeholder="请选择">\n                <Option value="shanghai">上海</Option>\n                <Option value="beijing">北京</Option>\n                <Option value="gunagzhou">广州</Option>\n              </Select>\n            )}\n          </FormItem>\n\n          <FormItem\n            {...formItemLayout}\n            label="数字输入"\n          >\n            {getFieldDecorator(\'input-number\', { initialValue: 3 })(\n              <InputNumber min={1} max={10} />\n            )}\n            <span> 空位</span>\n          </FormItem>\n\n          <FormItem\n            {...formItemLayout}\n            label="开关"\n          >\n            {getFieldDecorator(\'switch\')(\n              <Switch />\n            )}\n          </FormItem>\n\n           <FormItem\n            {...formItemLayout}\n            label="滑动条"\n            >\n            {getFieldDecorator(\'slider\',{ initialValue: [10, 30]})(\n              <Slider range />\n            )}\n            </FormItem>\n\n            <FormItem\n              {...formItemLayout}\n              label="单选组"\n            >\n              {getFieldDecorator(\'radio-group\')(\n                <RadioGroup>\n                  <Radio value="a">A</Radio>\n                  <Radio value="b">B</Radio>\n                  <Radio value="c">C</Radio>\n                </RadioGroup>\n              )}\n            </FormItem>\n\n            <FormItem\n              {...formItemLayout}\n              label="单选按钮"\n            >\n              {getFieldDecorator(\'radio-button\')(\n                <RadioGroup>\n                  <RadioButton value="1">按钮 1</RadioButton>\n                  <RadioButton value="2">按钮 2</RadioButton>\n                  <RadioButton value="3">按钮 3</RadioButton>\n                </RadioGroup>\n              )}\n            </FormItem>\n\n\n           <FormItem\n              wrapperCol={{ span: 12, offset: 6 }}\n           >\n            <Button type="primary" htmlType="submit">提交</Button>\n           </FormItem>\n        </Form>\n    )\n  }\n}\nconst WrappedFormDemo = Form.create()(FormDemo);\n<WrappedFormDemo />',settings:{},evalInContext:r},{type:"markdown",content:'##### **Form**\n\n| 参数       | 说明                                                                         | 类型                | 默认值 |\n| -------- | -------------------------------------------------------------------------- | ----------------- | --- |\n| form     | 经 `Form.create()` 包装过的组件会自带 `this.props.form` 属性，直接传给 Form 即可。1.7.0 之后无需设置 | object            | 无   |\n| onSubmit | 数据验证成功后回调事件                                                                | Function(e:Event) |     |\n\n##### **Form.create(options)**\n\n使用方式如下：\n\n```jsx\n<span class="token keyword">class</span> <span class="token class-name">CustomizedForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span><span class="token punctuation">}</span>\n\nCustomizedForm <span class="token operator">=</span> Form<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span>CustomizedForm<span class="token punctuation">)</span><span class="token punctuation">;</span>\n```\n\n`options` 的配置项如下。\n\n| 参数               | 说明                                                                                                                      | 类型                                                  |\n| ---------------- | ----------------------------------------------------------------------------------------------------------------------- | --------------------------------------------------- |\n| mapPropsToFields | 把父组件的属性映射到表单项上（如：把 Redux store 中的值读出），需要对返回值中的表单域数据用 [`Form.createFormField`](#Form.createFormField) 标记                 | (props) => Object{ fieldName: FormField { value } } |\n| validateMessages | 默认校验信息，可用于把默认错误信息改为中文等，格式与 [newMessages](https://github.com/yiminghe/async-validator/blob/master/src/messages.js) 返回值一致 | Object {nested.path: String }                       |\n| onFieldsChange   | 当 `Form.Item` 子节点的值发生改变时触发，可以把对应的值转存到 Redux store                                                                       | Function(props, fields)                             |\n| onValuesChange   | 任一表单域的值发生改变时的回调                                                                                                         | (props, values) => void                             |\n\n经过 `Form.create` 之后如果要拿到 `ref`，可以使用 `rc-form` 提供的 `wrappedComponentRef`\n\n```jsx\n<span class="token keyword">class</span> <span class="token class-name">CustomizedForm</span> <span class="token keyword">extends</span> <span class="token class-name">React<span class="token punctuation">.</span>Component</span> <span class="token punctuation">{</span> <span class="token operator">...</span> <span class="token punctuation">}</span>\n\n<span class="token comment">// use wrappedComponentRef</span>\n<span class="token keyword">const</span> EnhancedForm <span class="token operator">=</span>  Form<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>CustomizedForm<span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">EnhancedForm</span></span> <span class="token attr-name">wrappedComponentRef</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token punctuation">(</span><span class="token parameter">form</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token keyword">this</span><span class="token punctuation">.</span>form <span class="token operator">=</span> form<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span>\n<span class="token keyword">this</span><span class="token punctuation">.</span>form <span class="token comment">// => The instance of CustomizedForm</span>\n```\n\n经过 `Form.create` 包装的组件将会自带 `this.props.form` 属性，`this.props.form` 提供的 API 如下：\n\n注意：使用 `getFieldsValue` `getFieldValue` `setFieldsValue` 等时，应确保对应的 field 已经用 `getFieldDecorator` 注册过了。\n\n| 方法                      | 说明                                                          | 类型                                                                                        |\n| ----------------------- | ----------------------------------------------------------- | ----------------------------------------------------------------------------------------- |\n| getFieldDecorator       | 用于和表单进行双向绑定，详见下方描述                                          |                                                                                           |\n| getFieldError           | 获取某个输入控件的 Error                                             | Function(name)                                                                            |\n| getFieldsError          | 获取一组输入控件的 Error ，如不传入参数，则获取全部组件的 Error                      | Function(\\[names: string\\[]])                                                             |\n| getFieldsValue          | 获取一组输入控件的值，如不传入参数，则获取全部组件的值                                 | Function(\\[fieldNames: string\\[]])                                                        |\n| getFieldValue           | 获取一个输入控件的值                                                  | Function(fieldName: string)                                                               |\n| isFieldsTouched         | 判断是否任一输入控件经历过 `getFieldDecorator` 的值收集时机 `options.trigger`  | (names?: string\\[]) => boolean                                                            |\n| isFieldTouched          | 判断一个输入控件是否经历过 `getFieldDecorator` 的值收集时机 `options.trigger`  | (name: string) => boolean                                                                 |\n| isFieldValidating       | 判断一个输入控件是否在校验状态                                             | Function(name)                                                                            |\n| resetFields             | 重置一组输入控件的值（为 `initialValue`）与状态，如不传入参数，则重置所有组件              | Function(\\[names: string\\[]])                                                             |\n| setFields               | 设置一组输入控件的值与 Error。                                          | ({ \\[fieldName]:{ value: any, errors: [Error] } }) => void                                |\n| setFieldsValue          | 设置一组输入控件的值（注意：不要在 `componentWillReceiveProps` 内使用，否则会导致死循环） | ({ \\[fieldName]:value }) => void                                                          |\n| validateFields          | 校验并获取一组输入域的值与 Error，若 fieldNames 参数为空，则校验全部组件               | (\\[fieldNames: string\\[]], [options: object], callback: Function(errors, values)) => void |\n| validateFieldsAndScroll | 与 `validateFields` 相似，但校验完后，如果校验不通过的菜单域不在可见范围内，则自动滚动进可见范围   | 参考 `validateFields`                                                                       |\n\n##### **validateFields/validateFieldsAndScroll**\n\n```jsx\n<span class="token keyword">const</span> <span class="token punctuation">{</span> form<span class="token punctuation">:</span> <span class="token punctuation">{</span> validateFields <span class="token punctuation">}</span> <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">this</span><span class="token punctuation">.</span>props<span class="token punctuation">;</span>\n<span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token parameter">errors<span class="token punctuation">,</span> values</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'field1\'</span><span class="token punctuation">,</span> <span class="token string">\'field2\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">errors<span class="token punctuation">,</span> values</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n<span class="token function">validateFields</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">\'field1\'</span><span class="token punctuation">,</span> <span class="token string">\'field2\'</span><span class="token punctuation">]</span><span class="token punctuation">,</span> options<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">errors<span class="token punctuation">,</span> values</span><span class="token punctuation">)</span> <span class="token operator">=></span> <span class="token punctuation">{</span>\n  <span class="token comment">// ...</span>\n<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>\n```\n\n| 参数                  | 说明                                        | 类型        | 默认值   |\n| ------------------- | ----------------------------------------- | --------- | ----- |\n| options.first       | 若为 true，则每一表单域的都会在碰到第一个失败了的校验规则后停止校验      | boolean   | false |\n| options.firstFields | 指定表单域会在碰到第一个失败了的校验规则后停止校验                 | String\\[] | \\[]   |\n| options.force       | 对已经校验过的表单域，在 validateTrigger 再次被触发时是否再次校验 | boolean   | false |\n| options.scroll      | 定义 validateFieldsAndScroll 的滚动行为          | Object    | {}    |\n\n##### ** validateFields 的 callback 参数示例**\n\n-   `errors`:\n\n    ```jsx\n    <span class="token punctuation">{</span>\n      <span class="token string">"userName"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token string">"errors"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"Please input your username!"</span><span class="token punctuation">,</span>\n            <span class="token string">"field"</span><span class="token punctuation">:</span> <span class="token string">"userName"</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span><span class="token punctuation">,</span>\n      <span class="token string">"password"</span><span class="token punctuation">:</span> <span class="token punctuation">{</span>\n        <span class="token string">"errors"</span><span class="token punctuation">:</span> <span class="token punctuation">[</span>\n          <span class="token punctuation">{</span>\n            <span class="token string">"message"</span><span class="token punctuation">:</span> <span class="token string">"Please input your Password!"</span><span class="token punctuation">,</span>\n            <span class="token string">"field"</span><span class="token punctuation">:</span> <span class="token string">"password"</span>\n          <span class="token punctuation">}</span>\n        <span class="token punctuation">]</span>\n      <span class="token punctuation">}</span>\n    <span class="token punctuation">}</span>\n    ```\n\n-   `values`:\n\n    ```jsx\n    <span class="token punctuation">{</span>\n      <span class="token string">"userName"</span><span class="token punctuation">:</span> <span class="token string">"username"</span><span class="token punctuation">,</span>\n      <span class="token string">"password"</span><span class="token punctuation">:</span> <span class="token string">"password"</span><span class="token punctuation">,</span>\n    <span class="token punctuation">}</span>\n    ```\n\n##### **  Form.createFormField **\n\n用于标记 `mapPropsToFields` 返回的表单域数据。\n\n##### ** this.props.form.getFieldDecorator(id, options) **\n\n经过 `getFieldDecorator` 包装的控件，表单控件会自动添加 `value`（或 `valuePropName` 指定的其他属性） `onChange`（或 `trigger` 指定的其他属性），数据同步将被 Form 接管，这会导致以下结果：\n\n1.  你**不再需要也不应该**用 `onChange` 来做同步，但还是可以继续监听 `onChange` 等事件。\n2.  你不能用控件的 `value` `defaultValue` 等属性来设置表单域的值，默认值可以用 `getFieldDecorator` 里的 `initialValue`。\n3.  你不应该用 `setState`，可以使用 `this.props.form.setFieldsValue` 来动态改变表单值。\n\n##### ** 特别注意 **\n\n1.  `getFieldDecorator` 不能用于装饰纯函数组件。\n2.  如果使用的是 `react@<15.3.0`，则 `getFieldDecorator` 调用不能位于纯函数组件中: <https://github.com/facebook/react/pull/6534>\n\n##### ** getFieldDecorator(id, options) 参数 **\n\n| 参数                        | 说明                                                                        | 类型                                         | 默认值                                                                |\n| ------------------------- | ------------------------------------------------------------------------- | ------------------------------------------ | ------------------------------------------------------------------ |\n| id                        | 必填输入控件唯一标志。支持嵌套式的[写法](https://github.com/react-component/form/pull/48)。   | string                                     |                                                                    |\n| options.getValueFromEvent | 可以把 onChange 的参数（如 event）转化为控件的值                                          | function(..args)                           | [reference](https://github.com/react-component/form#option-object) |\n| options.initialValue      | 子节点的初始值，类型、可选值均由子节点决定(注意：由于内部校验时使用 `===` 判断是否变化，建议使用变量缓存所需设置的值而非直接使用字面量)) |                                            |                                                                    |\n| options.normalize         | 转换默认的 value 给控件                                                           | function(value, prevValue, allValues): any | -                                                                  |\n| options.rules             | 校验规则，参考下方文档                                                               | object\\[]                                  |                                                                    |\n| options.trigger           | 收集子节点的值的时机                                                                | string                                     | \'onChange\'                                                         |\n| options.validateFirst     | 当某一规则校验不通过时，是否停止剩下的规则的校验                                                  | boolean                                    | false                                                              |\n| options.validateTrigger   | 校验子节点值的时机                                                                 | string/string\\[]                           | \'onChange\'                                                         |\n| options.valuePropName     | 子节点的值的属性，如 Switch 的是 \'checked\'                                            | string                                     | \'value\'                                                            |\n\n更多参数请查看 [rc-form option](https://github.com/react-component/form#option-object)。\n\n##### ** Form.Item  **\n\n注意：\n\n-   一个 Form.Item 建议只放一个被 getFieldDecorator 装饰过的 child，当有多个被装饰过的 child 时，`help` `required` `validateStatus` 无法自动生成。\n-   `2.2.0` 之前，只有当表单域为 Form.Item 的子元素时，才会自动生成 `help` `required` `validateStatus`，嵌套情况需要自行设置。\n\n| 参数             | 说明                                                                                                   | 类型               | 默认值   |\n| -------------- | ---------------------------------------------------------------------------------------------------- | ---------------- | ----- |\n| colon          | 配合 label 属性使用，表示是否显示 label 后面的冒号                                                                     | boolean          | true  |\n| extra          | 额外的提示信息，和 help 类似，当需要错误信息和提示文案同时出现时，可以使用这个。                                                          | string/ReactNode |       |\n| formType       | 表单类型，目前有紧凑型和默认型，紧凑型设置为 `compact`                                                                     | string           |       |\n| hasFeedback    | 配合 validateStatus 属性使用，展示校验状态图标，建议只配合 Input 组件使用                                                     | boolean          | false |\n| help           | 提示信息，如不设置，则会根据校验规则自动生成                                                                               | string/ReactNode |       |\n| label          | label 标签的文本                                                                                          | string/ReactNode |       |\n| labelCol       | label 标签布局，同 `<Col>` 组件，设置 `span` `offset` 值，如 `{span: 3, offset: 12}` 或 `sm: {span: 3, offset: 12}` | [object]         |       |\n| required       | 是否必填，如不设置，则会根据校验规则自动生成                                                                               | boolean          | false |\n| validateStatus | 校验状态，如不设置，则会根据校验规则自动生成，可选：\'success\' \'warning\' \'error\' \'validating\'                                   | string           |       |\n| wrapperCol     | 需要为输入控件设置布局样式时，使用该属性，用法同 labelCol                                                                    | [object]         |       |\n\n##### **校验规则**\n\n| 参数         | 说明                                                             | 类型                                      | 默认值      |\n| ---------- | -------------------------------------------------------------- | --------------------------------------- | -------- |\n| enum       | 枚举类型                                                           | string                                  | -        |\n| len        | 字段长度                                                           | number                                  | -        |\n| max        | 最大长度                                                           | number                                  | -        |\n| message    | 校验文案                                                           | string                                  | -        |\n| min        | 最小长度                                                           | number                                  | -        |\n| pattern    | 正则表达式校验                                                        | RegExp                                  | -        |\n| required   | 是否必选                                                           | boolean                                 | `false`  |\n| transform  | 校验前转换字段值                                                       | function(value) => transformedValue:any | -        |\n| type       | 内建校验类型，[可选项](https://github.com/yiminghe/async-validator#type) | string                                  | \'string\' |\n| validator  | 自定义校验（注意，[callback 必须被调用]）                                     | function(rule, value, callback)         | -        |\n| whitespace | 必选时，空格是否会被视为错误                                                 | boolean                                 | `false`  |\n\n更多高级用法可研究 [async-validator](https://github.com/yiminghe/async-validator)。'},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport FormView from '../prevPage/form';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <FormView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/DatePicker"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"日期选择器"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Input"},u.default.createElement("span",null,"输入框"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Input",examples:n(1830)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/input":n(1831),react:n(1),"./index.jsx":n(100)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Input$0 = require('./index.jsx');\nconst Input = Input$0['Input'] || (Input$0.default || Input$0);",o);e.exports=[{type:"markdown",content:"数据输入，可用于表单提交。\n\n##### **基本使用**\n\n可通过设置 `disabled` 属性为禁用状态，设置 `readOnly` 属性为只读状态，设置`clearable` 属性为支持可清除。"},{type:"code",content:"import { Input } from 'dbox-ui';\n\n\n<div>\n    <Input type='text' placeholder='请输入' style={{width: '200px'}} clearable/><br /><br />\n    <Input type='text' disabled placeholder='请输入' style={{width: '200px'}} /><br /><br />\n    <Input type='text' readOnly value='请输入' style={{width: '200px'}} />\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **前置／后置**\n\n用于一些固定组合。`addonBefore` 设置前置内容，`beforelength` 设置前置内容长度。`addonAfter` 和`afterlength`\n则用来设置后置属性。"},{type:"code",content:"import { Input,Select } from 'dbox-ui';\nconst selectBefore = (\n  <Select defaultValue='Http://' style={{ width: '90px' }}>\n    <Option value='Http://'>Http://</Option>\n    <Option value='Https://'>Https://</Option>\n  </Select>\n);\nconst selectAfter = (\n  <Select defaultValue='.com' style={{ width: '80px' }}>\n    <Option value='.com'>.com</Option>\n    <Option value='.jp'>.jp</Option>\n    <Option value='.cn'>.cn</Option>\n    <Option value='.org'>.org</Option>\n  </Select>\n);\n\n<div>\n    <div style={{width:'400px'}} >\n        <Input type='text' addonBefore='邮政编码' placeholder='请输入' beforelength='100px' />\n    </div>\n    <br />\n    <div style={{width: '400px'}} >\n        <Input type='text' placeholder='请输入' addonAfter='.com' afterlength='80px' />\n    </div>\n    <br />\n    <div style={{width: '400px'}} >\n        <Input type='text' addonBefore={selectBefore} placeholder='请输入' addonAfter={selectAfter} beforelength='100px' afterlength='80px' />\n    </div>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **搜索**\n\n使用 `Input.Search` 用于带有搜索按钮或者搜索图标的输入框, `enterButton` 属性设置值则会显示搜索按钮,否则显示搜索图标。"},{type:"code",content:"import { Input } from 'dbox-ui';\nconst Search = Input.Search;\n<div>\n    <Search\n        placeholder='请输入'\n        onSearch={value => console.log(value)}\n        style={{ width: '250px' }}\n    ></Search>\n    <br /><br />\n    <Search\n        placeholder='请输入'\n        onSearch={value => console.log(value)}\n        style={{ width: '250px' }}\n        enterButton\n    ></Search>\n    <br /><br />\n    <Search style={{ width: '250px' }} enterButton='搜索' placeholder='请输入' onSearch={(value => console.log(value))} ></Search>\n    <br /><br />\n    <Search style={{ width: '250px' }} size='large' enterButton='搜索' placeholder='请输入' onSearch={(value => console.log(value))} ></Search>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **前缀／后缀**\n\n可通过设置 `prefix`、`suffix` 属性在输入框上添加前缀或后缀图标。"},{type:"code",content:"import { Input,Icon } from 'dbox-ui';\n<div >\n    <Input placeholder='请输入' style={{ width: '250px' }} prefix={<Icon type='user' />} onChange={(e) => console.log(e.target.value)} /><br /><br />\n    <Input placeholder='请输入' style={{ width: '250px' }} suffix={<Icon type='edit' />} onChange={(e) => console.log(e.target.value)} />\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"#### **三种大小**\n\n可通过设置 `size` 属性控制输入框的大小,默认为中。"},{type:"code",content:"import { Input } from 'dbox-ui';\nconst Search = Input.Search;\n<div>\n    <Input size='large' placeholder='请输入' style={{width: '200px'}} /><br /><br />\n    <Input placeholder='请输入' style={{width: '200px'}} /><br /><br />\n    <Input size='small' placeholder='请输入' style={{width: '200px'}} /><br /><br />\n    <Search style={{ width: '200px' }} size='large' onSearch={(value => console.log(value))} placeholder='请输入' />\n    <br /><br />\n    <Search style={{ width: '200px' }} onSearch={(value => console.log(value))} placeholder='请输入'/>\n    <br /><br />\n    <Search style={{ width: '200px' }} size='small' onSearch={(value => console.log(value))} placeholder='请输入' />\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **输入框的组合**\n\n使用 `InputGroup` 用于组合其它组件。"},{type:"code",content:"import { Input,Col,Select,DatePicker } from 'dbox-ui';\nconst InputGroup = Input.Group;\n<div>\n    <InputGroup size='large'>\n        <Col span={3}>\n        <Input defaultValue='021' />\n        </Col>\n        <Col span={8}>\n        <Input defaultValue='12345678' />\n        </Col>\n    </InputGroup>\n    <br />\n    <InputGroup compact>\n        <Input style={{width: '100px'}} defaultValue='0571' />\n        <Input style={{width: '160px'}} defaultValue='26888888' />\n    </InputGroup>\n    <br />\n\n    <InputGroup compact>\n        <Select defaultValue='Shanghai' style={{width: '160px'}}>\n        <Option value='Shanghai'>上海</Option>\n        <Option value='Jiangsu'>江苏</Option>\n        </Select>\n        <Input style={{width: '160px'}} defaultValue='上海' />\n    </InputGroup>\n    <br />\n    <InputGroup compact>\n        <Input style={{width: '160px'}} defaultValue='请输入' />\n        <DatePicker style={{width: '150px'}} />\n    </InputGroup>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **文本框**\n\n`Textarea` 用于多行输入,设置 `autosize` 的 `minRows`和 `maxRows` 控制文本框高度。"},{type:"code",content:"import { Input } from 'dbox-ui';\nconst Textarea = Input.Textarea;\n<div>\n    <Textarea style={{width: '400px'}} ></Textarea>  <br /><br />\n    <Textarea style={{width: '400px'}} autosize={{minRows: 2, maxRows: 6}} ></Textarea>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **输入时格式化展示**\n\n结合 `Tooltip` 组件，实现一个数值输入框，方便内容超长时的全量展现。"},{type:"code",content:"import { Input, Tooltip} from 'dbox-ui';\n\nfunction formatNumber(value) {\n  value += '';\n  const list = value.split('.');\n  const prefix = list[0].charAt(0) === '-' ? '-' : '';\n  let num = prefix ? list[0].slice(1) : list[0];\n  let result = '';\n  while (num.length > 3) {\n    result = `,${num.slice(-3)}${result}`;\n    num = num.slice(0, num.length - 3);\n  }\n  if (num) {\n    result = num + result;\n  }\n  return `${prefix}${result}${list[1] ? `.${list[1]}` : ''}`;\n}\n\nclass NumericInput extends React.Component {\n  constructor(props) {\n    super(props);\n    this.onChange = this.onChange.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n  }\n\n  onChange(e){\n    const { value } = e.target;\n    const reg = /^-?(0|[1-9][0-9]*)(\\.[0-9]*)?$/;\n    if ((!isNaN(value) && reg.test(value)) || value === '' || value === '-') {\n      this.props.onChange(value);\n    }\n  }\n\n  // '.' at the end or only '-' in the input box.\n  onBlur(){\n    const { value, onBlur, onChange } = this.props;\n    if (value.charAt(value.length - 1) === '.' || value === '-') {\n      onChange({ value: value.slice(0, -1) });\n    }\n    if (onBlur) {\n      onBlur();\n    }\n  }\n\n  render() {\n    const { value } = this.props;\n    const title = value ? (\n      <span>\n        {value !== '-' ? formatNumber(value) : '-'}\n      </span>\n    ) : '请输入数字';\n    return (\n      <Tooltip\n        trigger={['focus']}\n        title={title}\n        placement=\"topLeft\"\n        overlayClassName=\"numeric-input\"\n      >\n        <Input\n          {...this.props}\n          onChange={this.onChange}\n          onBlur={this.onBlur}\n          placeholder=\"请输入数字\"\n          maxLength=\"25\"\n        />\n      </Tooltip>\n    );\n  }\n}\n\nclass NumericInputDemo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = { value: '' };\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(value){\n    this.setState({ value });\n  }\n\n  render() {\n    return <NumericInput style={{ width: 120 }} value={this.state.value} onChange={this.onChange} />;\n  }\n}\n\n<NumericInputDemo />",settings:{},evalInContext:r},{type:"markdown",content:"##### **Input**\n\n| 参数           | 说明                                                         | 类型          | 默认值       |     |\n| ------------ | ---------------------------------------------------------- | ----------- | --------- | --- |\n| addonAfter   | 带标签的 input，设置后置标签                                          | string      | ReactNode |     |\n| addonBefore  | 带标签的 input，设置前置标签                                          | string      | ReactNode |     |\n| afterlength  | 后置标签宽度                                                     | string      |           |     |\n| beforelength | 前置标签宽度                                                     | string      |           |     |\n| clearable    | 输入框可清空                                                     | boolean     | false     |     |\n| defaultValue | 输入框默认内容                                                    | string      |           |     |\n| disabled     | 是否禁用状态，默认为 false                                           | boolean     | false     |     |\n| id           | 输入框的 id                                                    | string      |           |     |\n| prefix       | 带有前缀图标的 input                                              | string      | ReactNode |     |\n| size         | 控件大小。注：标准表单内的输入框大小限制为 `large`。可选 `large` `default` `small` | string      | `default` |     |\n| suffix       | 带有后缀图标的 input                                              | string      | ReactNode |     |\n| type         | 声明 input 类型，同原生 input 标签的 type 属性                          | string      | `text`    |     |\n| value        | 输入框内容                                                      | string      |           |     |\n| onPressEnter | 按下回车的回调                                                    | function(e) |           |     |\n| onChange     | 内容改变回调                                                     | function(e) |           |     |\n| onInput      | 内容输入的回调                                                    | function(e) |           |     |\n| onBlur       | 失去焦点的回调                                                    | function(e) |           |     |\n| onFocus      | 获取焦点的回调                                                    | function(e) |           |     |\n\n##### **Input.TextArea**\n\n| 参数           | 说明                                                         | 类型             | 默认值   |\n| ------------ | ---------------------------------------------------------- | -------------- | ----- |\n| autosize     | 自适应内容高度，可设置为 `true/false` 或对象：`{ minRows: 2, maxRows: 6 }` | boolean/object | false |\n| defaultValue | 输入框默认内容                                                    | string         |       |\n| value        | 输入框内容                                                      | string         |       |\n| onPressEnter | 按下回车的回调                                                    | function(e)    |       |\n\n##### **Input.Search**\n\n| 参数          | 说明              | 类型                | 默认值   |\n| ----------- | --------------- | ----------------- | ----- |\n| enterButton | 是否有确认按钮，可设为按钮文字 | boolean/ReactNode | false |\n| onSearch    | 点击搜索或按下回车键时的回调  | function(value)   |       |\n\n##### **Input.Group**\n\n| 参数      | 说明                                                          | 类型      | 默认值       |\n| ------- | ----------------------------------------------------------- | ------- | --------- |\n| compact | 是否用紧凑模式                                                     | boolean | false     |\n| size    | `Input.Group` 中所有的 `Input` 的大小，可选 `large` `default` `small` | string  | `default` |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport InputView from '../prevPage/input';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <InputView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Form"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"表单"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/InputNumber"},u.default.createElement("span",null,"数字输入框"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"InputNumber",examples:n(1833)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/inputNumber":n(1834),react:n(1),"./index.jsx":n(663)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst InputNumber$0 = require('./index.jsx');\nconst InputNumber = InputNumber$0['InputNumber'] || (InputNumber$0.default || InputNumber$0);",o);e.exports=[{type:"markdown",content:"当需要获取标准数值时。\n\n##### **基本使用**\n\n数字输入框"},{type:"code",content:"import { InputNumber } from 'dbox-ui';\n\nconst InputNumberView = () => {\n return (\n   <InputNumber min={1} defaultValue={3} max={10} />\n )\n}\n<InputNumberView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **三种尺寸**\n\n默认size为default，也可设置size的大小为small，large。"},{type:"code",content:"import { InputNumber } from 'dbox-ui';\n\nconst InputNumberView = () => {\n return (\n   <div>\n     <InputNumber size='small' min={1} defaultValue={3} max={10} />\n     <InputNumber min={1} defaultValue={3} max={10} />\n     <InputNumber size='large' min={1} defaultValue={3} max={10} />\n   </div>\n )\n}\n<InputNumberView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **不可用切换**\n\n点击按钮切换可用状态"},{type:"code",content:"import { Button, InputNumber } from 'dbox-ui';\n\nclass InputNumberView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disabled: true,\n    }\n    this.handleToggle = this.handleToggle.bind(this);\n  }\n  handleToggle() {\n    this.setState({\n      disabled: !this.state.disabled,\n    })\n  }\n  render() {\n    return (\n      <div>\n        <InputNumber min={1} max={100} defaultValue={5} disabled={this.state.disabled} />\n        <div style={{marginTop: '20px'}} >\n          <Button type='primary' onClick={this.handleToggle}>切换按钮</Button>\n        </div>\n      </div>\n    )\n  }\n}\n<InputNumberView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **小数**\n\n通过设置step设置每次点击上下箭头所改变的数值"},{type:"code",content:"import { InputNumber } from 'dbox-ui';\n\nconst InputNumberView = () => {\n  return (\n    <InputNumber min={1} step={0.2} defaultValue={3} max={10} />\n  )\n}\n<InputNumberView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **格式化展示**\n\n通过设置formatter格式化数字，以展示具体函数的数据"},{type:"code",content:"import { InputNumber } from 'dbox-ui';\n\nconst InputNumberView = () => {\n  return (\n    <div>\n      <InputNumber min={0} max={100} defaultValue={100} formatter={value => `${value}%`} parser={value => value.replace('%', '')} />\n      <InputNumber min={0} defaultValue={2600}\n        formatter={value => `$ ${value}`.replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',')}\n        parser={value => value.replace(/\\$\\s?|(,*)/g, '')} />\n    </div>\n  )\n}\n<InputNumberView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **InputNumber**\n\n| 参数               | 说明                                   | 类型                                       | 默认值      |     |\n| ---------------- | ------------------------------------ | ---------------------------------------- | -------- | --- |\n| defaultValue     | 初始值                                  | number                                   |          |     |\n| disabled         | 禁用                                   | boolean                                  | false    |     |\n| formatter        | 指定输入框展示值的格式                          | function(value: number \\| string):string | -        |     |\n| max              | 最大值                                  | number                                   | infinity |     |\n| min              | 最小值                                  | number                                   | infinity |     |\n| parser           | 指定从formatter里转换会数字的方式，和formatter搭配使用 | function                                 | -        |     |\n| precision        | 数值精度                                 | number                                   | -        |     |\n| decimalSeparator | 小数点                                  | string                                   | -        |     |\n| size             | 输入框大小                                | string                                   | -        |     |\n| step             | 每次改变步数，可以为小数                         | number                                   | 1        |     |\n| value            | 当前值                                  | number                                   |          |     |\n| onChange         | 变化回调                                 | Function(value: number                   | string)  |     |\n\n#### **方法**\n\n| 民称      | 描述   |\n| ------- | ---- |\n| blur()  | 移除焦点 |\n| focus() | 获取焦点 |\n\n<style>.idoll-input-number{margin-right:10px}</style>"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport InputNumberView from '../prevPage/inputNumber';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <InputNumberView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Input"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"输入框"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Radio"},u.default.createElement("span",null,"单选框"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Radio",examples:n(1836)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/radio":n(1837),react:n(1),"./index.jsx":n(148)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Radio$0 = require('./index.jsx');\nconst Radio = Radio$0['Radio'] || (Radio$0.default || Radio$0);",o);e.exports=[{type:"markdown",content:"在多个备选项中选中单个状态。\n\n##### **基本样式展示**\n\n点击文字或按钮选中对应状态"},{type:"code",content:"import {Radio} from 'dbox-ui';\n<div>\n\t<Radio>A</Radio>\n\t<Radio checked style={{margin: '0 8px 0 8px'}}>B</Radio>\n\t<Radio defaultChecked>C</Radio>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **禁用单选框**\n\n通过增加按钮来控制时候允许操作"},{type:"code",content:"import {Radio, Button} from 'dbox-ui';\nclass RadioView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disabled: true\n    }\n    this.toggleDisabled = this.toggleDisabled.bind(this)\n  };\n  toggleDisabled () {\n    this.setState({\n      disabled: !this.state.disabled\n    });\n\t}\n  render() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Radio defaultChecked={false} disabled >不能操作</Radio>\n\t\t\t\t<Radio disabled={this.state.disabled} style={{margin: '0 8px 0 8px'}}>不允许操作</Radio>\n\t\t\t\t<Button type='primary' onClick={this.toggleDisabled}>控制能否操作</Button>\n\t\t\t</div>\n\t\t)\n\t}\n}\n<RadioView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **互斥单选框**\n\n一组单选框只允许选中一个"},{type:"code",content:"import {Radio} from 'dbox-ui';\nconst RadioGroup = Radio.RadioGroup;\nclass RadioView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '1'\n    }\n    this.onChange = this.onChange.bind(this)\n  };\n\tonChange (e) {\n\t\tthis.setState({\n\t\t\tvalue: e.target.value\n\t\t})\n\t}\n  render() {\n\t\treturn (\n\t\t\t<RadioGroup onChange={this.onChange} defaultValue={this.state.value}>\n\t\t\t\t<Radio value='1'>A</Radio>\n\t\t\t\t<Radio disabled value='2' style={{margin: '0 8px 0 8px'}}>B</Radio>\n\t\t\t\t<Radio value='3'>C</Radio>\n\t\t\t\t<Radio value='4' style={{margin: '0 0 0 8px'}}>D</Radio>\n\t\t\t</RadioGroup>\n\t\t)\n\t}\n}\n<RadioView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **垂直组合单选框**\n\n适用于垂直组合样式"},{type:"code",content:"import {Radio} from 'dbox-ui';\nconst RadioGroup = Radio.RadioGroup;\nclass RadioView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '1'\n    }\n    this.onChange = this.onChange.bind(this)\n  };\n\tonChange (e) {\n\t\tthis.setState({\n\t\t\tvalue: e.target.value\n\t\t})\n\t}\n  render() {\n\t\treturn (\n\t\t\t<RadioGroup direction='vertical' onChange={this.onChange} defaultValue='3'>\n\t\t\t\t<Radio value='1'>A</Radio>\n\t\t\t\t<Radio value='2' style={{margin: '8px 0 8px 0'}}>B</Radio>\n\t\t\t\t<Radio value='3'>C</Radio>\n\t\t\t\t<Radio value='4' style={{margin: '8px 0 0 0'}}>D</Radio>\n\t\t\t</RadioGroup>\n\t\t)\n\t}\n}\n<RadioView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **分组单选框**\n\n通过RadioGroup包裹多个单选组合"},{type:"code",content:"import {Radio} from 'dbox-ui';\nconst RadioGroup = Radio.RadioGroup;\nclass RadioView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '1'\n    }\n    this.onChange = this.onChange.bind(this)\n  };\n\tonChange (e) {\n\t\tthis.setState({\n\t\t\tvalue: e.target.value\n\t\t})\n\t};\n  render() {\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<RadioGroup onChange={this.onChange} defaultValue='6'>\n\t\t\t\t\t<Radio value='5'>A</Radio>\n\t\t\t\t\t<Radio value='6' style={{margin: '0 8px 0 8px'}}>B</Radio>\n\t\t\t\t\t<Radio value='7'>C</Radio>\n\t\t\t\t\t<Radio value='8' style={{margin: '0 8px 0 8px'}}>D</Radio>\n\t\t\t\t</RadioGroup>\n\t\t\t\t<br />\n\t\t\t\t<br />\n\t\t\t\t<RadioGroup onChange={this.onChange} defaultValue='11'>\n\t\t\t\t\t<Radio value='10'>A</Radio>\n\t\t\t\t\t<Radio value='9' style={{margin: '0 8px 0 8px'}}>B</Radio>\n\t\t\t\t\t<Radio value='11'>C</Radio>\n\t\t\t\t\t<Radio value='12' style={{margin: '0 8px 0 8px'}}>D</Radio>\n\t\t\t\t</RadioGroup>\n\t\t\t</div>\n\t\t)\n\t}\n}\n<RadioView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **name单选框**\n\n通过给RadioGroup添加name属性给予值让所有的单选框拥有统一的类名方便统一操作"},{type:"code",content:"import {Radio} from 'dbox-ui';\nconst RadioGroup = Radio.RadioGroup;\nclass RadioView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: '1'\n    }\n    this.onChange = this.onChange.bind(this)\n  };\n\tonChange (e) {\n\t\tthis.setState({\n\t\t\tvalue: e.target.value\n\t\t})\n\t};\n  render() {\n\t\treturn (\n\t\t\t<RadioGroup name='radioGroup' onChange={this.onChange} defaultValue={this.state.value}>\n\t\t\t\t<Radio value='1'>A</Radio>\n\t\t\t\t<Radio value='2' style={{margin: '0 8px 0 8px'}}>B</Radio>\n\t\t\t\t<Radio value='3'>C</Radio>\n\t\t\t\t<Radio value='4' style={{margin: '0 8px 0 8px'}}>D</Radio>\n\t\t\t</RadioGroup>\n\t\t)\n\t}\n}\n<RadioView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **按钮样式**\n\n仿按钮样式的单选框"},{type:"code",content:"import {Radio} from 'dbox-ui';\nconst RadioGroup = Radio.RadioGroup;\nconst RadioButton = Radio.RadioButton;\n<div>\n\t<RadioGroup defaultValue='a'>\n\t\t<RadioButton value='a'>杭州</RadioButton>\n\t\t<RadioButton value='b'>上海</RadioButton>\n\t\t<RadioButton value='c'>北京</RadioButton>\n\t\t<RadioButton value='d'>成都</RadioButton>\n\t</RadioGroup>\n\t<br />\n\t<br />\n\t<RadioGroup defaultValue='a'>\n\t\t<RadioButton value='a'>杭州</RadioButton>\n\t\t<RadioButton disabled value='b'>上海</RadioButton>\n\t\t<RadioButton value='c'>北京</RadioButton>\n\t\t<RadioButton value='d'>成都</RadioButton>\n\t</RadioGroup>\n\t<br />\n\t<br />\n\t<RadioGroup defaultValue='c' disabled>\n\t\t<RadioButton value='a'>杭州</RadioButton>\n\t\t<RadioButton value='b'>上海</RadioButton>\n\t\t<RadioButton value='c'>北京</RadioButton>\n\t\t<RadioButton value='d'>成都</RadioButton>\n\t</RadioGroup>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **大小按钮**\n\n通过size属性设置large,small和不设置属性改变单选框的大小"},{type:"code",content:"import {Radio} from 'dbox-ui';\nconst RadioGroup = Radio.RadioGroup;\nconst RadioButton = Radio.RadioButton;\n<div>\n\t<RadioGroup disabled defaultValue='a' size='large'>\n\t\t<RadioButton value='a'>杭州</RadioButton>\n\t\t<RadioButton value='b'>上海</RadioButton>\n\t\t<RadioButton value='c'>北京</RadioButton>\n\t\t<RadioButton value='d'>成都</RadioButton>\n\t</RadioGroup>\n\t<br />\n\t<br />\n\t<RadioGroup defaultValue='a'>\n\t\t<RadioButton value='a'>杭州</RadioButton>\n\t\t<RadioButton value='b'>上海</RadioButton>\n\t\t<RadioButton value='c'>北京</RadioButton>\n\t\t<RadioButton value='d'>成都</RadioButton>\n\t</RadioGroup>\n\t<br />\n\t<br />\n\t<RadioGroup defaultValue='a' size='small'>\n\t\t<RadioButton value='a'>杭州</RadioButton>\n\t\t<RadioButton value='b'>上海</RadioButton>\n\t\t<RadioButton value='c'>北京</RadioButton>\n\t\t<RadioButton value='d'>成都</RadioButton>\n\t</RadioGroup>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **按钮底纹**\n\n拥有底纹的仿按钮样式的单选框"},{type:"code",content:"import {Radio} from 'dbox-ui';\nconst RadioGroup = Radio.RadioGroup;\nconst RadioButton = Radio.RadioButton;\n<div>\n\t<RadioGroup disabled defaultValue='b' buttonStyle='solid'>\n\t\t<RadioButton value='a'>杭州</RadioButton>\n\t\t<RadioButton value='b'>上海</RadioButton>\n\t\t<RadioButton value='c'>北京</RadioButton>\n\t\t<RadioButton value='d'>成都</RadioButton>\n\t</RadioGroup>\n\t<br />\n\t<RadioGroup size='large' defaultValue='c' buttonStyle='solid'>\n\t\t<RadioButton value='a'>杭州</RadioButton>\n\t\t<RadioButton value='b'>上海</RadioButton>\n\t\t<RadioButton value='c'>北京</RadioButton>\n\t\t<RadioButton value='d'>成都</RadioButton>\n\t</RadioGroup>\n\t<br />\n\t<RadioGroup size='small' defaultValue='d' buttonStyle='solid'>\n\t\t<RadioButton value='a'>杭州</RadioButton>\n\t\t<RadioButton value='b'>上海</RadioButton>\n\t\t<RadioButton disabled value='c'>北京</RadioButton>\n\t\t<RadioButton value='d'>成都</RadioButton>\n\t</RadioGroup>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:'#### **Radio**\n\n| 参数             | 说明                   | 类型      | 默认值   |\n| -------------- | -------------------- | ------- | ----- |\n| checked        | 指定当前是否选中             | boolean | false |\n| disabled       | 禁用                   | boolean | false |\n| readOnly       | 只读                   | boolean | false |\n| defaultChecked | 初始是否选中               | boolean | false |\n| value          | 根据 value 进行比较，判断是否选中 | any     | 无     |\n\n#### **RadioGroup**\n\n单选框组合，用于包裹一组 `Radio`。\n\n| 参数           | 说明                                               | 类型                              | 默认值       |\n| ------------ | ------------------------------------------------ | ------------------------------- | --------- |\n| defaultValue | 默认选中的值                                           | string                          | 无         |\n| direction    | 组合的垂直(vertical)与水平排列方式(默认无传参)                    | string                          | 无         |\n| name         | RadioGroup 下所有 `input[type="radio"]` 的 `name` 属性 | string                          | 无         |\n| size         | 大小，只对按钮样式生效                                      | `large` \\\\ `default` \\\\ `small` | `default` |\n| value        | 用于设置当前选中的值                                       | any                             | 1         |\n| readOnly     | 只读                                               | boolean                         | false     |\n| onChange     | 选项变化时的回调函数                                       | Function(e:Event)               | 无         |\n| buttonStyle  | RadioButton 的风格样式，目前有描边和填色两种风格                   | 默认描边 \\\\ `solid`填充               | 无         |\n\n<style>.idoll-steps{margin-bottom: 10px}</style>'},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport RadioView from '../prevPage/radio';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <RadioView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/InputNumber"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"数字输入框"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Select"},u.default.createElement("span",null,"选择框"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Select",examples:n(1839)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/select":n(1840),react:n(1),"./index.jsx":n(98)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Select$0 = require('./index.jsx');\nconst Select = Select$0['Select'] || (Select$0.default || Select$0);",o);e.exports=[{type:"markdown",content:"可进行单选、多选、分组选择等场景。\n\n##### **基本使用**\n\n可通过设置 `size` 属性控制大小, `disabled` 属性可设置为禁用。"},{type:"code",content:"import { Select } from 'dbox-ui';\nconst {Option} = Select;\n<div>\n    <Select size='small' placeholder='请选择' style={{ width: 200 }}>\n        <Option value='beijing'>北京</Option>\n        <Option value='shanghai'>上海</Option>\n        <Option value='guangzhou'>广州</Option>\n        <Option value='shenzhen'>深圳</Option>\n    </Select>\n    <br /><br />\n\n    <Select placeholder='请选择' style={{ width: 200 }} allowClear>\n        <Option value='beijing'>北京1</Option>\n        <Option value='shanghai'>上海1</Option>\n        <Option value='guangzhou'>广州1</Option>\n        <Option value='shenzhen'>深圳1</Option>\n    </Select>\n    <br /><br />\n\n    <Select size='large' placeholder='请选择' style={{ width: 200 }}>\n        <Option value='beijing'>北京</Option>\n        <Option value='shanghai'>上海</Option>\n        <Option value='guangzhou'>广州</Option>\n        <Option value='shenzhen'>深圳</Option>\n    </Select>\n    <br /><br />\n\n    <Select defaultValue='select' style={{ width: 200 }} disabled>\n        <Option value='select'>请选择</Option>\n    </Select>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **搜索下拉框**\n\n可通过设置`showSearch` 属性对选项进行搜索。"},{type:"code",content:"import { Select } from 'dbox-ui';\nconst {Option} = Select;\n<Select showSearch style={{ width: 200 }} placeholder='请选择' >\n    <Option value='beijing'>北京</Option>\n    <Option value='shanghai'>上海</Option>\n    <Option value='guangzhou'>广州</Option>\n    <Option value='shenzhen'>深圳</Option>\n</Select>",settings:{},evalInContext:r},{type:"markdown",content:"##### **多选下拉框**\n\n可通过设置 `mode` 属性为 `multiple` 从已有条目中多选。设置 `mode` 属性为 `tags` 可随意输入内容。"},{type:"code",content:"import { Select } from 'dbox-ui';\nconst {Option} = Select;\n<div>\n    <Select mode='multiple' style={{ width: 200 }} defaultValue='beijing' placeholder='多选' disabled >\n        <Option value='beijing'>北京</Option>\n        <Option value='shanghai'>上海</Option>\n        <Option value='guangzhou'>广州</Option>\n        <Option value='shenzhen'>深圳</Option>\n    </Select>\n    <br /><br />\n    <Select mode='tags' style={{ width: 200 }} placeholder='可随意输入内容' disabled>\n        <Option value='beijing' >北京</Option>\n        <Option value='shanghai'>上海</Option>\n        <Option value='guangzhou'>广州</Option>\n        <Option value='shenzhen'>深圳</Option>\n    </Select>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **获得选项文本**\n\n默认情况下onChange只能获取value值，如果需要获取选中节点的文本，可以使用labelInValue属性。"},{type:"code",content:"import { Select } from 'dbox-ui';\nconst {Option} = Select;\nhandleChange = (value) => {\n    console.log(value);\n}\n<Select labelInValue defaultValue={{ key: 'beijing' }} style={{ width: 200 }} onChange={this.handleChange}>\n    <Option value='beijing'>北京</Option>\n    <Option value='shanghai'>上海</Option>\n    <Option value='guangzhou'>广州</Option>\n    <Option value='shenzhen'>深圳</Option>\n</Select>",settings:{},evalInContext:r},{type:"markdown",content:"##### **搜索用户**\n\n可以通过调用接口获取下拉框内容。"},{type:"code",content:"import { Select,Spin } from 'dbox-ui';\nconst {Option} = Select;\nclass SearchExample extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n            data: [],\n            value: [],\n            fetching: false\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.getUserInfo = this.getUserInfo.bind(this);\n    }\n\n    handleChange(value) {\n        this.setState({\n            value,\n            data: [],\n            fetching: false,\n        });\n    }\n\n    getUserInfo(value) {\n        console.log('getUserInfo ', value);\n        this.setState({ data: [], fetching: true });\n        // 这里直接调用后端api\n        setTimeout(() => {\n        const data = [\n            {value: '1', text: 'aa'},\n            {value: '2', text: 'bb'},\n            {value: '3', text: 'cc'},\n        ]\n        this.setState({ data, fetching: false });\n        }, 1000);\n    }\n    render(){\n        return (\n            <Select\n                mode='multiple'\n                labelInValue\n                value={this.state.value}\n                placeholder='请搜索'\n                notFoundContent={this.state.fetching ? <Spin size='small' /> : null}\n                filterOption={false}\n                onSearch={this.getUserInfo}\n                onChange={this.handleChange}\n                style={{ width: '20%' }}\n            >\n                {this.state.data.map(d => <Option key={d.value}>{d.text}</Option>)}\n            </Select>\n        )\n    }\n\n}\n\n<SearchExample />",settings:{},evalInContext:r},{type:"markdown",content:"##### **分组**\n\n使用 `Select.OptGroup` 进行选项分组。"},{type:"code",content:"import { Select } from 'dbox-ui';\nconst {Option, OptGroup} = Select;\n<Select\n    defaultValue='hefei'\n    style={{ width: 200 }}\n    onChange={this.handleChange}\n>\n    <OptGroup label='安徽'>\n        <Option value='xuancheng'>宣城</Option>\n        <Option value='hefei'>合肥</Option>\n    </OptGroup>\n    <OptGroup label='江苏'>\n        <Option value='nanjing'>南京</Option>\n        <Option value='suzhou'>苏州</Option>\n    </OptGroup>\n</Select>",settings:{},evalInContext:r},{type:"markdown",content:"##### **Select**\n\n| 参数                       | 说明                                                                                                 | 类型                                              | 默认值                                |\n| ------------------------ | -------------------------------------------------------------------------------------------------- | ----------------------------------------------- | ---------------------------------- |\n| allowClear               | 支持清除                                                                                               | boolean                                         | false                              |\n| autoClearSearchValue     | 是否在选中项后清空搜索框，只在 `mode` 为 `multiple` 或 `tags` 时有效。                                                  | boolean                                         | true                               |\n| autoFocus                | 默认获取焦点                                                                                             | boolean                                         | false                              |\n| defaultActiveFirstOption | 是否默认高亮第一个选项。                                                                                       | boolean                                         | true                               |\n| defaultValue             | 指定默认选中的条目                                                                                          | string string\\[]<br />number number\\[]          | -                                  |\n| disabled                 | 是否禁用                                                                                               | boolean                                         | false                              |\n| dropdownClassName        | 下拉菜单的 className 属性                                                                                 | string                                          | -                                  |\n| dropdownMatchSelectWidth | 下拉菜单和选择器同宽                                                                                         | boolean                                         | true                               |\n| dropdownStyle            | 下拉菜单的 style 属性                                                                                     | object                                          | -                                  |\n| filterOption             | 是否根据输入项进行筛选。当其为一个函数时，会接收 `inputValue` `option` 两个参数，当 `option` 符合筛选条件时，应返回 `true`，反之则返回 `false`。   | boolean or function(inputValue, option)         | true                               |\n| firstActiveValue         | 默认高亮的选项                                                                                            | string\\\\string\\[]                               | -                                  |\n| getPopupContainer        | 菜单渲染父节点。默认渲染到 body 上，如果你遇到菜单滚动定位问题，试试修改为滚动的区域，并相对其定位                                               | Function(triggerNode)                           | () => document.body                |\n| labelInValue             | 是否把每个选项的 label 包装到 value 中，会把 Select 的 value 类型从 `string` 变为 `{key: string, label: ReactNode}` 的格式 | boolean                                         | false                              |\n| maxTagCount              | 最多显示多少个 tag                                                                                        | number                                          | -                                  |\n| maxTagPlaceholder        | 隐藏 tag 时显示的内容                                                                                      | ReactNode\\\\function(omittedValues)              | -                                  |\n| mode                     | 设置 Select 的模式为多选或标签                                                                                | 'multiple'\\\\'tags'                              | -                                  |\n| notFoundContent          | 当下拉列表为空时显示的内容                                                                                      | string                                          | 'Not Found'                        |\n| optionFilterProp         | 搜索时过滤对应的 option 属性，如设置为 children 表示对内嵌内容进行搜索                                                       | string                                          | value                              |\n| optionLabelProp          | 回填到选择框的 Option 的属性值，默认是 Option 的子元素。比如在子元素需要高亮效果时，此值可以设为 `value`。                                  | string                                          | `children` （combobox 模式下为 `value`） |\n| placeholder              | 选择框默认文字                                                                                            | string                                          | -                                  |\n| showArrow                | 是否显示下拉小箭头                                                                                          | boolean                                         | true                               |\n| showSearch               | 使单选模式可搜索                                                                                           | boolean                                         | false                              |\n| size                     | 选择框大小，可选 `large` `small`                                                                           | string                                          | default                            |\n| suffixIcon               | 自定义的选择框后缀图标                                                                                        | ReactNode                                       | -                                  |\n| tokenSeparators          | 在 tags 和 multiple 模式下自动分词的分隔符                                                                      | string\\[]                                       |                                    |\n| value                    | 指定当前选中的条目                                                                                          | string string\\[]<br />number number\\[]          | -                                  |\n| onBlur                   | 失去焦点的时回调                                                                                           | function                                        | -                                  |\n| onChange                 | 选中 option，或 input 的 value 变化（combobox 模式下）时，调用此函数                                                  | function(value, option:Option/Array&lt;Option>) | -                                  |\n| onDeselect               | 取消选中时调用，参数为选中项的 value (或 key) 值，仅在 multiple 或 tags 模式下生效                                           | function(value，option:Option)                   | -                                  |\n| onFocus                  | 获得焦点时回调                                                                                            | function                                        | -                                  |\n| onMouseEnter             | 鼠标移入时回调                                                                                            | function                                        | -                                  |\n| onMouseLeave             | 鼠标移出时回调                                                                                            | function                                        | -                                  |\n| onPopupScroll            | 下拉列表滚动时的回调                                                                                         | function                                        | -                                  |\n| onSearch                 | 文本框值变化时回调                                                                                          | function(value: string)                         |                                    |\n| onSelect                 | 被选中时调用，参数为选中项的 value (或 key) 值                                                                     | function(value, option:Option)                  | -                                  |\n| defaultOpen              | 是否默认展开下拉菜单                                                                                         | boolean                                         | -                                  |\n| open                     | 是否展开下拉菜单                                                                                           | boolean                                         | -                                  |\n| onDropdownVisibleChange  | 展开下拉菜单的回调                                                                                          | function(open)                                  | -                                  |\n\n##### **Select Methods**\n\n| 名称      | 说明   |\n| ------- | ---- |\n| blur()  | 取消焦点 |\n| focus() | 获取焦点 |\n\n##### **Option props**\n\n| 参数        | 说明                                                            | 类型             | 默认值   |\n| --------- | ------------------------------------------------------------- | -------------- | ----- |\n| disabled  | 是否禁用                                                          | boolean        | false |\n| key       | 和 value 含义一致。如果 React 需要你设置此项，此项值与 value 的值相同，然后可以省略 value 设置 | string         |       |\n| title     | 选中该 Option 后，Select 的 title                                   | string         | -     |\n| value     | 默认根据此属性值进行筛选                                                  | string\\\\number | -     |\n| className | Option 器类名                                                    | string         | -     |\n\n##### **OptGroup props**\n\n| 参数    | 说明  | 类型                    | 默认值 |\n| ----- | --- | --------------------- | --- |\n| key   |     | string                | -   |\n| label | 组名  | string\\\\React.Element | 无   |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport SelectView from '../prevPage/select';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <SelectView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Radio"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"单选框"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Switch"},u.default.createElement("span",null,"开关"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Switch",examples:n(1842)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/switch":n(1843),react:n(1),"./index.jsx":n(676)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Switch$0 = require('./index.jsx');\nconst Switch = Switch$0['Switch'] || (Switch$0.default || Switch$0);",o);e.exports=[{type:"markdown",content:"表示开关状态/两种状态之间的切换\n\n##### **基本用法**\n\n切换开关状态"},{type:"code",content:"import {Switch} from 'dbox-ui';\n<Switch defaultChecked />",settings:{},evalInContext:r},{type:"markdown",content:"##### **按钮操作**\n\n通过按钮控制开关状态"},{type:"code",content:"import {Switch, Button} from 'dbox-ui';\nclass SwitchView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    disabled: true,\n    defaultChecked: true\n    }\n    this.toggle = this.toggle.bind(this)\n  };\n  toggle () {\n    this.setState({\n      disabled: !this.state.disabled\n    })\n  };\n  render() {\n    return (\n    <div>\n      <Switch disabled={this.state.disabled} />\n      <Button onClick={this.toggle}>改变禁用状态</Button>\n    </div>\n    )\n  }\n}\n<SwitchView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **两种大小**\n\n通过size是否设置small来控制开关的大小"},{type:"code",content:"import {Switch} from 'dbox-ui';\n<div>\n  <Switch defaultChecked />\n  <br />\n  <Switch size='small' />\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **带有文字的按钮**\n\n在开关内添加描述，一目了然开关的状态"},{type:"code",content:"import {Switch} from 'dbox-ui';\n<Switch checkedChildren={'1'} unCheckedChildren={'0'} />",settings:{},evalInContext:r},{type:"markdown",content:"##### **执行中**\n\n多于其他操作搭配，表示开关的执行过程"},{type:"code",content:"import {Switch} from 'dbox-ui';\n<div>\n  <Switch disabled loading defaultChecked />\n  <br />\n  <Switch disabled size='small' loading />\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **Switch**\n\n| 参数                | 说明                         | 类型                        | 默认值     |\n| ----------------- | -------------------------- | ------------------------- | ------- |\n| checked           | 指定当前是否选中                   | boolean                   | false   |\n| checkedChildren   | 选中时的内容                     | string/ReactNode          | -       |\n| defaultChecked    | 初始是否选中                     | boolean                   | false   |\n| size              | 开关大小，可选值：`default` `small` | string                    | default |\n| unCheckedChildren | 非选中时的内容                    | string/ReactNode          | -       |\n| onChange          | 变化时回调函数                    | Function(checked:Boolean) | -       |\n| onClick           | 点击时回调函数                    | Function                  | -       |\n| loading           | 加载中的开关                     | boolean                   | false   |\n| disabled          | 失效状态                       | boolean                   | false   |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport SwitchView from '../prevPage/switch';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <SwitchView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Select"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"选择框"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Slider"},u.default.createElement("span",null,"滑动条"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Slider",examples:n(1845)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/slider":n(1846),react:n(1),"./index.jsx":n(673)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Slider$0 = require('./index.jsx');\nconst Slider = Slider$0['Slider'] || (Slider$0.default || Slider$0);",o);e.exports=[{type:"markdown",content:"当用户需要在数值区间/自定义区间进行选择时，可为连续或离散值\n\n##### **基本使用**\n\n点击按钮可切换禁用状态；当range为true时可是实现双滑条"},{type:"code",content:"import { Slider, Switch } from 'dbox-ui';\n\nclass SliderView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      disabled: false,\n    }\n    this.handleDisabledChange = this.handleDisabledChange.bind(this);\n  }\n  handleDisabledChange(disabled) {\n    this.setState({disabled});\n  }\n  render() {\n    const {disabled} = this.state;\n    return (\n      <div>\n        <Slider defaultValue={20} disabled={disabled} />\n        <Slider range disabled={disabled} defaultValue={[10, 30]} />\n        Disabled: <Switch size='small' checked={disabled} onClick={this.handleDisabledChange} />\n      </div>\n    )\n  }\n}\n<SliderView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **带输入框的滑块**\n\n和数字输入框组件保持同步更改，最大可输入为20"},{type:"code",content:"import { Slider, InputNumber, Row, Col } from 'dbox-ui';\nclass SliderView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: 1,\n    }\n    this.onChange = this.onChange.bind(this);\n  }\n  onChange(value) {\n    this.setState({\n      inputValue: value\n    });\n  }\n  render() {\n    const {inputValue} = this.state;\n    return (\n      <Row>\n        <Col span={12}>\n          <Slider\n            min={1}\n            max={20}\n            onChange={this.onChange}\n            value={ typeof inputValue === 'number' ? inputValue : 0}\n          />\n        </Col>\n        <Col span={4} offset={1}>\n          <InputNumber\n            min={1}\n            max={20}\n            value={inputValue}\n            onChange={this.onChange}\n          />\n        </Col>\n      </Row>\n    )\n  }\n}\n<SliderView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **自定义提示**\n\n使用tipFormatter可以格式化Tooltip的内容，设置tipFormatter={null}可隐藏Tooltip"},{type:"code",content:"import { Slider, Switch } from 'dbox-ui';\n\nconst SliderView = () => {\n    return (\n      <div>\n        <Slider tipFormatter={(value) => `${value}%`}  defaultValue={20}/>\n        <Slider tipFormatter={null} defaultValue={10} />\n      </div>\n    )\n  }\n<SliderView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **Slider**\n\n| 参数           | 说明                                                     | 类型                | 默认值       |\n| ------------ | ------------------------------------------------------ | ----------------- | --------- |\n| defaultValue | 支持初始取值。当range为false时，使用number，否则用[number, number]      | number\\\\number\\[] | 0 or 0, 0 |\n| disabled     | 值为true时，滑块为禁用状态                                        | boolean           | false     |\n| dots         | 是否只能拖拽到刻度上                                             | boolean           | false     |\n| max          | 最大值                                                    | number            | 100       |\n| min          | 最小值                                                    | number            | 0         |\n| range        | 双滑块模式                                                  | boolean           | false     |\n| step         | 步长，取值必须大于0，并且可被（max - min）整除。                          | number\\\\null      | 1         |\n| tipFormatter | Slider会将当前值传给tipFormatter,并在Tooltip中显示tipFormatter的返回值 | Function\\\\null    | IDENTITY  |\n| value        | 设置当前取值。当range为false时，使用number，否则使用[number, number]     | number\\\\number\\[] |           |\n| onChange     | 当slider的值发生改变时，会触发onChange事件，并把改变的值作为参数传入              | Function(value)   | NOOP      |\n\n##### **方法**\n\n| 名称      | 描述   |\n| ------- | ---- |\n| blur()  | 移除焦点 |\n| focus() | 获取焦点 |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport SliderView from '../prevPage/slider';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <SliderView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Switch"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"开关"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/TimePicker"},u.default.createElement("span",null,"时间选择器"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"TimePicker",examples:n(1848)}},function(e,t,n){var a={"dbox-ui":n(21),moment:n(12),"../prevPage/timePicker":n(1849),react:n(1),"./index.jsx":n(679)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst TimePicker$0 = require('./index.jsx');\nconst TimePicker = TimePicker$0['TimePicker'] || (TimePicker$0.default || TimePicker$0);",o);e.exports=[{type:"markdown",content:"当用户需要一个准确的时间的时候，可以点击标准输入框，弹出时间面板进行选择准确的时间节点。\n\n##### **基本用法**"},{type:"code",content:"import { TimePicker } from 'dbox-ui';\nimport moment from 'moment';\nonChange = (time, timeString) => {\n    console.log(time, timeString);\n  }\n<TimePicker onChange={this.onChange} />",settings:{},evalInContext:r},{type:"markdown",content:"##### **三种尺寸**"},{type:"code",content:"import { TimePicker } from 'dbox-ui';\nimport moment from 'moment';\n\n<div style={{ display: 'flex' }}>\n  <div style={{marginRight: 10}}>\n    <TimePicker defaultValue={moment('12:08:23', 'HH:mm:ss')} size='large' />\n  </div>\n  <div style={{marginRight: 10}}>\n    <TimePicker defaultValue={moment('12:08:23', 'HH:mm:ss')} />\n  </div>\n    <div style={{marginRight: 10}}>\n      <TimePicker defaultValue={moment('12:08:23', 'HH:mm:ss')} size='small' />\n    </div>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **禁用**"},{type:"code",content:"import { TimePicker } from 'dbox-ui';\nimport moment from 'moment';\n\n<TimePicker defaultValue={moment('12:08:23', 'HH:mm:ss')} disabled />",settings:{},evalInContext:r},{type:"markdown",content:'##### **API**\n\n| 参数              | 说明                       | 类型                                               | 默认值        |\n| --------------- | ------------------------ | ------------------------------------------------ | ---------- |\n| allowEmpty      | 是否展示清除按钮                 | boolean                                          | true       |\n| autoFocus       | 自动获取焦点                   | boolean                                          | false      |\n| className       | 选择器类名                    | string                                           | \'\'         |\n| defaultValue    | 默认时间                     | moment                                           | 无          |\n| disabled        | 禁用全部操作                   | boolean                                          | false      |\n| disabledHours   | 禁止选择部分小时选项               | function()                                       | 无          |\n| disabledMinutes | 禁止选择部分分钟选项               | function(selectedHour)                           | 无          |\n| disabledSeconds | 禁止选择部分秒选项                | function(selectedHour, selectedMinute)           | 无          |\n| format          | 展示的时间格式                  | string                                           | "HH:mm:ss" |\n| inputReadOnly   | 设置输入框为只读（避免在移动设备上打开虚拟键盘） | boolean                                          | false      |\n| placeholder     | 没有值的时候显示的内容              | string                                           | "请选择时间"    |\n| onChange        | 时间发生变化的回调                | function(time: moment, timeString: string): void | 无          |\n| onOpenChange    | 面板打开/关闭时的回调              | (open: boolean): void                            | 无          |\n| value           | 当前时间                     | moment                                           | 无          |'},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport TimePickerView from '../prevPage/timePicker';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <TimePickerView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Slider"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"滑动条"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/TreeSelect"},u.default.createElement("span",null,"树选择"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"TreeSelect",examples:n(1851)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/treeSelect":n(1852),react:n(1),"./index.jsx":n(682)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst TreeSelect$0 = require('./index.jsx');\nconst TreeSelect = TreeSelect$0['TreeSelect'] || (TreeSelect$0.default || TreeSelect$0);",o);e.exports=[{type:"markdown",content:"类似 `Select` 的选择控件，可选择的数据结构是一个树形结构。\n\n##### **基本用法**"},{type:"code",content:'import { TreeSelect } from \'dbox-ui\';\nconst TreeNode = TreeSelect.TreeNode;\n\nclass TreeSelectDemo extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            value: undefined,\n        }\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(value){\n        console.log(value);\n        this.setState({ value });\n    }\n\n    render() {\n        return (\n            <TreeSelect\n                showSearch\n                style={{ width: 300 }}\n                value={this.state.value}\n                dropdownStyle={{ maxHeight: 400, overflow: \'auto\' }}\n                placeholder="请选择"\n                allowClear\n                treeDefaultExpandAll\n                onChange={this.onChange}\n            >\n                <TreeNode value="zhongguo" title="中国" key="0-1">\n                    <TreeNode value="shanghai" title="上海" key="0-1-1">\n                        <TreeNode value="jingan" title="静安" key="random" />\n                        <TreeNode value="pudongxinqu" title="浦东新区" key="random1" />\n                    </TreeNode>\n                    <TreeNode value="anhui" title="安徽" key="random2">\n                        <TreeNode value="hefei" title="合肥" key="random3" />\n                    </TreeNode>\n                </TreeNode>\n            </TreeSelect>\n            );\n        }\n    }\n<TreeSelectDemo />',settings:{},evalInContext:r},{type:"markdown",content:"##### **从数据直接生成**\n\n可通过设置 `treeData` 属性将 `JSON` 数据直接生成树结构。"},{type:"code",content:"import { TreeSelect } from 'dbox-ui';\nconst TreeNode = TreeSelect.TreeNode;\nconst treeData = [{\n  title: '上海',\n  value: 'shanghai',\n  key: '0-0',\n  children: [{\n    title: '浦东新区',\n    value: 'pudongxinqu',\n    key: '0-0-1',\n  }, {\n    title: '静安',\n    value: 'jingan',\n    key: '0-0-2',\n  }],\n}, {\n  title: '安徽',\n  value: 'anhui',\n  key: '0-1',\n}];\nclass TreeSelectDemo extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            value: undefined,\n        }\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(value){\n        console.log(value);\n        this.setState({ value });\n    }\n\n    render() {\n        return (\n            <TreeSelect\n                showSearch\n                style={{ width: 300 }}\n                value={this.state.value}\n                dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n                treeData={treeData}\n                placeholder=\"请选择\"\n                allowClear\n                treeDefaultExpandAll\n                onChange={this.onChange}\n            >\n            </TreeSelect>\n            );\n        }\n    }\n<TreeSelectDemo />",settings:{},evalInContext:r},{type:"markdown",content:"##### **多选**\n\n可通过设置 `multiple` 属性可多选。"},{type:"code",content:"import { TreeSelect } from 'dbox-ui';\nconst TreeNode = TreeSelect.TreeNode;\nconst treeData = [{\n  title: '上海',\n  value: 'shanghai',\n  key: '0-0',\n  children: [{\n    title: '浦东新区',\n    value: 'pudongxinqu',\n    key: '0-0-1',\n  }, {\n    title: '静安',\n    value: 'jingan',\n    key: '0-0-2',\n  }],\n}, {\n  title: '安徽',\n  value: 'anhui',\n  key: '0-1',\n}];\nclass TreeSelectDemo extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            value: undefined,\n        }\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(value){\n        console.log(value);\n        this.setState({ value });\n    }\n\n    render() {\n        return (\n            <TreeSelect\n                showSearch\n                style={{ width: 300 }}\n                value={this.state.value}\n                dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n                treeData={treeData}\n                placeholder=\"请选择\"\n                multiple\n                allowClear\n                treeDefaultExpandAll\n                onChange={this.onChange}\n            >\n            </TreeSelect>\n            );\n        }\n    }\n<TreeSelectDemo />",settings:{},evalInContext:r},{type:"markdown",content:"##### **可勾选**\n\n可通过设置 `treeCheckable` 属性实现勾选框多选功能。"},{type:"code",content:"import { TreeSelect } from 'dbox-ui';\nconst TreeNode = TreeSelect.TreeNode;\nconst treeData = [{\n  title: '上海',\n  value: 'shanghai',\n  key: '0-0',\n  children: [{\n    title: '浦东新区',\n    value: 'pudongxinqu',\n    key: '0-0-1',\n  }, {\n    title: '静安',\n    value: 'jingan',\n    key: '0-0-2',\n  }],\n}, {\n  title: '安徽',\n  value: 'anhui',\n  key: '0-1',\n}];\nclass TreeSelectDemo extends React.Component {\n    constructor(){\n        super();\n        this.state = {\n            value: undefined,\n        }\n        this.onChange = this.onChange.bind(this);\n    }\n\n    onChange(value){\n        console.log(value);\n        this.setState({ value });\n    }\n\n    render() {\n        return (\n            <TreeSelect\n                allowClear\n                showSearch\n                style={{ width: 300 }}\n                value={this.state.value}\n                dropdownStyle={{ maxHeight: 400, overflow: 'auto' }}\n                treeData={treeData}\n                placeholder=\"请选择\"\n                treeCheckable\n                treeDefaultExpandAll\n                onChange={this.onChange}\n            >\n            </TreeSelect>\n            );\n        }\n    }\n<TreeSelectDemo />",settings:{},evalInContext:r},{type:"markdown",content:"##### **Tree**\n\n| 参数                       | 说明                                                                                                                                         | 类型                                                                          | 默认值                   |\n| ------------------------ | ------------------------------------------------------------------------------------------------------------------------------------------ | --------------------------------------------------------------------------- | --------------------- |\n| allowClear               | 显示清除按钮                                                                                                                                     | boolean                                                                     | false                 |\n| autoClearSearchValue     | 当多选模式下值被选择，自动清空搜索框                                                                                                                         | boolean                                                                     | true                  |\n| defaultValue             | 指定默认选中的条目                                                                                                                                  | string/string\\[]                                                            | -                     |\n| disabled                 | 是否禁用                                                                                                                                       | boolean                                                                     | false                 |\n| dropdownClassName        | 下拉菜单的 className 属性                                                                                                                         | string                                                                      | -                     |\n| dropdownMatchSelectWidth | 下拉菜单和选择器同宽。默认将设置 `min-width`。                                                                                                              | boolean                                                                     | true                  |\n| dropdownStyle            | 下拉菜单的样式                                                                                                                                    | object                                                                      | -                     |\n| filterTreeNode           | 是否根据输入项进行筛选，默认用 treeNodeFilterProp 的值作为要筛选的 TreeNode 的属性值                                                                                  | boolean/Function(inputValue: string, treeNode: TreeNode) (函数需要返回bool值)      | Function              |\n| getPopupContainer        | 菜单渲染父节点。默认渲染到 body 上，如果你遇到菜单滚动定位问题，试试修改为滚动的区域，并相对其定位。                                                                                      | Function(triggerNode)                                                       | () => document.body   |\n| labelInValue             | 是否把每个选项的 label 包装到 value 中，会把 value 类型从 `string` 变为 `{value: string, label: ReactNode, halfChecked(treeCheckStrictly 时有效): string[] }` 的格式 | boolean                                                                     | false                 |\n| loadData                 | 异步加载数据                                                                                                                                     | function(node)                                                              | -                     |\n| maxTagCount              | 最多显示多少个 tag                                                                                                                                | number                                                                      | -                     |\n| maxTagPlaceholder        | 隐藏 tag 时显示的内容                                                                                                                              | ReactNode/function(omittedValues)                                           | -                     |\n| multiple                 | 支持多选（当设置 treeCheckable 时自动变为true）                                                                                                          | boolean                                                                     | false                 |\n| placeholder              | 选择框默认文字                                                                                                                                    | string                                                                      | -                     |\n| searchPlaceholder        | 搜索框默认文字                                                                                                                                    | string                                                                      | -                     |\n| searchValue              | 搜索框的值，可以通过 `onSearch` 获取用户输入                                                                                                               | string                                                                      | -                     |\n| showCheckedStrategy      | 定义选中项回填的方式。`TreeSelect.SHOW_ALL`: 显示所有选中节点(包括父节点). `TreeSelect.SHOW_PARENT`: 只显示父节点(当父节点下所有子节点都选中时). 默认只显示子节点.                             | enum{TreeSelect.SHOW_ALL, TreeSelect.SHOW_PARENT, TreeSelect.SHOW_CHILD }   | TreeSelect.SHOW_CHILD |\n| showSearch               | 在下拉中显示搜索框(仅在单选模式下生效)                                                                                                                       | boolean                                                                     | false                 |\n| size                     | 选择框大小，可选 `large` `small`                                                                                                                   | string                                                                      | 'default'             |\n| suffixIcon               | 自定义的选择框后缀图标                                                                                                                                | ReactNode                                                                   | -                     |\n| treeCheckable            | 显示 checkbox                                                                                                                                | boolean                                                                     | false                 |\n| treeCheckStrictly        | checkable 状态下节点选择完全受控（父子节点选中状态不再关联），会使得 `labelInValue` 强制为 true                                                                            | boolean                                                                     | false                 |\n| treeData                 | treeNodes 数据，如果设置则不需要手动构造 TreeNode 节点（value 在整个树范围内唯一）                                                                                     | array&lt;{value, title, children, [disabled, disableCheckbox, selectable]}> | \\[]                   |\n| treeDataSimpleMode       | 使用简单格式的 treeData，具体设置参考可设置的类型 (此时 treeData 应变为这样的数据结构: [{id:1, pId:0, value:'1', title:\"test1\",...},...], `pId` 是父节点的 id)                  | false\\|Array&lt;{ id: string, pId: string, rootPId: null }>                 | false                 |\n| treeDefaultExpandAll     | 默认展开所有树节点                                                                                                                                  | boolean                                                                     | false                 |\n| treeDefaultExpandedKeys  | 默认展开的树节点                                                                                                                                   | string\\[]                                                                   | -                     |\n| treeExpandedKeys         | 设置展开的树节点                                                                                                                                   | string\\[]                                                                   | -                     |\n| treeNodeFilterProp       | 输入项过滤对应的 treeNode 属性                                                                                                                       | string                                                                      | 'value'               |\n| treeNodeLabelProp        | 作为显示的 prop 设置                                                                                                                              | string                                                                      | 'title'               |\n| value                    | 指定当前选中的条目                                                                                                                                  | string/string\\[]                                                            | -                     |\n| onChange                 | 选中树节点时调用此函数                                                                                                                                | function(value, label, extra)                                               | -                     |\n| onSearch                 | 文本框值变化时回调                                                                                                                                  | function(value: string)                                                     | -                     |\n| onSelect                 | 被选中时调用                                                                                                                                     | function(value, node, extra)                                                | -                     |\n| onTreeExpand             | 展示节点时调用                                                                                                                                    | function(expandedKeys)                                                      | -                     |\n\n##### **Tree 方法**\n\n| 名称      | 描述   |\n| ------- | ---- |\n| blur()  | 移除焦点 |\n| focus() | 获取焦点 |\n\n##### **TreeNode props**\n\n> 建议使用 treeData 来代替 TreeNode，免去手工构造麻烦\n\n| 参数              | 说明                        | 类型               | 默认值   |\n| --------------- | ------------------------- | ---------------- | ----- |\n| selectable      | 是否可选                      | boolean          | true  |\n| disableCheckbox | 禁掉 checkbox               | boolean          | false |\n| disabled        | 是否禁用                      | boolean          | false |\n| isLeaf          | 是否是叶子节点                   | boolean          | false |\n| key             | 此项必须设置（其值在整个树范围内唯一）       | string           | -     |\n| title           | 树节点显示的内容                  | string/ReactNode | '---' |\n| value           | 默认根据此属性值进行筛选（其值在整个树范围内唯一） | string           | -     |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport TreeSelectView from '../prevPage/treeSelect';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <TreeSelectView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/TimePicker"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"时间选择器"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Transfer"},u.default.createElement("span",null,"穿梭框"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Transfer",examples:n(1854)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/transfer":n(1855),react:n(1),"./index.jsx":n(681)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Transfer$0 = require('./index.jsx');\nconst Transfer = Transfer$0['Transfer'] || (Transfer$0.default || Transfer$0);",o);e.exports=[{type:"markdown",content:"需要在多个可选项中进行多选时或者切换的时候。\n\n穿梭选择框用直观的方式在两栏中移动元素，完成选择行为。\n选择一个或以上的选项后，点击对应的方向键，可以把选中的选项移动到另一栏。 其中，左边一栏为 显示字段，右边一栏为 隐藏字段，API 的设计也反映了这两个概念。\n\n##### **基本用法**"},{type:"code",content:"import { Transfer, Switch} from 'dbox-ui';\n\nconst mockData = [];\nfor (let i = 0; i < 20; i++) {\n  mockData.push({\n    key: i.toString(),\n    title: `内容${i + 1}`,\n    description: `description of content${i + 1}`,\n    disabled: i % 3 < 1,\n  });\n}\n\nconst oriTargetKeys = mockData\n  .filter(item => +item.key % 3 > 1)\n  .map(item => item.key);\n\nclass TransferView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      targetKeys: oriTargetKeys,\n      selectedKeys: [],\n      disabled: true,\n    }\n    this.handleChange = this.handleChange.bind(this)\n    this.handleSelectChange = this.handleSelectChange.bind(this);\n    this.handleScroll = this.handleScroll.bind(this);\n    this.handleDisable = this.handleDisable.bind(this);\n  }\n  handleChange(nextTargetKeys, direction, moveKeys) {\n    this.setState({ targetKeys: nextTargetKeys });\n\n    console.log('targetKeys: ', nextTargetKeys);\n    console.log('direction: ', direction);\n    console.log('moveKeys: ', moveKeys);\n  }\n\n  handleSelectChange(sourceSelectedKeys, targetSelectedKeys) {\n    this.setState({ selectedKeys: [...sourceSelectedKeys, ...targetSelectedKeys] });\n\n    console.log('sourceSelectedKeys: ', sourceSelectedKeys);\n    console.log('targetSelectedKeys: ', targetSelectedKeys);\n  }\n\n  handleScroll(direction, e) {\n    console.log('direction:', direction);\n    console.log('target:', e.target);\n  }\n\n  handleDisable(disabled) {\n    this.setState({ disabled });\n  };\n  render() {\n    const { targetKeys, selectedKeys, disabled } = this.state;\n    return (\n      <div>\n        <div style={{marginBottom: 15}}>\n          <Switch\n            checked={disabled}\n            onChange={this.handleDisable}\n          />\n        </div>\n        <Transfer\n          titles={['显示字段', '隐藏字段']}\n          dataSource={mockData}\n          targetKeys={targetKeys}\n          selectedKeys={selectedKeys}\n          onChange={this.handleChange}\n          onSelectChange={this.handleSelectChange}\n          onScroll={this.handleScroll}\n          render={item => item.title}\n          disabled={!disabled}\n          />\n      </div>\n    )\n  }\n}\n<TransferView />",settings:{},evalInContext:r},{type:"markdown",content:'##### **API**\n\n| 参数             | 说明                                                                                                     | 类型                                             | 默认值                        |\n| -------------- | ------------------------------------------------------------------------------------------------------ | ---------------------------------------------- | -------------------------- |\n| className      | 自定义类                                                                                                   | string                                         |                            |\n| dataSource     | 数据源，其中的数据将会被渲染到左边一栏中，targetKeys 中指定的除外。                                                                | TransferItem\\[]                                | \\[]                        |\n| targetKeys     | 显示在右侧框数据的key集合                                                                                         | string\\[]                                      | \\[]                        |\n| sort           | 自定义排序                                                                                                  | bool                                           | false                      |\n| disabled       | 是否禁用                                                                                                   | boolean                                        | false                      |\n| lazy           | Transfer 使用了 react-lazy-load 优化性能，这里可以设置相关参数。设为 false 可以关闭懒加载。                                         | object , boolean                               | { height: 32, offset: 32 } |\n| listStyle      | 两个穿梭框的自定义样式                                                                                            | object                                         |                            |\n| render         | 每行数据渲染函数，该函数的入参为 dataSource 中的项，返回值为 ReactElement。或者返回一个普通对象，其中 label 字段为 ReactElement，value 字段为 title | Function(record)                               |                            |\n| selectedKeys   | 设置哪些项应该被选中                                                                                             | string\\[]                                      | \\[]                        |\n| titles         | 标题集合，顺序从左至右                                                                                            | string\\[]                                      | \'\', \'\'                     |\n| onChange       | 选项在两栏之间转移时的回调函数                                                                                        | (targetKeys, direction, moveKeys): void        |                            |\n| onScroll       | 选项列表滚动时的回调函数                                                                                           | (direction, event): void                       |                            |\n| onSelectChange | 选中项发生改变时的回调函数                                                                                          | (sourceSelectedKeys, targetSelectedKeys): void |                            |\n\n##### **注意**\n\n按照 React 的规范，所有的组件数组必须绑定 key。在 Transfer 中，dataSource里的数据值需要指定 key 值。对于 dataSource 默认将每列数据的 key 属性作为唯一的标识。\n\n如果你的数据没有这个属性，务必使用 rowKey 来指定数据列的主键\n\n```js\n<span class="token comment">// 比如你的数据主键是 uid</span>\n<span class="token keyword">return</span> <span class="token operator">&lt;</span>Transfer rowKey<span class="token operator">=</span><span class="token punctuation">{</span><span class="token parameter">record</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>uid<span class="token punctuation">}</span> <span class="token operator">/</span><span class="token operator">></span><span class="token punctuation">;</span>\n```'},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport TransferView from '../prevPage/transfer';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <TransferView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/TreeSelect"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"树选择"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Upload"},u.default.createElement("span",null,"上传"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Upload",examples:n(1857)}},function(e,t,n){var a={"dbox-ui":n(21),components:n(21),reqwest:n(813),"../prevPage/upload":n(1859),react:n(1),"./index.jsx":n(683)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Upload$0 = require('./index.jsx');\nconst Upload = Upload$0['Upload'] || (Upload$0.default || Upload$0);",o);e.exports=[{type:"markdown",content:"上传是将信息（网页、文字、图片、视频等）通过网页或者上传工具发布到远程服务器上的过程。\n\n##### **基础上传**\n\n基本的上传操作"},{type:"code",content:"import {Upload, Message, Button} from 'dbox-ui';\nconst commonFileList = [{\n  uid: -1,\n  name: 'xxx.html',\n  status: 'done',\n}, {\n  uid: -2,\n  name: 'yyy.video',\n  status: 'done',\n}, {\n  uid: -3,\n  name: 'zzz.ppt',\n  status: 'error',\n  response: 'Server Error 500',\n}];\nconst props1 = {\n  name: 'file',\n  action: 'https://jsonplaceholder.typicode.com/posts/',\n  headers: {\n    authorization: 'authorization-text',\n  },\n  onChange(info) {\n    if (info.file.status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n    if (info.file.status === 'done') {\n      Message.success(`${info.file.name} 上传成功。`);\n      return false;\n    } else if (info.file.status === 'error') {\n    \tMessage.error(`${info.file.name} 上传失败。`);\n      return false;\n    }\n  }\n};\n<Upload {...props1} defaultFileList={commonFileList}>\n  <Button type='primary' icon='cloud-upload'>上传</Button>\n  <p>支持上传网页、文字、图片、视频等文件格式，不限大小</p>\n</Upload>",settings:{},evalInContext:r},{type:"markdown",content:"##### **图片上传**\n\n仅限图片上传操作"},{type:"code",content:"import {Upload, Message, Button} from 'components';\nconst commonFileList = [{\n  uid: -1,\n  name: 'xxx.jpg',\n  status: 'done',\n  url: 'http://www.google.com/xxx.jpg',\n}, {\n  uid: -2,\n  name: 'yyy.png',\n  status: 'done',\n  url: 'http://www.google.com/yyy.png',\n}, {\n  uid: -3,\n  name: 'zzz.png',\n  status: 'error',\n  response: 'Server Error 500',\n  url: 'http://www.google.com/zzz.png',\n}];\nconst props1 = {\n  name: 'file',\n  action: 'https://jsonplaceholder.typicode.com/posts/',\n  headers: {\n    authorization: 'authorization-text',\n  },\n  onChange(info) {\n    if (info.file.status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n    if (info.file.status === 'done') {\n      Message.success(`${info.file.name} 上传成功。`);\n      return false;\n    } else if (info.file.status === 'error') {\n    \tMessage.error(`${info.file.name} 上传失败。`);\n      return false;\n    }\n  },\n  beforeUpload(file) {\n    const isJPG = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJPG) {\n      Message.error('您只能上传 JPG或PNG 文件!');\n    }\n    const isLt1M = file.size / 1024 / 1024 < 1;\n    if (!isLt1M) {\n      Message.error('上传图片文件必须小于 1024KB!');\n    }\n    return isJPG && isLt1M;\n  }\n};\n<Upload {...props1} defaultFileList={commonFileList}>\n  <Button type='primary' icon='cloud-upload'>上传</Button>\n  <p>支持上传jpg/png文件格式，且不超过1024kb</p>\n</Upload>",settings:{},evalInContext:r},{type:"markdown",content:"##### **拖拽上传**\n\n将文件拖拽到制定区域或者点击制定区域上传"},{type:"code",content:"import {Upload, Message, Icon} from 'dbox-ui';\nconst Dragger = Upload.Dragger;\nconst commonFileList = [{\n  uid: -1,\n  name: 'xxx.jpg',\n  status: 'done',\n  url: 'http://www.google.com/xxx.jpg',\n}, {\n  uid: -2,\n  name: 'yyy.png',\n  status: 'done',\n  url: 'http://www.google.com/yyy.png',\n}, {\n  uid: -3,\n  name: 'zzz.png',\n  status: 'error',\n  response: 'Server Error 500',\n  url: 'http://www.google.com/zzz.png',\n}];\nconst props2 = {\n  name: 'file',\n  multiple: true,\n  action: 'https://jsonplaceholder.typicode.com/posts/',\n  onChange(info) {\n    const status = info.file.status;\n    if (status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n    if (status === 'done') {\n      Message.success(`${info.file.name}文件上传成功.`);\n    } else if (status === 'error') {\n      Message.error(`${info.file.name}文件上传失败.`);\n    }\n  },\n  beforeUpload(file) {\n    const isJPG = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJPG) {\n      Message.error('您只能上传 JPG或PNG 文件!');\n    }\n    const isLt1M = file.size / 1024 / 1024 < 1;\n    if (!isLt1M) {\n      Message.error('上传图片文件必须小于 1024KB!');\n    }\n    return isJPG && isLt1M;\n  }\n};\n<Dragger {...props2} defaultFileList={commonFileList}>\n  <p className='idoll-upload-icon'><Icon type='cloud-upload' /></p>\n  <p className='idoll-upload-text'>将文件拖到此处，或者点击上传</p>\n  <p className='idoll-upload-limit'>支持上传jpg/png文件格式，且不超过1024kb</p>\n</Dragger>",settings:{},evalInContext:r},{type:"markdown",content:"##### **照片墙上传**\n\n将图片上传后展示为照片墙的上传模式"},{type:"code",content:"import {Upload, Message, Modal, Icon} from 'dbox-ui';\nclass PicturesWall extends React.Component {\n constructor(props) {\n  super(props)\n  this.state = {\n    previewVisible: false,\n    previewImage: '',\n    fileList: [{\n      uid: '-1',\n      name: 'xxx.png',\n      status: 'done',\n      url: 'https://images.pexels.com/photos/207983/pexels-photo-207983.jpeg',\n    }],\n  };\n  this.handleCancel =this.handleCancel.bind(this)\n  this.handlePreview =this.handlePreview.bind(this)\n  this.beforeUpload =this.beforeUpload.bind(this)\n  this.handleChange =this.handleChange.bind(this)\n}\n  handleCancel () {this.setState({ previewVisible: false })}\n  handlePreview (file) {\n    console.log('1')\n    this.setState({\n      previewImage: file.url || file.thumbUrl,\n      previewVisible: true,\n    });\n  }\n  beforeUpload (file) {\n    const isJPG = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJPG) {\n      Message.error('您只能上传 JPG或PNG 文件!');\n    }\n    const isLt1M = file.size / 1024 / 1024 < 1;\n    if (!isLt1M) {\n      Message.error('上传图片文件必须小于 1024KB!');\n    }\n    return isJPG && isLt1M;\n  }\n  handleChange ({ fileList }) {this.setState({ fileList })}\n  render() {\n    const { previewVisible, previewImage, fileList } = this.state;\n    console.log('previewVisible', previewVisible)\n    const uploadButton = (\n      <div>\n        <Icon type='plus' />\n        <div className='idoll-upload-text'>上传</div>\n      </div>\n    );\n    return (\n      <div className='clearfix'>\n        <Upload\n          action='//jsonplaceholder.typicode.com/posts/'\n          listType='picture-card'\n          fileList={fileList}\n          beforeUpload={this.beforeUpload}\n          onPreview={this.handlePreview}\n          onChange={this.handleChange}\n        >\n          {uploadButton}\n        </Upload>\n        <Modal visible={previewVisible} footer={null} onCancel={this.handleCancel}>\n          <img alt='example' style={{ width: '100%' }} src={previewImage} />\n        </Modal>\n      </div>\n    );\n  }\n}\n<PicturesWall />",settings:{},evalInContext:r},{type:"markdown",content:"##### **图片列表上传**\n\n将上传后的图片展示为列表样式的上传模式"},{type:"code",content:"import {Upload, Message, Icon, Button} from 'dbox-ui';\nconst fileList = [{\n  uid: -1,\n  name: 'xxx.jpg',\n  status: 'done',\n  url: 'https://images.pexels.com/photos/207983/pexels-photo-207983.jpeg',\n  thumbUrl: 'https://images.pexels.com/photos/207983/pexels-photo-207983.jpeg',\n}, {\n  uid: -2,\n  name: 'yyy.png',\n  status: 'error',\n  url: 'https://images.pexels.com/photos/207983/pexels-photo-207983.jpeg',\n  thumbUrl: 'https://images.pexels.com/photos/207983/pexels-photo-207983.jpeg',\n}];\nconst props3 = {\n  action: 'https://jsonplaceholder.typicode.com/posts/',\n  listType: 'picture',\n  defaultFileList: [...fileList],\n  beforeUpload (file) {\n    const isJPG = file.type === 'image/jpeg' || file.type === 'image/png';\n    if (!isJPG) {\n      Message.error('您只能上传 JPG或PNG 文件!')\n    }\n    const isLt1M = file.size / 1024 / 1024 < 1;\n    if (!isLt1M) {\n      Message.error('上传图片文件必须小于 1024KB!')\n    }\n    return isJPG && isLt1M;\n  },\n  onChange(info) {\n    const status = info.file.status;\n    if (status !== 'uploading') {\n      console.log(info.file, info.fileList);\n    }\n    if (status === 'done') {\n      Message.success(`${info.file.name}文件上传成功.`);\n    } else if (status === 'error') {\n      Message.error(`${info.file.name}文件上传失败.`);\n    }\n  },\n};\n<Upload {...props3}>\n  <Button type='primary'><Icon type='cloud-upload' />上传</Button>\n  <p>支持上传jpg/png文件格式，且不超过1024kb</p>\n</Upload>",settings:{},evalInContext:r},{type:"markdown",content:"##### **手动上传**\n\n将上传操作拆分为选中文件和手动上传操作，确保上传文件的准确性"},{type:"code",content:"import reqwest from 'reqwest';\nimport {Upload, Message, Button, Icon} from 'dbox-ui';\nclass Demo extends React.Component {\n  constructor(props) {\n  super(props)\n  this.state = {\n  fileList: [{\n    uid: -1,\n    name: 'xxx.jpg',\n    status: 'done',\n    url: 'http://www.google.com/xxx.jpg',\n  }, {\n    uid: -2,\n    name: 'yyy.png',\n    status: 'done',\n    url: 'http://www.google.com/yyy.png',\n  }, {\n    uid: -3,\n    name: 'zzz.png',\n    status: 'error',\n    response: 'Server Error 500',\n    url: 'http://www.google.com/zzz.png',\n  }],\n  uploading: false,\n  }\n  this.handleUpload = this.handleUpload.bind(this);\n  };\n  handleUpload () {\n    const { fileList } = this.state;\n    const formData = [];\n    fileList.forEach((file) => {\n      formData.push(file);\n    });\n    this.setState({\n      uploading: true,\n      fileList: formData\n    });\n    // 你可以用AJAX类似这样\n    reqwest({\n      url: 'https://jsonplaceholder.typicode.com/posts/',\n      method: 'post',\n      processData: false,\n      data: formData,\n      success: () => {\n        this.setState({\n          fileList: formData,\n          uploading: false,\n        });\n        Message.success('文件上传成功.');\n      },\n      error: () => {\n        this.setState({\n          uploading: false,\n        });\n        Message.error('文件上传失败.');\n      },\n    });\n  };\n  render() {\n    const { fileList } = this.state;\n    const props4 = {\n      onRemove: (file) => {\n        this.setState((state) => {\n          const index = state.fileList.indexOf(file);\n          const newFileList = state.fileList.slice();\n          newFileList.splice(index, 1);\n          return {\n            fileList: newFileList,\n          };\n        });\n      },\n      beforeUpload: (file) => {\n        const isJPG = file.type === 'image/jpeg' || file.type === 'image/png';\n        const isLt1M = file.size / 1024 / 1024 < 1;\n        if (isJPG || isLt1M) {\n          if (!isJPG) {\n            Message.error('您只能上传 JPG或PNG 文件!')\n        }\n          if (!isLt1M) {\n            Message.error('上传图片文件必须小于 1024KB!')\n         }\n         return isJPG && isLt1M;\n        }else {\n          this.setState(state => ({\n            fileList: [...state.fileList, file],\n        }));\n          return false;\n        }\n      },\n      fileList,\n    };\n    return (\n      <div className='manual'>\n        <Upload {...props4}>\n          <Button type='secondary'><Icon type='file' />选择文件</Button>\n          <p>支持上传jpg/png文件格式，且不超过1024kb</p>\n        </Upload>\n        <Button\n          type='primary'\n          className='beginUpload'\n          disabled={this.state.fileList.length <= 3}\n          onClick={this.handleUpload}\n          loading={this.state.uploading}\n          style={{ marginTop: 16 }}>\n          {!this.state.uploading ? <Icon type='cloud-upload' /> : null}{this.state.uploading ? '正在上传' : '开始上传' }\n        </Button>\n      </div>\n    )\n  }\n};\n<Demo />",settings:{},evalInContext:r},{type:"markdown",content:"##### **upload**\n\n| 参数              | 说明                                                                                                                        | 类型                       | 默认值    |\n| --------------- | ------------------------------------------------------------------------------------------------------------------------- | ------------------------ | ------ |\n| name            | 可选参数, 上传的文件                                                                                                               | String                   | file   |\n| defaultFileList | 可选参数，默认已经上传的文件列表                                                                                                          | Array[Object]            | 无      |\n| fileList        | 可选参数，已经上传的文件列表                                                                                                            | Array[Object]            | 无      |\n| action          | 必选参数, 上传的地址                                                                                                               | String                   | 无      |\n| data            | 可选参数, 上传所需参数或返回上传参数的方法                                                                                                    | Object or function(file) | 无      |\n| headers         | 可选参数, 设置上传的请求头部，IE10 以上有效                                                                                                 | Object                   | 无      |\n| showUploadList  | 可选参数, 是否展示 uploadList, 默认开启                                                                                               | Boolean                  | true   |\n| multiple        | 可选参数, 是否支持多选文件，`ie10+` 支持。开启后按住 ctrl 可选择多个文件。                                                                             | Boolean                  | false  |\n| accept          | 可选参数, 接受上传的文件类型, 详见 [input accept Attribute](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/input#attr-accept) | String                   | 无      |\n| beforeUpload    | 可选参数, 上传文件之前的钩子，参数为上传的文件，若返回 `false` 或者 Promise 则停止上传。**注意：该方法不支持老 IE**。                                                  | Function                 | 无      |\n| onChange        | 可选参数, 上传文件改变时的状态，详见 onChange                                                                                              | Function                 | 无      |\n| listType        | 上传列表的内建样式，支持3种基本样式 `text` / `picture`/`picture-card`                                                                      | String                   | 'text' |\n| onPreview       | 点击文件链接时的回调                                                                                                                | Function(file)           | 无      |\n| onRemove        | 点击移除文件时的回调                                                                                                                | Function(file)           | 无      |\n| disabled        | 是否禁用                                                                                                                      | Boolean                  | false  |\n\n##### **onChange**\n\n上传中、完成、失败都会调用这个函数。\n\n文件状态改变的回调，返回为：\n\n```html\n{\n  file: { /* ... */ },\n  fileList: [ /* ... */ ],\n  event: { /* ... */ },\n}\n```\n\n1.  `file` 当前操作的文件对象。\n\n    ```html\n    {\n       uid: 'uid',      // 文件唯一标识，建议设置为负数，防止和内部产生的 id 冲突\n       name: 'xx.png'   // 文件名\n       status: 'done',  // 状态有：uploading done error removed\n       response: '{\"status\": \"success\"}',  // 服务端响应内容\n    }\n    ```\n\n2.  `fileList` 当前的文件列表。\n\n3.  `event` 上传中的服务端响应内容，包含了上传进度等信息，高级浏览器支持。\n\n##### **显示下载链接**\n\n请使用 fileList 属性设置数组项的 url 属性进行展示控制。\n\n##### **IE note**\n\n-   <https://github.com/react-component/upload#ie89-note>"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport UploadView from '../prevPage/upload';\n<div>\n   <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <UploadView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t){},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Transfer"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"穿梭框"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Avatar"},u.default.createElement("span",null,"头像"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Avatar",examples:n(1861)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/avatar":n(1862),react:n(1),"./avatar.jsx":n(266)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Avatar$0 = require('./avatar.jsx');\nconst Avatar = Avatar$0['Avatar'] || (Avatar$0.default || Avatar$0);",o);e.exports=[{type:"markdown",content:"用来代表用户，支持图片、图标或字符展示。\n\n##### **基本用法**\n\n通过设置size的值为large,small来控制avatar大小不设置默认为正常大小"},{type:"code",content:"import {Avatar} from 'dbox-ui';\n<div>\n  <div>\n    <Avatar style={{ marginRight: 47 }} size='large' icon='user' />\n    <Avatar style={{ marginRight: 47 }} icon='user' />\n    <Avatar style={{ marginRight: 47 }} size='small' icon='user' />\n  </div>\n  <br />\n  <div>\n    <Avatar style={{ marginRight: 47 }} shape='square' size='large' icon='user' />\n    <Avatar style={{ marginRight: 47 }} shape='square' icon='user' />\n    <Avatar style={{ marginRight: 47 }} shape='square' size='small' icon='user' />\n  </div>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **基本类型**\n\n可在avatar内设置文字，图片或者背景颜色"},{type:"code",content:"import {Avatar} from 'dbox-ui';\n<div>\n  <Avatar style={{ marginRight: 47 }} icon='user' />\n  <Avatar style={{ marginRight: 47 }}>USER</Avatar>\n  <Avatar style={{ marginRight: 47 }} src='https://images.pexels.com/users/avatars/26735/lisa-fotios-223.jpeg?w=60&h=60&fit=crop&crop=faces' alt='DBox' />\n  <Avatar style={{ backgroundColor: '#13B886', marginRight: 47 }} icon='user' />\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **带徽标的头像**\n\n用badge包裹avatar，常用来展示用户的消息数量"},{type:"code",content:"import {Avatar, Badge} from 'dbox-ui';\n<div>\n  <span style={{ marginRight: 47 }}>\n    <Badge count={2}><Avatar shape='square' icon='user' /></Badge>\n  </span>\n  <span>\n    <Badge dot><Avatar shape='square' icon='user' /></Badge>\n  </span>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **自动调整字符大小**\n\n固定avatar大小，自动调整avatar内容文字大小"},{type:"code",content:"import {Avatar} from 'dbox-ui';\n<div>\n  <Avatar style={{ marginRight: 47 }}>DBox</Avatar>\n  <Avatar style={{ marginRight: 47 }}>Alvin</Avatar>\n  <Avatar style={{ marginRight: 47 }}>react</Avatar>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **按钮调整字符大小**\n\n通过按钮控制avatar内容文字大小或者用来切换用户"},{type:"code",content:"import {Avatar, Button} from 'dbox-ui';\nconst UserList = ['Z', 'Alvin', 'Idoll', 'DBox'];\nclass AvatarView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      user: UserList[0]\n    }\n    this.changeUser = this.changeUser.bind(this)\n  };\n  changeUser () {\n    const index = UserList.indexOf(this.state.user);\n    this.setState({\n      user: index < UserList.length - 1 ? UserList[index + 1] : UserList[0]\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Avatar style={{ verticalAlign: 'middle' }}>\n          {this.state.user}\n        </Avatar>\n        <Button type='primary' style={{ marginLeft: 16, verticalAlign: 'middle' }} onClick={this.changeUser}>\n        Change\n        </Button>\n      </div>\n    )\n  }\n}\n<AvatarView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **Avatar**\n\n| 参数    | 说明                     | 类型                                | 默认值       |\n| ----- | ---------------------- | --------------------------------- | --------- |\n| icon  | 设置头像的图标类型，参考 `Icon` 组件 | string                            | -         |\n| shape | 指定头像的形状                | string                            | `circle`  |\n| size  | 设置头像的大小                | sring('large', 'default','small') | `default` |\n| src   | 图片类头像的资源地址             | string                            | -         |\n| alt   | 图片无法显示时的替代文本           | string                            | -         |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport AvatarView from '../prevPage/avatar';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <AvatarView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataEntry/Upload"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"上传"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Badge"},u.default.createElement("span",null,"徽标数"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Badge",examples:n(1864)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/badge":n(1865),react:n(1),"./index.jsx":n(268)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Badge$0 = require('./index.jsx');\nconst Badge = Badge$0['Badge'] || (Badge$0.default || Badge$0);",o);e.exports=[{type:"markdown",content:"一般出现在通知图标或头像的右上角，用于显示需要处理的消息条数，通过醒目视觉形式吸引用户处理数据。\n\n##### **基本徽标展示**\n\n通常配合avatar展示需要用户处理的数据量"},{type:"code",content:"import {Badge} from 'dbox-ui';\nconst content = {\n  width: 64,\n  height: 64,\n  borderRadius: 3,\n  background: '#E2E2E2',\n  display: 'inline-block',\n};\n<Badge count={5}>\n  <a href=\"javascript:;\" style={content}></a>\n</Badge>",settings:{},evalInContext:r},{type:"markdown",content:"##### **独立使用**\n\n将用户需要处理的数量单独抽离出来"},{type:"code",content:"import {Badge} from 'dbox-ui';\nconst content = {\n  width: 64,\n  height: 64,\n  borderRadius: 3,\n  background: '#E2E2E2',\n  display: 'inline-block',\n};\n<div>\n  <Badge count={55} style={{marginRight: 60}} />\n  <Badge count={8} style={{ marginRight: 60, backgroundColor: '#13B886' }} />\n  <Badge count={999} style={{ marginRight: 60, backgroundColor: '#87d068' }} />\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **封顶数字**\n\n通过设置overflowCount来控制最大的消息数量值"},{type:"code",content:"import {Badge} from 'dbox-ui';\nconst content = {\n  width: 64,\n  height: 64,\n  borderRadius: 3,\n  background: '#E2E2E2',\n  display: 'inline-block',\n};\n<div>\n  <Badge count={9} overflowCount='10'>\n    <a href='javascript:;' style={content} />\n  </Badge>\n  <div style={{display: 'inline-block', margin: '0 60px 0 60px'}}>\n    <Badge count={200} style={{marginRight: 60}}>\n      <a href='javascript:;' style={content} />\n    </Badge>\n  </div>\n  <Badge count={1000} overflowCount='999'>\n    <a href='javascript:;' style={content} />\n  </Badge>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **讨嫌的小红点**\n\n通过dot设置不显示待处理的消息数量"},{type:"code",content:"import {Badge, Icon} from 'dbox-ui';\n<div>\n  <Badge>\n    <Icon type='phone' style={{marginRight: 60}} />\n  </Badge>\n  <Badge dot status='error'>\n    <Icon type='phone' />\n  </Badge>\n  <Badge dot status='processing'>\n    <a href='javascript:;' style={{marginLeft: 60}} target='_blank'>一些通知</a>\n  </Badge>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **a标签包裹可点击**\n\n通过a链接包裹badge来控制点击跳转"},{type:"code",content:"import {Badge} from 'dbox-ui';\n<a href='javascript:;'>\n  <Badge count={8}>\n    <span className='example' />\n  </Badge>\n</a>",settings:{},evalInContext:r},{type:"markdown",content:"##### **用于表示状态的小圆点**\n\n用dot控制消息的状态"},{type:"code",content:"import {Badge} from 'dbox-ui';\n<div>\n  <div style={{ marginLeft: '10px' }}>\n    <Badge dot status='success' />\n    <Badge dot status='error' style={{ marginLeft: '20px' }} />\n    <Badge dot status='default' style={{ marginLeft: '40px' }} />\n    <Badge dot status='processing' style={{ marginLeft: '60px' }} />\n    <Badge dot status='warning' style={{ marginLeft: '80px' }} />\n  </div>\n  <div style={{ marginLeft: '10px' }}>\n    <Badge dot status='success' text='成功' /><br />\n    <Badge dot status='error' text='错误' /><br />\n    <Badge dot status='default' text='默认' /><br />\n    <Badge dot status='processing' text='进行中' /><br />\n    <Badge dot status='warning' text='警告' /><br />\n  </div>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **动态变化**\n\n通过引入按钮或者开关控制消息的数量或者是否展示"},{type:"code",content:"import {Badge, Button, Switch, Icon} from 'dbox-ui';\nconst ButtonGroup = Button.Group;\nconst content = {\n  width: 64,\n  height: 64,\n  borderRadius: 3,\n  background: '#E2E2E2',\n  display: 'inline-block',\n};\nclass BadgeView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    show: true,\n    count: 5,\n    }\n    this.decline = this.decline.bind(this);\n    this.increase = this.increase.bind(this);\n    this.onChange = this.onChange.bind(this);\n  };\n  decline () {\n    const count =this.state.count - 1;\n    if (count < 0) {\n      this.setState({ count: 0 })\n    } else {\n      this.setState({count})\n    }\n  };\n  increase () {\n    const count = this.state.count + 1;\n    this.setState({count})\n  };\n  onChange (show) {\n    this.setState({show})\n  };\n  render() {\n    return (\n      <div>\n        <div style={{ marginBottom: 10 }}>\n          <Badge count={this.state.count}>\n            <a href='javascript:;' style={content} />\n          </Badge>\n          <ButtonGroup style={{marginLeft: 60}}>\n            <Button onClick={this.decline}>\n            <Icon type='remove' />\n            </Button>\n            <Button onClick={this.increase}>\n              <Icon type='plus' />\n            </Button>\n          </ButtonGroup>\n        </div>\n        <br />\n        <div>\n          <Badge dot={this.state.show}>\n            <a href='javascript:;' style={content} />\n          </Badge>\n          <Switch style={{marginLeft: 60}} checked={this.state.show} onChange={this.onChange} />\n        </div>\n      </div>\n    )\n  }\n}\n<BadgeView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **Badge**\n\n| 参数            | 说明                                | 类型                                                         | 默认值   |\n| ------------- | --------------------------------- | ---------------------------------------------------------- | ----- |\n| overflowCount | 展示封顶的数字值                          | Number/String                                              | 99    |\n| showZero      | 当数值为0时，是否展示Badge                  | boolean                                                    | false |\n| count         | 展示的数值和dot同时设置时无效                  | Number                                                     | -     |\n| dot           | 不展示数字，只有一个小红点                     | boolean                                                    | false |\n| status        | 和dot搭配使用，在设置dot的前提下有效，设置Badge的状态点 | string(`success`,`processing`,`default`,`error`,`warning`) | ''    |\n| offset        | 设置状态点的位置偏移，格式为 [x, y]             | `[number, number]`                                         | -     |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport BadgeView from '../prevPage/badge';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <BadgeView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Avatar"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"头像"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Calendar"},u.default.createElement("span",null,"日历"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Calendar",examples:n(1867)}},function(e,t,n){var a={"dbox-ui":n(21),moment:n(12),"../prevPage/calendar":n(1868),react:n(1),"./index.jsx":n(270)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Calendar$0 = require('./index.jsx');\nconst Calendar = Calendar$0['Calendar'] || (Calendar$0.default || Calendar$0);",o);e.exports=[{type:"markdown",content:"当您需要选择时间，包括年、月、日的时候。\n\n##### **基本用法**"},{type:"code",content:"import { Calendar } from 'dbox-ui';\nimport moment from 'moment';\n\n<div style={{ width: 300, border: '1px solid rgba(226,226,226,1)', borderRadius: 4 }}>\n  <Calendar validRange={[moment('2018-01'), moment('2028-12')]} />\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **带有背景色头部选择**"},{type:"code",content:"import { Calendar } from 'dbox-ui';\nimport moment from 'moment';\n\ndisabledDate = (current) => {\n  // Can not select days before today and today\n  return current && current < moment().endOf('day');\n}\n\nonPanelChange = (value, mode) => {\n  console.log('onPanelChange', moment(value).format('YYYY-MM-DD'));\n}\n\nonSelect = (date) => {\n  console.log('onSelect', moment(date).format('YYYY-MM-DD'));\n}\n\nonChange = (date) => {\n  console.log('onChange', moment(date).format('YYYY-MM-DD'));\n}\n<div style={{ width: 300, border: '1px solid rgba(226,226,226,1)', borderRadius: 4 }}>\n  <Calendar\n    mold='backdrop'\n    disabledDate={this.disabledDate}\n    onPanelChange={this.onPanelChange}\n    onChange={this.onChange} />\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **API**\n\n| 参数            | 说明                            | 类型                                   | 默认值  |\n| ------------- | ----------------------------- | ------------------------------------ | ---- |\n| mold          | 不同选择时间的方式('backdrop')         | string                               | 无    |\n| value         | 展示日期(不支持mold='backdrop')      | moment                               | 当前日期 |\n| defaultValue  | 默认展示的日期                       | moment                               | 默认日期 |\n| disabledDate  | 不可选择的日期                       | (currentDate: moment) => boolean     | 无    |\n| onPanelChange | 日期面板变化回调                      | function(date: moment, mode: string) | 无    |\n| onChange      | 日期变化回调                        | function(date: moment)               | 无    |\n| onSelect      | 点击选择日期回调(不支持mold='backdrop')  | function(date: moment)               | 无    |\n| validRange    | 设置可以显示的日期(不支持mold='backdrop') | [moment, moment]                     | 无    |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport CalendarView from '../prevPage/calendar';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <CalendarView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Badge"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"徽标数"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Collapse"},u.default.createElement("span",null,"折叠面板"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Collapse",examples:n(1870)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/collapse":n(1871),react:n(1),"./index.jsx":n(525)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Collapse$0 = require('./index.jsx');\nconst Collapse = Collapse$0['Collapse'] || (Collapse$0.default || Collapse$0);",o);e.exports=[{type:"markdown",content:"对复杂区域进行分组和隐藏，保持页面的整洁性。\n\n##### **折叠面板**\n\n同时折叠或展开多个面板，通过defaultActiveKey设置默认展开项"},{type:"code",content:"import {Collapse} from 'dbox-ui';\nconst Panel = Collapse.Panel;\nconst text1 = `可以同时展开多个面板，这个例子默认展开了第一个。`\nfunction callback(key) {\n  console.log(key);\n}\n<Collapse defaultActiveKey={['1']} onChange={callback}>\n  <Panel header='标题一' key='1' >\n    <p>{text1}</p>\n  </Panel>\n  <Panel header='标题二' key='2'>\n    <p>{text1}</p>\n  </Panel>\n  <Panel header='标题三' key='3' disabled>\n    <p>{text1}</p>\n  </Panel>\n</Collapse>",settings:{},evalInContext:r},{type:"markdown",content:"##### **手风琴**\n\n特殊的折叠面板，只允许单个内容区域展开，通过添加accordion属性"},{type:"code",content:"import {Collapse} from 'dbox-ui';\nconst Panel = Collapse.Panel;\nconst text2 = `同时只能展开一个面板，这个例子默认展开了第二个。`\nfunction callback(key) {\n  console.log(key);\n}\n<Collapse accordion defaultActiveKey={['2']} onChange={callback}>\n  <Panel header='标题一' key='1' >\n    <p>{text2}</p>\n  </Panel>\n  <Panel header='标题二' key='2'>\n    <p>{text2}</p>\n  </Panel>\n  <Panel header='标题三' key='3'>\n    <p>{text2}</p>\n  </Panel>\n</Collapse>",settings:{},evalInContext:r},{type:"markdown",content:"##### **嵌套面板**\n\n对复杂层级面板进行嵌套"},{type:"code",content:"import {Collapse} from 'dbox-ui';\nconst Panel = Collapse.Panel;\nconst text5 = `这里是嵌套折叠面板。`\nfunction callback(key) {\n  console.log(key);\n}\n<Collapse defaultActiveKey={['3']} onChange={callback}>\n  <Panel header='标题一' key='1' >\n    <Collapse accordion>\n      <Panel header='次标题一' key='2' >\n        <p>{text5}</p>\n      </Panel>\n      <Panel header='次标题二' key='22' >\n        <p>{text5}</p>\n      </Panel>\n    </Collapse>\n  </Panel>\n  <Panel header='标题二' key='3'>\n    <Collapse accordion defaultActiveKey={['4']}>\n      <Panel header='次标题一' key='4' >\n        <p>{text5}</p>\n      </Panel>\n    </Collapse>\n  </Panel>\n  <Panel header='标题三' key='5'>\n    <Collapse accordion>\n      <Panel header='次标题一' key='6' >\n        <p>{text5}</p>\n      </Panel>\n    </Collapse>\n  </Panel>\n</Collapse>",settings:{},evalInContext:r},{type:"markdown",content:"##### **简洁风格**\n\n一套没有过多样式的折叠面板可通过设置bordered={false}属性值来去掉多余边框"},{type:"code",content:"import {Collapse} from 'dbox-ui';\nconst Panel = Collapse.Panel;\nconst text3 = `一套没有边框的简洁样式。`\nfunction callback(key) {\n  console.log(key);\n}\n<Collapse defaultActiveKey={['2']} bordered={false} onChange={callback}>\n  <Panel header='标题一' key='1'>\n    {text3}\n  </Panel>\n  <Panel header='标题二' key='2'>\n    {text3}\n  </Panel>\n  <Panel header='标题三' key='3'>\n    {text3}\n  </Panel>\n</Collapse>",settings:{},evalInContext:r},{type:"markdown",content:"##### **底纹样式**\n\n为面板内容区域增加底纹区分层次"},{type:"code",content:"import {Collapse} from 'dbox-ui';\nconst Panel = Collapse.Panel;\nconst text4 = `一套拥有底纹的折叠样式。`\nfunction callback(key) {\n  console.log(key);\n}\n<Collapse bgColor onChange={callback}>\n  <Panel header='标题一' key='1'>\n    <p>{text4}</p>\n  </Panel>\n  <Panel header='标题二' key='2'>\n    <p>{text4}</p>\n  </Panel>\n  <Panel header='标题三' key='3'>\n    <p>{text4}</p>\n  </Panel>\n</Collapse>",settings:{},evalInContext:r},{type:"markdown",content:"##### **Collapse**\n\n| 参数               | 说明            | 类型                | 默认值                     |\n| ---------------- | ------------- | ----------------- | ----------------------- |\n| activeKey        | 当前激活tab面板的key | string/\\[]/string | 默认无，accordion模式下默认第一个元素 |\n| accordion        | 切换手风琴模式       | bool              | false                   |\n| bgColor          | 切换底纹样式        | bool              | false                   |\n| bordered         | 切换无边框样式       | bool              | true                    |\n| defaultActiveKey | 初始化选中面板的key   | string            | 无                       |\n| onChange         | 切换面板的回调       | Function          | 无                       |\n\n##### **Collapse.Panel**\n\n| 参数          | 说明                    | 类型               | 默认值   |\n| ----------- | --------------------- | ---------------- | ----- |\n| disabled    | 禁用后的面板展开与否将无法通过用户交互改变 | boolean          | false |\n| header      | 面板头内容                 | string/ReactNode | 无     |\n| forceRender | 被隐藏时是否渲染DOM结构         | bool             | false |\n| key         | 对应activeKey           | string           | 无     |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport CollapseView from '../prevPage/collapse';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <CollapseView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Calendar"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"日历"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Popover"},u.default.createElement("span",null,"气泡卡片"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Empty",examples:n(1873)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/empty":n(1874),react:n(1),"./index.jsx":n(189)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Empty$0 = require('./index.jsx');\nconst Empty = Empty$0['Empty'] || (Empty$0.default || Empty$0);",o);e.exports=[{type:"markdown",content:"空状态时的展示占位图。\n\n##### **简单展示**"},{type:"code",content:"import {Empty} from 'dbox-ui';\n\n<Empty />",settings:{},evalInContext:r},{type:"markdown",content:"##### **自定义**\n\n自定义图片链接、图片大小、描述、附属内容"},{type:"code",content:"import {Empty, Button} from 'dbox-ui';\n<Empty\n            image='https://gw.alipayobjects.com/mdn/miniapp_social/afts/img/A*pevERLJC9v0AAAAAAAAAAABjAQAAAQ/original'\n            imageStyle={{\n              height: 60,\n            }}\n            description={\n              <span>\n                自定义 <a href='#API'>描述</a>\n              </span>\n            }\n          >\n            <Button type='primary'>创建</Button>\n          </Empty>",settings:{},evalInContext:r},{type:"markdown",content:"##### **全局化配置**\n\n自定义全局组件的 Empty 样式"},{type:"code",content:"import {ConfigProvider, Switch, Divider, Icon,\n    TreeSelect, Select} from 'dbox-ui';\nconst style = { width: 200 };\n\nfunction customizeRenderEmpty () {\nreturn (\n    <div style={{ textAlign: 'center' }}>\n        <Icon type='smile' style={{ fontSize: 20 }} />\n        <p>暂无数据</p>\n    </div>\n)\n};\n\nclass GlobalConfig extends React.Component {\n    \n      constructor(props) {\n        super(props);\n        this.state = {\n        customize: false,\n      };\n      }\n      render() {\n        const { customize } = this.state;\n          return (\n            <div>\n              <Switch\n                unCheckedChildren='default'\n                checkedChildren='customize'\n                checked={customize}\n                onChange={(val) => {\n            this.setState({ customize: val });\n          }}\n        />\n              <Divider />\n              <ConfigProvider renderEmpty={customize && customizeRenderEmpty}>\n                <div className='config-provider'>\n                  <h3>Select</h3>\n                  <Select style={style} />\n                  <h3>TreeSelect</h3>\n                  <TreeSelect style={style} treeData={[]} />\n                </div>\n              </ConfigProvider>\n            </div>\n          )\n      }\n  }\n\n<GlobalConfig/>",settings:{},evalInContext:r},{type:"markdown",content:"##### **API**"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport EmptyView from '../prevPage/empty';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <EmptyView />\n</div>",settings:{},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Collapse"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"折叠面板"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Popover"},u.default.createElement("span",null,"气泡卡片"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Popover",examples:n(1876)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/popover":n(1877),react:n(1),"./index.jsx":n(670)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Popover$0 = require('./index.jsx');\nconst Popover = Popover$0['Popover'] || (Popover$0.default || Popover$0);",o);e.exports=[{type:"markdown",content:"当目标元素有进一步的描述和相关操作时，可以收纳到卡片中，根据用户的操作行为进行展现；可以承载更复杂的内容，比如链接或按钮等\n\n##### **基本用法**\n\n基本内容展示，通常用于操作的再次确认"},{type:"code",content:"import {Popover, Button} from 'dbox-ui';\nconst content = (\n  <div>\n    <p>这是是内容文本内容文本</p>\n  </div>\n);\n<Popover content={content} title='标题' trigger='hover'>\n  <Button>鼠标移入</Button>\n</Popover>",settings:{},evalInContext:r},{type:"markdown",content:"##### **三种触发方式**\n\n通过设置trigger为hover,focus,click来控制触发的方式"},{type:"code",content:"import {Popover, Button} from 'dbox-ui';\nconst content = (\n  <div>\n    <p>这是是内容文本内容文本</p>\n  </div>\n);\n<div className='arrow'>\n  <Popover content={content} title='标题' trigger='hover'>\n    <Button>鼠标移入</Button>\n  </Popover>\n  <Popover content={content} title='标题' trigger='focus'>\n    <Button  style={{marginLeft: 25, marginRight: 25}}>鼠标聚焦</Button>\n  </Popover>\n  <Popover content={content} title='标题' trigger='click'>\n    <Button>单击鼠标</Button>\n  </Popover>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **12个方向**\n\n通过设置placement来设置气泡卡片的显示位置"},{type:"code",content:"import {Popover, Button} from 'dbox-ui';\nconst content = (\n  <div>\n    <p>这是是内容文本内容文本</p>\n  </div>\n);\nconst buttonWidth = 70;\nconst text = <span>标题</span>;\n<div className='placement'>\n  <div style={{ marginLeft: buttonWidth, whiteSpace: 'nowrap' }}>\n    <Popover placement='topLeft' title={text} content={content} trigger='click'>\n      <Button> T L </Button>\n    </Popover>\n    <Popover placement='top' title={text} content={content} trigger='click'>\n      <Button style={{marginLeft: 25, marginRight: 25}}>Top</Button>\n    </Popover>\n    <Popover placement='topRight' title={text} content={content} trigger='click'>\n      <Button>T R</Button>\n    </Popover>\n  </div>\n  <div style={{ width: buttonWidth, float: 'left' }}>\n    <Popover placement='leftTop' title={text} content={content} trigger='click'>\n      <Button>L  T</Button>\n    </Popover>\n    <Popover placement='left' title={text} content={content} trigger='click'>\n      <Button style={{ marginTop: '10px', marginBottom: '10px' }}>Left</Button>\n    </Popover>\n    <Popover placement='leftBottom' title={text} content={content} trigger='click'>\n      <Button>L  B</Button>\n    </Popover>\n  </div>\n  <div style={{ width: buttonWidth, marginLeft: (buttonWidth * 4) + 24 }}>\n    <Popover placement='rightTop' title={text} content={content} trigger='click'>\n      <Button>R T</Button>\n    </Popover>\n    <Popover placement='right' title={text} content={content} trigger='click'>\n      <Button style={{ marginTop: '10px', marginBottom: '10px' }}>Right</Button>\n    </Popover>\n    <Popover placement='rightBottom' title={text} content={content} trigger='click'>\n      <Button>R B</Button>\n    </Popover>\n  </div>\n  <div style={{ marginLeft: buttonWidth, clear: 'both', whiteSpace: 'nowrap' }}>\n    <Popover placement='bottomLeft' title={text} content={content} trigger='click'>\n      <Button>B L</Button>\n    </Popover>\n    <Popover placement='bottom' title={text} content={content} trigger='click'>\n      <Button style={{marginLeft: 15, marginRight: 15}}>Bottom</Button>\n    </Popover>\n    <Popover placement='bottomRight' title={text} content={content} trigger='click'>\n      <Button> B R </Button>\n    </Popover>\n  </div>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **箭头指向**\n\n通过arrowPointAtCenter控制箭头指向中心，默认指向left"},{type:"code",content:"import {Popover, Button} from 'dbox-ui';\nconst content = (\n  <div>\n    <p>这是是内容文本内容文本</p>\n  </div>\n);\nconst text = <span>标题</span>;\n<div className='arrow'>\n  <Popover placement='topLeft' title={text} content={content}>\n    <Button>边缘对齐</Button>\n  </Popover>\n  <Popover placement='topLeft' title={text} content={content} arrowPointAtCenter>\n    <Button style={{marginLeft: 25}}>箭头指向中心</Button>\n  </Popover>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **从浮层内关闭**\n\n可从弹出层内关闭弹出层"},{type:"code",content:"import {Popover, Button} from 'dbox-ui';\n\nclass PopoverView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    }\n    this.hide = this.hide.bind(this);\n    this.handleVisibleChange = this.handleVisibleChange.bind(this);\n  };\n  hide () {\n    this.setState({\n      visible: false\n    })\n  };\n  handleVisibleChange (visible) {\n    this.setState({ visible });\n  };\n  render() {\n    return (\n      <Popover\n        content={<a onClick={this.hide}>关闭</a>}\n        title='标题'\n        trigger='click'\n        visible={this.state.visible}\n        onVisibleChange={this.handleVisibleChange}>\n        <Button>单击鼠标</Button>\n      </Popover>\n    )\n  }\n}\n<PopoverView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **悬停点击弹出层**\n\n设置悬浮和点击不同触发内容"},{type:"code",content:"import {Popover, Button} from 'dbox-ui';\nconst clickContent = (\n  <div>\n    这是点击内容\n  </div>\n);\nconst hoverContent = (\n  <div>\n    这是悬停内容\n  </div>\n);\nclass PopoverView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\t\tvisible: false\n    }\n    this.hide = this.hide.bind(this);\n    this.hidele = this.hidele.bind(this);\n    this.handleHoveredChange = this.handleHoveredChange.bind(this);\n    this.handleClickChange = this.handleClickChange.bind(this);\n  };\n  hide () {\n    this.setState({\n      visible: false,\n      hovered: false,\n      clicked: false\n    });\n  };\n  hidele () {\n    this.setState({\n      clicked: false,\n      hovered: false\n    });\n  };\n  handleHoveredChange (visible) {\n    this.setState({ clicked: false, hovered: visible });\n  };\n  handleClickChange (visible) {\n    this.setState({ clicked: visible, hovered: false });\n  };\n  render() {\n    return (\n      <Popover\n        trigger='hover'\n        title='悬停标题'\n        content={hoverContent}\n        visible={this.state.hovered}\n        onVisibleChange={this.handleHoveredChange}>\n        <Popover\n          content={(\n            <div>\n              {clickContent}\n              <a onClick={this.hidele}>关闭</a>\n            </div>\n          )}\n          title='点击标题'\n          trigger='click'\n          visible={this.state.clicked}\n          onVisibleChange={this.handleClickChange}>\n          <Button>悬停并点击</Button>\n        </Popover>\n      </Popover>\n    )\n  }\n}\n<PopoverView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **Popover**\n\n| 参数               | 说明   | 类型                | 默认值 |\n| ---------------- | ---- | ----------------- | --- |\n| content          | 卡片内容 | string\\\\ReactNode | 无   |\n| overlayClassName | 卡片类名 | string            | 无   |\n\n更多属性请参考 [Tooltip]\n\n##### **Action**\n\n请确保 `Popover` 的子元素能接受 `onMouseEnter`、`onMouseLeave`、`onFocus`、`onClick` 事件。"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport PopoverView from '../prevPage/popover';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <PopoverView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Empty"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"空状态"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Tree"},u.default.createElement("span",null,"树形控件"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Tree",examples:n(1879)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/tree":n(1880),react:n(1),"./index.jsx":n(680)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Tree$0 = require('./index.jsx');\nconst Tree = Tree$0['Tree'] || (Tree$0.default || Tree$0);",o);e.exports=[{type:"markdown",content:"可使用树组件用于表示层级关系的结构，具有收起展开等交互效果。\n\n##### **基本使用**\n\n可选中，默认展开等功能。"},{type:"code",content:"import { Tree } from 'dbox-ui';\nconst TreeNode = Tree.TreeNode;\nonSelect = (selectedKeys, info) => {\n\tconsole.log('selected', selectedKeys, info);\n}\nonCheck = (checkedKeys, info) => {\n  console.log('onCheck', checkedKeys, info);\n}\n<Tree\n  defaultExpandedKeys={['0-0-0-0-0', '0-0-1']}\n  defaultSelectedKeys={['0-0-0-0-1']}\n  onSelect={this.onSelect}\n  onCheck={this.onCheck}\n        >\n  <TreeNode title='上海分公司' key='0-0'>\n    <TreeNode title='开发部' key='0-0-0'>\n      <TreeNode title='测试一部' key='0-0-0-0'>\n        <TreeNode title='选项' key='0-0-0-0-0' />\n        <TreeNode title='选项' key='0-0-0-0-1' />\n      </TreeNode>\n      <TreeNode title='测试二部' key='0-0-0-1' />\n    </TreeNode>\n    <TreeNode title='产品规划部' key='0-0-1'>\n      <TreeNode title={<span>sss</span>} key='0-0-1-0' />\n    </TreeNode>\n    <TreeNode title='财务部' key='0-0-2'>\n      <TreeNode title={<span>sss</span>} key='0-0-2-0' />\n    </TreeNode>\n  </TreeNode>\n\n  <TreeNode title='深圳分公司' key='0-1'>\n    </TreeNode>\n</Tree>",settings:{},evalInContext:r},{type:"markdown",content:"##### **多选树**\n\n可通过设置`checkable`为多选框可选择，设置`disabled`和`disableCheckbox`可分别禁用整个节点和选择框。"},{type:"code",content:"import { Tree } from 'dbox-ui';\nconst TreeNode = Tree.TreeNode;\nonSelect = (selectedKeys, info) => {\n\tconsole.log('selected', selectedKeys, info);\n}\nonCheck = (checkedKeys, info) => {\n  console.log('onCheck', checkedKeys, info);\n}\n<Tree\n  checkable\n  defaultExpandedKeys={['0-0-0-0-0', '0-0-1']}\n  defaultCheckedKeys={['0-0-0', '0-0-1']}\n  onSelect={this.onSelect}\n  onCheck={this.onCheck}\n        >\n  <TreeNode title='上海分公司' key='0-0'>\n    <TreeNode title='开发部' key='0-0-0'>\n      <TreeNode title='测试一部' key='0-0-0-0'>\n        <TreeNode title='选项' key='0-0-0-0-0' />\n        <TreeNode title='选项' key='0-0-0-0-1' />\n      </TreeNode>\n      <TreeNode title='测试二部' key='0-0-0-1' />\n    </TreeNode>\n    <TreeNode title='产品规划部' key='0-0-1'>\n      <TreeNode title={'规划一部'} key='0-0-1-0' />\n    </TreeNode>\n    <TreeNode title='财务部' key='0-0-2'>\n      <TreeNode title={'财务办公室'} key='0-0-1-1' disableCheckbox/>\n    </TreeNode>\n  </TreeNode>\n\n  <TreeNode title='深圳分公司' key='0-1' disabled>\n  </TreeNode>\n</Tree>",settings:{},evalInContext:r},{type:"markdown",content:"##### **可拖动**\n\n可通过设置`draggable`属性为可拖动。"},{type:"code",content:"import { Tree } from 'dbox-ui';\nconst TreeNode = Tree.TreeNode;\n\nconst gData = [{\n      title: '上海',\n      key: '0-0',\n      children: [{\n        title: '静安区',\n        key: '0-0-0',\n        children: [\n          { title: '延长路', key: '0-0-0-0' },\n          { title: '共和新路', key: '0-0-0-1' },\n          { title: '汉中路', key: '0-0-0-2' },\n        ],\n      }, {\n        title: '浦东新区',\n        key: '0-0-1',\n        children: [\n          { title: '龙阳路', key: '0-0-1-0' },\n          { title: '金科路', key: '0-0-1-1' },\n          { title: '张江高科', key: '0-0-1-2' },\n        ],\n      }, {\n        title: '闵行区',\n        key: '0-0-2',\n      }],\n    }, {\n      title: '安徽',\n      key: '0-1',\n      children: [\n        { title: '合肥', key: '0-1-0-0' },\n        { title: '宣城', key: '0-1-0-1' },\n        { title: '芜湖', key: '0-1-0-2' },\n      ],\n    }, {\n      title: '江苏',\n      key: '0-2',\n    }];\n\nclass TreeExample extends React.Component {\n   constructor(){\n    super();\n    this.state = {\n      expandedKeys: ['0-0-0', '0-0-1'],\n      gData,\n      autoExpandParent: true,\n    };\n    this.onDragStart = this.onDragStart.bind(this);\n    this.onDragEnter = this.onDragEnter.bind(this);\n    this.onDrop = this.onDrop.bind(this);\n  }\n  onDragStart(info){\n    console.log('start', info);\n  }\n  onDragEnter(info){\n    console.log('drag', info);\n    // expandedKeys 需要受控时设置\n    this.setState({\n      expandedKeys: info.expandedKeys,\n    });\n  }\n  onDrop(info){\n    console.log('drop', info);\n    const dropKey = info.node.props.eventKey;\n    const dragKey = info.dragNode.props.eventKey;\n    const dropPos = info.node.props.pos.split('-');\n    const dropPosition = info.dropPosition - Number(dropPos[dropPos.length - 1]);\n    // const dragNodesKeys = info.dragNodesKeys;\n    const loop = (data, key, callback) => {\n      data.forEach((item, index, arr) => {\n        if (item.key === key) {\n          return callback(item, index, arr);\n        }\n        if (item.children) {\n          return loop(item.children, key, callback);\n        }\n      });\n    };\n    const data = [...this.state.gData];\n    let dragObj;\n    loop(data, dragKey, (item, index, arr) => {\n      arr.splice(index, 1);\n      dragObj = item;\n    });\n    if (info.dropToGap) {\n      let ar;\n      let i;\n      loop(data, dropKey, (item, index, arr) => {\n        ar = arr;\n        i = index;\n      });\n      if (dropPosition === -1) {\n        ar.splice(i, 0, dragObj);\n      } else {\n        ar.splice(i + 1, 0, dragObj);\n      }\n    } else {\n        loop(data, dropKey, (item) => {\n          item.children = item.children || [];\n          // where to insert 示例添加到尾部，可以是随意位置\n          item.children.push(dragObj);\n        });\n    }\n    this.setState({\n      gData: data,\n    });\n  }\n  render(){\n    const loop = data => {\n      console.log('loop data');\n      console.log(data);\n      return data.map((item) => {\n        if (item.children && item.children.length) {\n          return <TreeNode key={item.key} title={item.title}>{loop(item.children)}</TreeNode>;\n        }\n        return <TreeNode key={item.key} title={item.title} />;\n      });\n    };\n\n    return (\n      <Tree\n            className='draggable-tree'\n            autoExpandParent={this.state.autoExpandParent}\n            defaultExpandedKeys={this.state.expandedKeys}\n            draggable\n            onDragStart={this.onDragStart}\n            onDragEnter={this.onDragEnter}\n            onDrop={this.onDrop}\n            >\n          {loop(this.state.gData)}\n      </Tree>\n    )\n  }\n}\n<TreeExample />",settings:{},evalInContext:r},{type:"markdown",content:"##### **点击展开节点，异步加载数据**\n\n可通过设置 `loadData` 属性异步加载数据。"},{type:"code",content:"import { Tree } from 'dbox-ui';\nconst TreeNode = Tree.TreeNode;\nclass TreeExample extends React.Component {\n   constructor(){\n    super();\n    this.state = {\n      treeData: [\n        { title: '上海', key: '0' },\n        { title: '安徽', key: '1' },\n        { title: '江苏', key: '2', isLeaf: true },\n      ]\n    };\n    this.onLoadData = this.onLoadData.bind(this);\n    this.renderTreeNodes = this.renderTreeNodes.bind(this);\n  }\n\n  onLoadData(treeNode){\n    return new Promise((resolve) => {\n      if (treeNode.props.children) {\n        resolve();\n        return;\n      }\n      setTimeout(() => {\n        treeNode.props.dataRef.children = [\n          { title: '城市1', key: `${treeNode.props.eventKey}-0` },\n          { title: '城市2', key: `${treeNode.props.eventKey}-1` },\n        ];\n        this.setState({\n          treeData: [...this.state.treeData],\n        });\n        resolve();\n      }, 1000);\n    })\n   }\n\n  renderTreeNodes(data){\n   return data.map((item) => {\n      if (item.children) {\n        return (\n          <TreeNode title={item.title} key={item.key} dataRef={item}>\n            {this.renderTreeNodes(item.children)}\n          </TreeNode>\n        );\n      }\n      return <TreeNode {...item} dataRef={item} />;\n    })\n  }\n\n  render(){\n    return(\n      <Tree loadData={this.onLoadData}>\n          {this.renderTreeNodes(this.state.treeData)}\n      </Tree>\n    )\n  }\n}\n<TreeExample />",settings:{},evalInContext:r},{type:"markdown",content:"##### **受控操作示例**\n\n展示选择树节点，展开/收起节点，选择复选框和默认展开节点等操作示例。"},{type:"code",content:"import { Tree } from 'dbox-ui';\nconst TreeNode = Tree.TreeNode;\nclass TreeExample extends React.Component {\n   constructor(){\n    super();\n    this.state = {\n      expandedKeys: ['0-0-0', '0-0-1'],\n      autoExpandParent: true,\n      checkedKeys: ['0-0-0'],\n      selectedKeys: [],\n    };\n    this.onExpand = this.onExpand.bind(this);\n    this.onCheck = this.onCheck.bind(this);\n    this.onSelect = this.onSelect.bind(this);\n  }\n\n  onExpand(expandedKeys){\n    console.log('onExpand', expandedKeys);\n    this.setState({\n      expandedKeys,\n      autoExpandParent: false,\n    });\n  }\n\n  onCheck(checkedKeys){\n    console.log('onCheck', checkedKeys);\n    this.setState({ checkedKeys });\n  }\n\n  onSelect(selectedKeys, info){\n    console.log('onSelect', info);\n    this.setState({ selectedKeys });\n  }\n\n  renderTreeNodes(data){\n    return data.map((item) => {\n      if (item.children) {\n        return (\n          <TreeNode title={item.title} key={item.key} dataRef={item}>\n            {this.renderTreeNodes(item.children)}\n          </TreeNode>\n        );\n      }\n      return <TreeNode {...item} />;\n    })\n  }\n\n\n  render(){\n    const treeData = [{\n      title: '上海',\n      key: '0-0',\n      children: [{\n        title: '静安区',\n        key: '0-0-0',\n        children: [\n          { title: '延长路', key: '0-0-0-0' },\n          { title: '共和新路', key: '0-0-0-1' },\n          { title: '汉中路', key: '0-0-0-2' },\n        ],\n      }, {\n        title: '浦东新区',\n        key: '0-0-1',\n        children: [\n          { title: '龙阳路', key: '0-0-1-0' },\n          { title: '金科路', key: '0-0-1-1' },\n          { title: '张江高科', key: '0-0-1-2' },\n        ],\n      }, {\n        title: '闵行区',\n        key: '0-0-2',\n      }],\n    }, {\n      title: '安徽',\n      key: '0-1',\n      children: [\n        { title: '合肥', key: '0-1-0-0' },\n        { title: '宣城', key: '0-1-0-1' },\n        { title: '芜湖', key: '0-1-0-2' },\n      ],\n    }, {\n      title: '江苏',\n      key: '0-2',\n    }];\n    return(\n      <Tree\n        checkable\n        onExpand={this.onExpand}\n        expandedKeys={this.state.expandedKeys}\n        autoExpandParent={this.state.autoExpandParent}\n        onCheck={this.onCheck}\n        checkedKeys={this.state.checkedKeys}\n        onSelect={this.onSelect}\n        selectedKeys={this.state.selectedKeys}\n      >\n        {this.renderTreeNodes(treeData)}\n      </Tree>\n    )\n  }\n}\n<TreeExample />",settings:{},evalInContext:r},{type:"markdown",content:"##### **Tree props**\n\n| 参数                  | 说明                                                                                                                                                  | 类型                                                                     | 默认值   |\n| ------------------- | --------------------------------------------------------------------------------------------------------------------------------------------------- | ---------------------------------------------------------------------- | ----- |\n| autoExpandParent    | 是否自动展开父节点                                                                                                                                           | boolean                                                                | true  |\n| checkable           | 节点前添加 Checkbox 复选框                                                                                                                                  | boolean                                                                | false |\n| checkedKeys         | （受控）选中复选框的树节点（注意：父子节点有关联，如果传入父节点key，则子节点自动选中；相应当子节点key都传入，父节点也自动选中。当设置`checkable`和`checkStrictly`，它是一个有`checked`和`halfChecked`属性的对象，并且父子节点的选中与否不再关联 | string\\[], {checked: string\\[], halfChecked: string\\[]}                | \\[]   |\n| checkStrictly       | checkable状态下节点选择完全受控（父子节点选中状态不再关联）                                                                                                                  | boolean                                                                | false |\n| defaultCheckedKeys  | 默认选中复选框的树节点                                                                                                                                         | string\\[]                                                              | \\[]   |\n| defaultExpandAll    | 默认展开所有树节点                                                                                                                                           | boolean                                                                | false |\n| defaultExpandedKeys | 默认展开指定的树节点                                                                                                                                          | string\\[]                                                              | \\[]   |\n| defaultSelectedKeys | 默认选中的树节点                                                                                                                                            | string\\[]                                                              | \\[]   |\n| draggable           | 设置节点可拖拽（IE>8）                                                                                                                                       | boolean                                                                | false |\n| expandedKeys        | （受控）展开指定的树节点                                                                                                                                        | string\\[]                                                              | \\[]   |\n| filterTreeNode      | 按需筛选树节点（高亮），返回true                                                                                                                                  | function(node)                                                         | -     |\n| loadData            | 异步加载数据                                                                                                                                              | function(node)                                                         | -     |\n| multiple            | 支持点选多个节点（节点本身）                                                                                                                                      | boolean                                                                | false |\n| selectedKeys        | （受控）设置选中的树节点                                                                                                                                        | string\\[]                                                              | -     |\n| showIcon            | 是否展示 TreeNode title 前的图标，没有默认样式，如设置为 true，需要自行定义图标相关样式                                                                                              | boolean                                                                | false |\n| onCheck             | 点击复选框触发                                                                                                                                             | function(checkedKeys, e:{checked: bool, checkedNodes, node, event})    | -     |\n| onDragEnd           | dragend 触发时调用                                                                                                                                       | function({event, node})                                                | -     |\n| onDragEnter         | dragenter 触发时调用                                                                                                                                     | function({event, node, expandedKeys})                                  | -     |\n| onDragLeave         | dragleave 触发时调用                                                                                                                                     | function({event, node})                                                | -     |\n| onDragOver          | dragover 触发时调用                                                                                                                                      | function({event, node})                                                | -     |\n| onDragStart         | 开始拖拽时调用                                                                                                                                             | function({event, node})                                                | -     |\n| onDrop              | drop 触发时调用                                                                                                                                          | function({event, node, dragNode, dragNodesKeys})                       | -     |\n| onExpand            | 展开/收起节点时触发                                                                                                                                          | function(expandedKeys, {expanded: bool, node})                         | -     |\n| onRightClick        | 响应右键点击                                                                                                                                              | function({event, node})                                                | -     |\n| onSelect            | 点击树节点触发                                                                                                                                             | function(selectedKeys, e:{selected: bool, selectedNodes, node, event}) | -     |\n\n#### **TreeNode props**\n\n| 参数              | 说明                                                                                                       | 类型               | 默认值        |\n| --------------- | -------------------------------------------------------------------------------------------------------- | ---------------- | ---------- |\n| disableCheckbox | 禁掉 checkbox                                                                                              | boolean          | false      |\n| disabled        | 禁掉响应                                                                                                     | boolean          | false      |\n| isLeaf          | 设置为叶子节点(设置了`loadData`时有效)                                                                                | boolean          | false      |\n| key             | 被树的 (default)ExpandedKeys / (default)CheckedKeys / (default)SelectedKeys 属性所用。注意：整个树范围内的所有节点的 key 值不能重复！ | string           | 内部计算出的节点位置 |\n| selectable      | 设置节点是否可被选中                                                                                               | boolean          | true       |\n| title           | 标题                                                                                                       | string/ReactNode | '---'      |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport TreeView from '../prevPage/tree';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <TreeView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Popover"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"气泡卡片"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Tooltip"},u.default.createElement("span",null,"文字提示"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Tooltip",examples:n(1882)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/tooltip":n(1883),react:n(1),"./index.jsx":n(76)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Tooltip$0 = require('./index.jsx');\nconst Tooltip = Tooltip$0['Tooltip'] || (Tooltip$0.default || Tooltip$0);",o);e.exports=[{type:"markdown",content:"鼠标移入则显示提示，移出消失，用于提示等场景。\n\n##### **基本用法**\n\n简单用法"},{type:"code",content:"import { Tooltip } from 'dbox-ui';\n<Tooltip title='提示文字'>\n    <span>当鼠标移入时会出现文字提示</span>\n</Tooltip>",settings:{},evalInContext:r},{type:"markdown",content:"##### **12个方向**\n\n可通过设置 `placement` 属性控制位置，有12个方向"},{type:"code",content:"import { Tooltip,Button } from 'dbox-ui';\nconst buttonWidth = 70;\nconst text = <span>提示文字</span>;\n<div>\n    <div style={{ marginLeft: buttonWidth, whiteSpace: 'nowrap' }} >\n    <Tooltip placement='topLeft' title={text}>\n        <Button>TL</Button>\n    </Tooltip>\n    <Tooltip placement='top' title={text} >\n        <Button style={{ marginLeft: '10px', marginRight: '10px' }}>Top</Button>\n    </Tooltip>\n    <Tooltip placement='topRight' title={text}>\n        <Button>TR</Button>\n    </Tooltip>\n    </div>\n    <div style={{ width: buttonWidth, float: 'left' }}>\n    <Tooltip placement='leftTop' title={text}>\n        <Button>LT</Button>\n    </Tooltip>\n    <Tooltip placement='left' title={text} >\n        <Button style={{ marginTop: '10px', marginBottom: '10px' }}>Left</Button>\n    </Tooltip>\n    <Tooltip placement='leftBottom' title={text}>\n        <Button>LB</Button>\n    </Tooltip>\n    </div>\n    <div style={{ width: buttonWidth,marginLeft: (buttonWidth * 4) + 24 }}>\n    <Tooltip placement='rightTop' title={text}>\n        <Button>RT</Button>\n    </Tooltip>\n    <Tooltip placement='right' title={text} >\n        <Button style={{ marginTop: '10px', marginBottom: '10px' }}>Right</Button>\n    </Tooltip>\n    <Tooltip placement='rightBottom' title={text}>\n        <Button>RB</Button>\n    </Tooltip>\n    </div>\n    <div style={{ marginLeft: buttonWidth, clear: 'both', whiteSpace: 'nowrap' }}>\n    <Tooltip placement='bottomLeft' title={text}>\n        <Button>BL</Button>\n    </Tooltip>\n    <Tooltip placement='bottom' title={text} >\n        <Button style={{ marginLeft: '10px', marginRight: '10px' }}>Bottom</Button>\n    </Tooltip>\n    <Tooltip placement='bottomRight' title={text}>\n        <Button>BR</Button>\n    </Tooltip>\n    </div>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **箭头指向**"},{type:"code",content:"import { Tooltip,Button } from 'dbox-ui';\nconst text = <span>提示文字</span>;\n<div className='arrow'>\n    <Tooltip placement='topLeft' title={text} >\n        <Button style={{marginRight: '10px'}}>边缘对齐</Button>\n    </Tooltip>\n    <Tooltip placement='topLeft' title={text} arrowPointAtCenter>\n        <Button>箭头指向中心 </Button>\n    </Tooltip>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **Tooltip**\n\n| 参数    | 说明   | 类型                               | 默认值 |\n| ----- | ---- | -------------------------------- | --- |\n| title | 提示文字 | string/ReactNode/() => ReactNode | 无   |\n\n##### **Tooltip、Popconfirm、Popover共同的API**\n\n| 参数                 | 说明                                                                                                                                               | 类型                    | 默认值                 |\n| ------------------ | ------------------------------------------------------------------------------------------------------------------------------------------------ | --------------------- | ------------------- |\n| arrowPointAtCenter | 箭头是否指向目标元素中心，                                                                                                                                    | boolean               | `false`             |\n| autoAdjustOverflow | 气泡被遮挡时自动调整位置                                                                                                                                     | boolean               | `true`              |\n| defaultVisible     | 默认是否显隐                                                                                                                                           | boolean               | false               |\n| getPopupContainer  | 浮层渲染父节点，默认渲染到 body 上。                                                                                                                            | Function(triggerNode) | () => document.body |\n| mouseEnterDelay    | 鼠标移入后延时多少才显示 Tooltip，单位：秒                                                                                                                        | number                | 0                   |\n| mouseLeaveDelay    | 鼠标移出后延时多少才隐藏 Tooltip，单位：秒                                                                                                                        | number                | 0.1                 |\n| overlayClassName   | 卡片类名                                                                                                                                             | string                | 无                   |\n| overlayStyle       | 卡片样式                                                                                                                                             | object                | 无                   |\n| placement          | 气泡框位置，可选 `top`、`left`、 `right`、 `bottom`、 `topLeft`、 `topRight`、 `bottomLeft`、 `bottomRight`、 `leftTop` 、`leftBottom` 、`rightTop`、 `rightBottom` | string                | top                 |\n| trigger            | 触发行为，可选 `hover/focus/click`                                                                                                                      | string                | hover               |\n| visible            | 用于手动控制浮层显隐                                                                                                                                       | boolean               | false               |\n| onVisibleChange    | 显示隐藏的回调                                                                                                                                          | (visible) => void     | 无                   |\n\n##### **注意**\n\n请确保 `Tooltip` 的子元素能接受 `onMouseEnter`、`onMouseLeave`、`onFocus`、`onClick` 事件。"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport TooltipView from '../prevPage/tooltip';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <TooltipView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Tree"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"树形控件"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Table"},u.default.createElement("span",null,"表格"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Table",examples:n(1885)}},function(e,t,n){var a={"dbox-ui":n(21),reqwest:n(813),"../prevPage/table":n(1886),react:n(1),"./index.jsx":n(677)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Table$0 = require('./index.jsx');\nconst Table = Table$0['Table'] || (Table$0.default || Table$0);",o);e.exports=[{type:"markdown",content:"当有大量结构化的数据需要展现，同时可对数据进行排序、搜索、分页、自定义操作等复杂行为时；\n\n##### **默认表格**\n\n设置columns,data来决定展示的内容"},{type:"code",content:"import {Table, Divider} from 'dbox-ui';\nconst columns = [{\n  title: '姓名',\n  dataIndex: 'name',\n  key: 'name'\n}, {\n  title: '年龄',\n  dataIndex: 'age',\n  key: 'age',\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: '所在城市',\n  dataIndex: 'address',\n  key: 'address'\n}, {\n  title: '手机号',\n  dataIndex: 'Tel',\n  key: 'Tel'\n}, {\n  title: '审核状态',\n  dataIndex: 'state',\n  key: 'state',\n}, {\n  title: '操作',\n  dataIndex: 'action',\n  key: 'action',\n  render: (text, record) => (\n    <span>\n      <a href='javascript:;'>编辑</a>\n      <Divider type='vertical' />\n      <a href='javascript:;'>删除</a>\n    </span>\n  ),\n}];\nconst data = [{\n  key: '1',\n  name: '刘乐冉',\n  age: 26,\n  address: '北京',\n  Tel: '13943250086',\n  state: '审核未通过',\n}, {\n  key: '2',\n  name: '李佳欣',\n  age: 24,\n  address: '南京',\n  Tel: '13262717838',\n  state: '审核通过',\n  }, {\n  key: '3',\n  name: '孙柔佳',\n  age: 22,\n  address: '上海',\n  Tel: '13950035537',\n  state: '审核未通过',\n}, {\n  key: '4',\n  name: '张仁士',\n  age: 28,\n  address: '合肥',\n  Tel: '13947766628',\n  state: '审核通过',\n  }, {\n  key: '5',\n  name: '王子琪',\n  age: 32,\n  address: '郑州',\n  Tel: '13964507501',\n  state: '审核未通过',\n  }, {\n  key: '6',\n  name: '陈卜宣',\n  age: 27,\n  address: '沈阳',\n  Tel: '13262836283',\n  state: '审核通过',\n  }];\n<Table columns={columns} dataSource={data} />",settings:{},evalInContext:r},{type:"markdown",content:"##### **三种尺寸**\n\n通过设置size设置为large,middle,small来控制表格的大小默认为large"},{type:"code",content:"import {Table, Divider} from 'dbox-ui';\nconst columns = [{\n  title: '姓名',\n  dataIndex: 'name',\n  key: 'name'\n}, {\n  title: '年龄',\n  dataIndex: 'age',\n  key: 'age',\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: '所在城市',\n  dataIndex: 'address',\n  key: 'address'\n}, {\n  title: '手机号',\n  dataIndex: 'Tel',\n  key: 'Tel'\n}, {\n  title: '审核状态',\n  dataIndex: 'state',\n  key: 'state',\n}, {\n  title: '操作',\n  dataIndex: 'action',\n  key: 'action',\n  render: (text, record) => (\n    <span>\n      <a href='javascript:;'>编辑</a>\n      <Divider type='vertical' />\n      <a href='javascript:;'>删除</a>\n    </span>\n  ),\n}];\nconst data = [{\n  key: '1',\n  name: '刘乐冉',\n  age: 26,\n  address: '北京',\n  Tel: '13943250086',\n  state: '审核未通过',\n}, {\n  key: '2',\n  name: '李佳欣',\n  age: 24,\n  address: '南京',\n  Tel: '13262717838',\n  state: '审核通过',\n  }, {\n  key: '3',\n  name: '孙柔佳',\n  age: 22,\n  address: '上海',\n  Tel: '13950035537',\n  state: '审核未通过',\n}, {\n  key: '4',\n  name: '张仁士',\n  age: 28,\n  address: '合肥',\n  Tel: '13947766628',\n  state: '审核通过',\n  }, {\n  key: '5',\n  name: '王子琪',\n  age: 32,\n  address: '郑州',\n  Tel: '13964507501',\n  state: '审核未通过',\n  }, {\n  key: '6',\n  name: '陈卜宣',\n  age: 27,\n  address: '沈阳',\n  Tel: '13262836283',\n  state: '审核通过',\n  }];\n<div>\n<Table columns={columns} dataSource={data} />\n<Table columns={columns} dataSource={data} size='middle' />\n<Table columns={columns} dataSource={data} size='small' />\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **边框表格**\n\n通过设置bordered来设置是否展示表格边框"},{type:"code",content:"import {Table, Divider} from 'dbox-ui';\nconst columns = [{\n  title: '姓名',\n  dataIndex: 'name',\n  key: 'name'\n}, {\n  title: '年龄',\n  dataIndex: 'age',\n  key: 'age',\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: '所在城市',\n  dataIndex: 'address',\n  key: 'address'\n}, {\n  title: '手机号',\n  dataIndex: 'Tel',\n  key: 'Tel'\n}, {\n  title: '审核状态',\n  dataIndex: 'state',\n  key: 'state',\n}, {\n  title: '操作',\n  dataIndex: 'action',\n  key: 'action',\n  render: (text, record) => (\n    <span>\n      <a href='javascript:;'>编辑</a>\n      <Divider type='vertical' />\n      <a href='javascript:;'>删除</a>\n    </span>\n  ),\n}];\nconst data = [{\n  key: '1',\n  name: '刘乐冉',\n  age: 26,\n  address: '北京',\n  Tel: '13943250086',\n  state: '审核未通过',\n}, {\n  key: '2',\n  name: '李佳欣',\n  age: 24,\n  address: '南京',\n  Tel: '13262717838',\n  state: '审核通过',\n  }, {\n  key: '3',\n  name: '孙柔佳',\n  age: 22,\n  address: '上海',\n  Tel: '13950035537',\n  state: '审核未通过',\n}, {\n  key: '4',\n  name: '张仁士',\n  age: 28,\n  address: '合肥',\n  Tel: '13947766628',\n  state: '审核通过',\n  }, {\n  key: '5',\n  name: '王子琪',\n  age: 32,\n  address: '郑州',\n  Tel: '13964507501',\n  state: '审核未通过',\n  }, {\n  key: '6',\n  name: '陈卜宣',\n  age: 27,\n  address: '沈阳',\n  Tel: '13262836283',\n  state: '审核通过',\n  }];\n<Table columns={columns} dataSource={data} bordered />",settings:{},evalInContext:r},{type:"markdown",content:"##### **带选择框**\n\n通过选择框来搜集选中单元格的信息"},{type:"code",content:"import {Table, Divider, Button, Checkbox} from 'dbox-ui';\nconst columns = [{\n  title: '姓名',\n  dataIndex: 'name',\n  key: 'name'\n}, {\n  title: '年龄',\n  dataIndex: 'age',\n  key: 'age',\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: '所在城市',\n  dataIndex: 'address',\n  key: 'address'\n}, {\n  title: '手机号',\n  dataIndex: 'Tel',\n  key: 'Tel'\n}, {\n  title: '审核状态',\n  dataIndex: 'state',\n  key: 'state',\n}, {\n  title: '操作',\n  dataIndex: 'action',\n  key: 'action',\n  render: (text, record) => (\n    <span>\n      <a href='javascript:;'>编辑</a>\n      <Divider type='vertical' />\n      <a href='javascript:;'>删除</a>\n    </span>\n  ),\n}];\nconst data = [{\n  key: '1',\n  name: '刘乐冉',\n  age: 26,\n  address: '北京',\n  Tel: '13943250086',\n  state: '审核未通过',\n}, {\n  key: '2',\n  name: '李佳欣',\n  age: 24,\n  address: '南京',\n  Tel: '13262717838',\n  state: '审核通过',\n  }, {\n  key: '3',\n  name: '孙柔佳',\n  age: 22,\n  address: '上海',\n  Tel: '13950035537',\n  state: '审核未通过',\n}, {\n  key: '4',\n  name: '张仁士',\n  age: 28,\n  address: '合肥',\n  Tel: '13947766628',\n  state: '审核通过',\n  }, {\n  key: '5',\n  name: '王子琪',\n  age: 32,\n  address: '郑州',\n  Tel: '13964507501',\n  state: '审核未通过',\n  }, {\n  key: '6',\n  name: '陈卜宣',\n  age: 27,\n  address: '沈阳',\n  Tel: '13262836283',\n  state: '审核通过',\n  }];\n\nclass TableView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedRowKeys: [],\n      loading: false,\n    }\n    this.start = this.start.bind(this)\n    this.onSelectChange = this.onSelectChange.bind(this)\n  };\n  start () {\n    this.setState({ loading: true });\n    // ajax request after empty completing\n    setTimeout(() => {\n      this.setState({\n        selectedRowKeys: [],\n        loading: false,\n      });\n    }, 1000);\n  }\n  onSelectChange (selectedRowKeys) {\n    console.log('selectedRowKeys changed: ', selectedRowKeys);\n    this.setState({ selectedRowKeys });\n  }\n  render() {\n    const { loading, selectedRowKeys } = this.state;\n    const rowSelection = {\n      selectedRowKeys,\n      onChange: this.onSelectChange,\n    };\n    const hasSelected = selectedRowKeys.length > 0;\n    return (\n      <div>\n        <div style={{ marginBottom: 12 }}>\n          <Button type='primary' onClick={this.start} disabled={!hasSelected} loading={loading}>批量操作</Button>\n          <span style={{ marginLeft: 16 }}>\n            {hasSelected ? `已选择 ${selectedRowKeys.length} 条数据` : ''}\n          </span>\n        </div>\n        <Table rowSelection={rowSelection} columns={columns} dataSource={data} />\n      </div>\n    )\n  }\n}\n<TableView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **异步数据**\n\n通过ajax实时动态获取后台数据"},{type:"code",content:"import {Table} from 'dbox-ui';\nimport reqwest from 'reqwest'\nconst columns = [{\n  title: 'Name',\n  dataIndex: 'name',\n  render: name => `${name.first} ${name.last}`,\n  width: '20%',\n}, {\n  title: 'Gender',\n  dataIndex: 'gender',\n  width: '20%',\n}, {\n  title: 'Email',\n  dataIndex: 'email',\n}];\n\nclass App extends React.Component {\n  constructor(props) {\n  super(props);\n  this.state = {\n    data: [],\n    pagination: {},\n    loading: false,\n  };\n    this.handleTableChange = this.handleTableChange.bind(this)\n    this.fetch = this.fetch.bind(this)\n  }\n  componentDidMount() {\n    this.fetch();\n  }\n  handleTableChange (pagination, filters, sorter) {\n    const pager = { ...this.state.pagination };\n    pager.current = pagination.current;\n    this.setState({\n      pagination: pager,\n    });\n    this.fetch({\n      results: pagination.pageSize,\n      page: pagination.current,\n      sortField: sorter.field,\n      sortOrder: sorter.order,\n      ...filters,\n    });\n  }\n  fetch (params = {}) {\n    this.setState({ loading: true });\n    reqwest({\n      url: 'https://randomuser.me/api',\n      method: 'get',\n      data: {\n        results: 10,\n        ...params,\n      },\n      type: 'json',\n    }).then((data) => {\n      const pagination = { ...this.state.pagination };\n      pagination.total = 200;\n      this.setState({\n        loading: false,\n        data: data.results,\n        pagination,\n      });\n    });\n  }\n\n  render() {\n    return (\n      <Table\n        columns={columns}\n        rowKey={record => record.login.uuid}\n        dataSource={this.state.data}\n        pagination={this.state.pagination}\n        loading={this.state.loading}\n        onChange={this.handleTableChange}\n      />\n    )\n  }\n}\n<App />",settings:{},evalInContext:r},{type:"markdown",content:"##### **内嵌表格**\n\n对于复杂表格的嵌套"},{type:"code",content:"import {Table, Divider, Badge} from 'dbox-ui';\nconst columns = [{\n  title: '姓名',\n  dataIndex: 'name',\n  key: 'name'\n}, {\n  title: '年龄',\n  dataIndex: 'age',\n  key: 'age',\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: '所在城市',\n  dataIndex: 'address',\n  key: 'address'\n}, {\n  title: '手机号',\n  dataIndex: 'Tel',\n  key: 'Tel'\n}, {\n  title: '审核状态',\n  dataIndex: 'state',\n  key: 'state',\n}, {\n  title: '操作',\n  dataIndex: 'action',\n  key: 'action',\n  render: (text, record) => (\n    <span>\n      <a href='javascript:;'>编辑</a>\n      <Divider type='vertical' />\n      <a href='javascript:;'>删除</a>\n    </span>\n  ),\n}];\nconst data = [{\n  key: '1',\n  name: '刘乐冉',\n  age: 26,\n  address: '北京',\n  Tel: '13943250086',\n  state: '审核未通过',\n}, {\n  key: '2',\n  name: '李佳欣',\n  age: 24,\n  address: '南京',\n  Tel: '13262717838',\n  state: '审核通过',\n  }, {\n  key: '3',\n  name: '孙柔佳',\n  age: 22,\n  address: '上海',\n  Tel: '13950035537',\n  state: '审核未通过',\n}, {\n  key: '4',\n  name: '张仁士',\n  age: 28,\n  address: '合肥',\n  Tel: '13947766628',\n  state: '审核通过',\n  }, {\n  key: '5',\n  name: '王子琪',\n  age: 32,\n  address: '郑州',\n  Tel: '13964507501',\n  state: '审核未通过',\n  }, {\n  key: '6',\n  name: '陈卜宣',\n  age: 27,\n  address: '沈阳',\n  Tel: '13262836283',\n  state: '审核通过',\n  }];\n  const expandedRowRender = () => {\n  const columnsSubmenu = [\n    { title: '操作日期', dataIndex: 'date', key: 'date' },\n    { title: '操作人员', dataIndex: 'name', key: 'name' },\n    { title: '操作状态', key: 'state', render: () => <span className='state' style={{position: 'relative'}}><Badge dot status='success' text='成功' /></span> },\n    { title: '操作次数', dataIndex: 'upgradeNum', key: 'upgradeNum' },\n    {\n      title: '异常状态',\n      dataIndex: 'operation',\n      key: 'operation',\n    },\n  ];\n\n  const datasubmenu = [];\n  for (let i = 0; i < 2; ++i) {\n    datasubmenu.push({\n      key: i,\n      date: '2018-8-8',\n      name: 'Admin',\n      operation: '正常',\n      upgradeNum: Math.ceil(Math.random() * 10),\n    });\n  }\n  return (\n    <Table\n      columns={columnsSubmenu}\n      dataSource={datasubmenu}\n      pagination={false}\n    />\n  );\n};\n<Table columns={columns} expandedRowRender={expandedRowRender} dataSource={data} />",settings:{},evalInContext:r},{type:"markdown",content:"##### **行列合并**\n\n对于一些公共数据的合并"},{type:"code",content:"import {Table} from 'dbox-ui';\nconst renderContent = function (value, row, index) {\n  const obj = {\n    children: value,\n    props: {},\n  };\n  return obj;\n};\n\nconst columnsCol = [{\n  title: '姓名',\n  dataIndex: 'name',\n  render(text, row, index) {\n      return text;\n  },\n}, {\n  title: '年龄',\n  dataIndex: 'age',\n  sorter: (a, b) => a.age - b.age,\n  render: renderContent,\n}, {\n  title: '家庭电话',\n  dataIndex: 'tel',\n  render(value, row, index) {\n    const obj = {\n      children: value,\n      props: {},\n    };\n    if (index === 2) {\n      obj.props.rowSpan = 2;\n    }\n    if (index === 3) {\n      obj.props.rowSpan = 0;\n    }\n    if (index === 0) {\n      obj.props.colSpan = 2\n    }\n    return obj;\n  },\n}, {\n  title: '手机号',\n  dataIndex: 'phone',\n  render(value, row, index) {\n    const obj = {\n      children: value,\n      props: {},\n    };\n    if (index === 0) {\n      obj.props.colSpan = 0\n    }\n    return obj\n   },\n}, {\n  title: '住址',\n  dataIndex: 'address',\n  render: renderContent,\n}];\n\nconst dataCol = [{\n  key: '1',\n  name: '刘乐冉',\n  age: 26,\n  tel: '0571-22098909',\n  phone: 13943250086,\n  address: '浦东新区唐镇',\n}, {\n  key: '2',\n  name: '李佳欣',\n  tel: '0571-22098333',\n  phone: 13262717838,\n  age: 24,\n  address: '浦东新区唐镇',\n}, {\n  key: '3',\n  name: '孙柔佳',\n  age: 22,\n  tel: '0575-22098909',\n  phone: 13950035537,\n  address: '浦东新区唐镇',\n}, {\n  key: '4',\n  name: '张仁士',\n  age: 28,\n  tel: '0575-22098909',\n  phone: 13947766628,\n  address: '浦东新区唐镇',\n}, {\n  key: '5',\n  name: '王子琪',\n  age: 32,\n  tel: '0575-22098909',\n  phone: 13964507501,\n  address: '浦东新区唐镇',\n}];\n<Table columns={columnsCol} dataSource={dataCol} bordered />",settings:{},evalInContext:r},{type:"markdown",content:"#### **固定行列**\n\n对某些特殊列进行固定，方便操作"},{type:"code",content:"import {Table, Divider} from 'dbox-ui';\nconst columnsFixRow = [{\n  title: '姓名',\n  width: 100,\n  fixed: 'left',\n  dataIndex: 'name',\n  key: 'name'\n}, {\n  title: '性别',\n  width: 100,\n  dataIndex: 'sex',\n  key: 'sex'\n}, {\n  title: '年龄',\n  width: 100,\n  dataIndex: 'age',\n  key: 'age',\n  sorter: (a, b) => a.age - b.age\n}, {\n  title: '所在城市',\n  width: 150,\n  dataIndex: 'city',\n  key: 'city'\n}, {\n  title: '地址',\n  width: 300,\n  dataIndex: 'address',\n  key: 'address'\n}, {\n  title: '手机号',\n  width: 150,\n  dataIndex: 'Tel',\n  key: 'Tel'\n}, {\n  title: '学历',\n  width: 150,\n  dataIndex: 'study',\n  key: 'study'\n}, {\n  title: '职业',\n  width: 150,\n  dataIndex: 'work',\n  key: 'work'\n}, {\n  title: '政治面貌',\n  width: 150,\n  dataIndex: 'status',\n  key: 'status'\n}, {\n  title: '审核状态',\n  width: 150,\n  dataIndex: 'state',\n  key: 'state'\n}, {\n  title: '操作',\n  width: 110,\n  dataIndex: 'action',\n  fixed: 'right',\n  key: 'action',\n  render: (text, record) => (\n    <span>\n      <a href='javascript:;'>编辑</a>\n      <Divider type='vertical' />\n      <a href='javascript:;'>删除</a>\n    </span>\n  ),\n}];\n\nconst dataFixdRow = [{\n  key: '11',\n  name: '刘乐冉',\n  age: 26,\n  city: '北京',\n  sex: '男',\n  status: '党员',\n  work: '教师',\n  address: '上海市浦东新区唐镇上丰路88号',\n  study: '本科',\n  Tel: '13943250086',\n  state: '审核未通过',\n}, {\n  key: '12',\n  name: '李佳欣',\n  age: 24,\n  city: '南京',\n  sex: '女',\n  status: '群众',\n  work: 'IT',\n  address: '上海市浦东新区唐镇上丰路88号',\n  study: '本科',\n  Tel: '13262717838',\n  state: '审核通过',\n}, {\n  key: '13',\n  name: '孙柔佳',\n  age: 22,\n  city: '上海',\n  sex: '女',\n  status: '党员',\n  work: '幼师',\n  address: '上海市浦东新区唐镇上丰路88号',\n  study: '专科',\n  Tel: '13950035537',\n  state: '审核未通过',\n}, {\n  key: '14',\n  name: '张仁士',\n  age: 28,\n  city: '合肥',\n  sex: '男',\n  address: '上海市浦东新区唐镇上丰路88号',\n  status: '群众',\n  work: '技工',\n  study: '专科',\n  Tel: '13947766628',\n  state: '审核通过',\n}, {\n  key: '15',\n  name: '王子琪',\n  age: 32,\n  city: '郑州',\n  sex: '男',\n  address: '上海市浦东新区唐镇上丰路88号',\n  status: '党员',\n  work: '自由职业',\n  study: '博士',\n  Tel: '13964507501',\n  state: '审核未通过',\n}, {\n  key: '16',\n  name: '陈卜宣',\n  age: 27,\n  city: '沈阳',\n  sex: '女',\n  status: '党员',\n  address: '上海市浦东新区唐镇上丰路88号',\n  work: '医师',\n  study: '本科',\n  Tel: '13262836283',\n  state: '审核通过',\n}];\n<Table columns={columnsFixRow} dataSource={dataFixdRow} scroll={{ x: 1500, y: 200 }} />",settings:{},evalInContext:r},{type:"markdown",content:"#### **可编辑表格**\n\n对表格内数据进行复杂操作"},{type:"code",content:"import {Table, Divider, Tooltip, Input, Form, Popconfirm, Select, InputNumber} from 'dbox-ui';\nconst NumericInput = Table.NumericInput;\nconst {Option} = Select;\nconst FormItem = Form.Item;\nconst EditableContext = React.createContext();\nconst EditableRow = ({ form, index, ...props }) => (\n  <EditableContext.Provider value={form}>\n    <tr {...props} />\n  </EditableContext.Provider>\n);\nlet dataSorce = [{\n  key: '1',\n  name: '刘乐冉',\n  age: 26,\n  city: '北京',\n  Phone: '13943250086',\n  address: '上海市浦东新区唐镇上丰路88号',\n}, {\n  key: '2',\n  name: '李佳欣',\n  age: 24,\n  city: '南京',\n  Phone: '13262717838',\n  address: '上海市浦东新区唐镇上丰路88号',\n}, {\n  key: '3',\n  name: '孙柔佳',\n  age: 22,\n  city: '上海',\n  Phone: '13950035537',\n  address: '上海市浦东新区唐镇上丰路88号',\n}, {\n  key: '4',\n  name: '张仁士',\n  age: 28,\n  city: '合肥',\n  Phone: '13947766628',\n  address: '上海市浦东新区唐镇上丰路88号',\n}, {\n  key: '5',\n  name: '王子琪',\n  age: 32,\n  city: '郑州',\n  Phone: '13964507501',\n  address: '上海市浦东新区唐镇上丰路88号',\n}, {\n  key: '6',\n  name: '陈卜宣',\n  age: 27,\n  city: '沈阳',\n  Phone: '13262836283',\n  address: '上海市浦东新区唐镇上丰路88号',\n}];\n\nconst EditableFormRow = Form.create()(EditableRow);\n\nclass EditableCell extends React.Component {\n  getInput () {\n    if (this.props.inputtype === 'number') {\n      return <InputNumber style={{ width: 70 }} />;\n    }\n    if (this.props.inputtype === 'city') {\n      return <Select style={{ width: 80 }} placeholder='请选择' >\n        <Option value='北京'>北京</Option>\n        <Option value='上海'>上海</Option>\n        <Option value='广州'>广州</Option>\n        <Option value='沈阳'>沈阳</Option>\n        <Option value='郑州'>郑州</Option>\n        <Option value='合肥'>合肥</Option>\n        <Option value='南京'>南京</Option>\n        <Option value='深圳'>深圳</Option>\n      </Select>;\n    }\n    if (this.props.inputtype === 'address') {\n      return <NumericInput initialvalue={this.props.value} onChange={this.onChangeValue} />;\n    }\n    if (this.props.inputtype === 'Phone') {\n      return <NumericInput initialvalue={this.props.value} onChange={this.onChangeValue} />;\n    }\n    return <Input />;\n  };\n\n  render() {\n    const {\n      editing,\n      dataIndex,\n      // title,\n      // inputtype,\n      record,\n      // index,\n      ...restProps\n    } = this.props;\n    return (\n      <EditableContext.Consumer>\n        {(form) => {\n          const { getFieldDecorator } = form;\n          return (\n            <td {...restProps}>\n              {editing ? (\n                <FormItem style={{ margin: 0 }}>\n                  {getFieldDecorator(dataIndex, {\n                    initialValue: record[dataIndex],\n                  })(this.getInput())}\n                </FormItem>\n              ) : restProps.children}\n            </td>\n          );\n        }}\n      </EditableContext.Consumer>\n    );\n  }\n}\n\nclass TableView extends React.Component {\n  constructor(props) {\n  super(props);\n  this.state = {\n    flag: false,\n    visible: false,\n    value: '',\n    selectedRowKeys: [], // Check here to configure the default column\n    loading: false,\n    editingKey: '',\n  };\n  this.onMouseEnter = this.onMouseEnter.bind(this);\n  this.onMouseLeave = this.onMouseLeave.bind(this);\n  this.onChangeValue = this.onChangeValue.bind(this);\n  this.start = this.start.bind(this);\n  this.handleDelete = this.handleDelete.bind(this);\n  this.onSelectChange = this.onSelectChange.bind(this);\n  this.edit = this.edit.bind(this);\n  this.cancel = this.cancel.bind(this);\n  this.isEditing = this.isEditing.bind(this);\n  this.save = this.save.bind(this);\n  this.handleRendercolnmus = this.handleRendercolnmus.bind(this);\n}\n  handleRendercolnmus() {\n    const columnss = [{\n      title: '姓名',\n      dataIndex: 'name',\n      key: 'name',\n      editable: true,\n      render: (text, record) => {\n        return text\n        }\n    }, {\n      title: '年龄',\n      dataIndex: 'age',\n      key: 'age',\n      sorter: (a, b) => a.age - b.age,\n      editable: true,\n      render: (text, record) => {\n        return text\n        }\n    }, {\n      title: '居住地',\n      dataIndex: 'city',\n      key: 'city',\n      editable: true,\n      render: (text, record) => {\n        return text\n        }\n    }, {\n      title: '手机号',\n      dataIndex: 'Phone',\n      key: 'Phone',\n      editable: true,\n      render: (text, record) => {\n        return <Tooltip placement='topLeft' title={this.state.flag ? text : ''}><div onMouseLeave={this.onMouseLeave} onMouseEnter={this.onMouseEnter}>{text}</div></Tooltip>\n        }\n    }, {\n      title: '地址',\n      dataIndex: 'address',\n      key: 'address',\n      editable: true,\n      render: (text, record) => {\n        return <Tooltip placement='topLeft' title={this.state.flag ? text : ''}><div onMouseLeave={this.onMouseLeave} onMouseEnter={this.onMouseEnter}>{text}</div></Tooltip>\n        }\n    }, {\n      title: '操作',\n      dataIndex: 'action',\n      key: 'action',\n      render: (text, record) => {\n        const editable = this.isEditing(record);\n        return (\n          <div>\n            {editable ? (\n              <span>\n                <EditableContext.Consumer>\n                  {form => (\n                    <a\n                      href='javascript:;'\n                      onClick={() => this.save(form, record.key)}\n                    >\n                      保存\n                    </a>\n                  )}\n                </EditableContext.Consumer>\n                <Divider type='vertical' />\n                <a\n                  href='javascript:;'\n                  onClick={() => this.cancel(record.key)}\n                    >\n                      取消\n                </a>\n              </span>\n            ) : (\n              <span>\n                <a href='javascript:;' onClick={() => this.edit(record.key)}>编辑</a>\n                <Divider type='vertical' />\n                <Popconfirm title='您确定要删除吗?' onConfirm={() => this.handleDelete(record.key)}>\n                  <a href='javascript:;'>删除</a>\n                </Popconfirm>\n              </span>\n            )}\n          </div>\n        );\n      },\n    }];\n    return columnss;\n  }\n  onMouseEnter (e) {\n    const parentWidth = e.target.parentNode.offsetWidth\n    const selfWdith = e.target.parentNode.lastElementChild.offsetWidth + 2\n    const parentPadding = e.target.parentNode.lastElementChild.offsetLeft\n    if ((selfWdith > parentWidth - (parentPadding * 2))) {\n      this.setState({flag: true});\n    }\n  }\n  onMouseLeave () {\n    if (this.state.flag === true) {\n    this.setState((preState, props) => ({\n      flag: preState.flag\n    }))\n    }\n  }\n  onChangeValue () { this.setState({ value: this.props.value }) }\n  start () {\n    this.setState({ loading: true });\n    setTimeout(() => {\n      this.setState({\n        selectedRowKeys: [],\n        loading: false,\n      });\n    }, 1000);\n  }\n  handleDelete (key) { dataSorce = dataSorce.filter(item => item.key !== key); this.setState({loading: false}) }\n  onSelectChange (selectedRowKeys) { this.setState({ selectedRowKeys }) }\n  edit(key) { this.setState({ editingKey: key }) };\n  cancel () { this.setState({ editingKey: '' }) };\n  isEditing (record) { return record.key === this.state.editingKey };\n  save(form, key) {\n    form.validateFields((error, row) => {\n      if (error) {\n        return;\n      }\n      const index = dataSorce.findIndex(item => key === item.key);\n      if (index > -1) {\n        const item = dataSorce[index];\n        dataSorce.splice(index, 1, {\n          ...item,\n          ...row,\n        });\n        this.setState({ editingKey: '' });\n      } else {\n        dataSorce.push(row);\n        this.setState({ editingKey: '' });\n      }\n    });\n  }\n  render () {\n    const components = {\n      body: {\n        row: EditableFormRow,\n        cell: EditableCell,\n      },\n    };\n    const columnn = this.handleRendercolnmus(this.state.flag).map((col) => {\n      if (!col.editable) {\n        return col;\n      }\n      return {\n        ...col,\n        onCell: record => ({\n          record,\n          inputtype: (() => {\n            if (col.dataIndex === 'age') {\n              return 'number'\n            } else if (col.dataIndex === 'city') {\n              return 'city'\n            } else if (col.dataIndex === 'address') {\n              return 'address'\n            } else if (col.dataIndex === 'Phone') {\n              return 'Phone'\n            } else {\n              return 'text'\n            }\n          })(),\n          dataIndex: col.dataIndex,\n          title: col.title,\n          editing: this.isEditing(record),\n        }),\n      };\n    });\n    return (\n      <Table components={components} bordered dataSource={dataSorce} columns={columnn} />\n     )\n  }\n}\n\n<TableView />",settings:{},evalInContext:r},{type:"markdown",content:'#### **Table**\n\n| 参数                     | 说明                                               | 类型                                    | 默认值                                                                    |\n| ---------------------- | ------------------------------------------------ | ------------------------------------- | ---------------------------------------------------------------------- |\n| rowSelection           | 列表项是否可选择，配置项                                     | Object                                | null                                                                   |\n| pagination             | 分页器，配置项参考 pagination，设为 false 时不显示分页             | Object/bool                           |                                                                        |\n| size                   | 正常或迷你类型，`large` `middle` or `small`              | String                                | `large`                                                                |\n| dataSource             | 数据数组                                             | Array                                 |                                                                        |\n| columns                | 表格列的配置描述，具体项见下表                                  | Array                                 | -                                                                      |\n| rowClassName           | 表格行的类名                                           | Function(record, index):string        | -                                                                      |\n| expandedRowRender      | 额外的展开行                                           | Function                              | -                                                                      |\n| defaultExpandedRowKeys | 默认展开的行                                           | Array                                 | -                                                                      |\n| expandedRowKeys        | 展开的行，控制属性                                        | Array                                 | -                                                                      |\n| onChange               | 分页、排序、筛选变化时触发                                    | Function(pagination, filters, sorter) |                                                                        |\n| loading                | 页面是否加载中                                          | Boolean                               | false                                                                  |\n| locale                 | 默认文案设置，目前包括排序、过滤、空数据文案                           | Object                                | filterConfirm: \'确定\' <br> filterReset: \'重置\' <br> emptyText: \'暂无数据\' <br> |\n| onRowClick             | 处理行点击事件                                          | Function(record, index)               | -                                                                      |\n| bordered               | 是否展示外边框和列边框                                      | Boolean                               | false                                                                  |\n| zebraColor             | 是否展示斑马线表格                                        | Boolean                               | false                                                                  |\n| showHeader             | 是否显示表头                                           | Boolean                               | true                                                                   |\n| footer                 | 表格底部自定义渲染函数                                      | Function(currentPageData)             |                                                                        |\n| title                  | 表格头部自定义渲染函数                                      | Function(currentPageData)             |                                                                        |\n| scroll                 | 横向或纵向支持滚动，也可用于指定滚动区域的宽高度：`{{ x: true, y: 300 }}` | Object                                | -                                                                      |\n\n#### **Column**\n\n列描述数据对象，是 columns 中的一项。\n\n| 参数             | 说明                                                      | 类型                               | 默认值   |\n| -------------- | ------------------------------------------------------- | -------------------------------- | ----- |\n| title          | 列头显示文字                                                  | String or React.Element          | -     |\n| key            | React 需要的 key，建议设置                                      | String                           | -     |\n| hidden         | 表头是否显隐                                                  | Boolean                          | -     |\n| dataIndex      | 列数据在数据项中对应的 key，支持 `a.b.c` 的嵌套写法                        | String                           | -     |\n| render         | 生成复杂数据的渲染函数，参数分别为当前行的值，当前行数据，行索引，@return里面可以设置表格行/列合并   | Function(text, record, index) {} | -     |\n| filters        | 表头的筛选菜单项                                                | Array                            | -     |\n| filterMultiple | 是否多选                                                    | Boolean                          | true  |\n| colSpan        | 表头列合并,设置为 0 时，不渲染                                       | Number                           |       |\n| width          | 列宽度                                                     | String or Number                 | -     |\n| className      | 列的 className                                            | String                           | -     |\n| fixed          | 列是否固定，可选 `true`(等效于 left) `\'left\'` `\'right\'`            | Boolean or String                | false |\n| sortOrder      | 排序的受控属性，外界可用此控制列的排序，可设置为 `\'ascend\'` `\'descend\'` `false` | Boolean or String                | -     |\n\n#### **rowSelection**\n\n选择功能的配置。\n\n| 参数              | 说明                              | 类型                                           | 默认值        |\n| --------------- | ------------------------------- | -------------------------------------------- | ---------- |\n| type            | 多选/单选，`checkbox` or `radio`     | String                                       | `checkbox` |\n| selectedRowKeys | 指定选中项的 key 数组，需要和 onChange 进行配合 | Array                                        | \\[]        |\n| onChange        | 选中项发生变化的时的回调                    | Function(selectedRowKeys, selectedRows)      | -          |\n| onSelect        | 用户手动选择/取消选择某列的回调                | Function(record, selected, selectedRows)     | -          |\n| onSelectAll     | 用户手动选择/取消选择所有列的回调               | Function(selected, selectedRows, changeRows) | -          |\n\n## 注意\n\n按照 React 的[规范](http://facebook.github.io/react/docs/multiple-dbox-ui.html#dynamic-children)，所有的组件数组必须绑定 key。在 Table 中，`dataSource` 和 `columns` 里的数据值都需要指定 `key` 值。对于 `dataSource` 默认将每列数据的 `key` 属性作为唯一的标识。\n\n如果你的数据没有这个属性，务必使用 `rowKey` 来指定数据列的主键。若没有指定，控制台会出现以下的提示，表格组件也会出现各类奇怪的错误。\n\n```jsx\n<span class="token comment">// 比如你的数据主键是 uid</span>\n<span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">rowKey</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>uid<span class="token punctuation">"</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n<span class="token comment">// 或</span>\n<span class="token keyword">return</span> <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span><span class="token class-name">Table</span></span> <span class="token attr-name">rowKey</span><span class="token script language-javascript"><span class="token script-punctuation punctuation">=</span><span class="token punctuation">{</span><span class="token parameter">record</span> <span class="token operator">=></span> record<span class="token punctuation">.</span>uid<span class="token punctuation">}</span></span> <span class="token punctuation">/></span></span><span class="token punctuation">;</span>\n```'},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport TableView from '../prevPage/table';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <TableView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Tooltip"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"文字提示"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Tabs"},u.default.createElement("span",null,"标签页"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Tabs",examples:n(1888)}},function(e,t,n){var a={"dbox-ui":n(21),"react-dom":n(14),"../prevPage/tabs":n(1889),react:n(1),"./index.jsx":n(678)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Tabs$0 = require('./index.jsx');\nconst Tabs = Tabs$0['Tabs'] || (Tabs$0.default || Tabs$0);",o);e.exports=[{type:"markdown",content:"##### **概述**\n\n提供平级的区域将大块内容进行收纳和展现，保持界面整洁。\n\nDBox 依次提供了三级选项卡，分别用于不同的场景。\n\n-   卡片式的页签，提供可关闭的样式，常用于容器顶部。\n-   标准线条式页签，用于容器内部的主功能切换，这是最常用的 Tabs。\n-   RadioButton 可作为更次级的页签来使用。\n\n##### **基本用法和禁用**\n\n水平展示tab栏"},{type:"code",content:"import {Tabs} from 'dbox-ui';\nconst TabPane = Tabs.TabPane;\nclass TabsView extends React.Component {\n  render() {\n    return(\n      <div>\n        <Tabs defaultActiveKey='5'>\n          <TabPane tab='选项一' key='5'>选项一</TabPane>\n          <TabPane disabled tab='选项二' key='4'>选项二</TabPane>\n          <TabPane tab='选项三' key='3'>选项三</TabPane>\n        </Tabs>\n      </div>\n    )\n  }\n}\n<TabsView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **有图标的标签**\n\n在tab栏内添加图标"},{type:"code",content:"import {Tabs, Icon} from 'dbox-ui';\nconst TabPane = Tabs.TabPane;\nclass TabsView extends React.Component {\n  render() {\n    return(\n      <Tabs defaultActiveKey='7'>\n        <TabPane tab={<span><Icon type='bars' />选项一</span>} key='7'>\n        选项一\n        </TabPane>\n        <TabPane disabled tab={<span><Icon type='appstore-o' />选项二</span>} key='8'>\n        选项二\n        </TabPane>\n        <TabPane tab={<span><Icon type='user' />选项三</span>} key='9'>\n        选项三\n        </TabPane>\n      </Tabs>\n    )\n  }\n}\n<TabsView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **tab页水平，垂直滑动**\n\n通过设置tabPosition为top和left来水平和垂直模式展示"},{type:"code",content:"import {Tabs, Radio} from 'dbox-ui';\nconst TabPane = Tabs.TabPane;\nconst RadioGroup = Radio.RadioGroup;\nconst RadioButton = Radio.RadioButton;\nclass TabsView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      mode: 'top',\n    }\n    this.handleModeChange = this.handleModeChange.bind(this)\n  };\n  handleModeChange (e) {\n    const mode = e.target.value;\n    this.setState({ mode });\n  };\n  render() {\n  return (\n    <div>\n      <RadioGroup onChange={this.handleModeChange} value={this.state.mode} style={{marginBottom: 8}}>\n        <RadioButton value='top'>水平</RadioButton>\n        <RadioButton value='left'>垂直</RadioButton>\n      </RadioGroup>\n      <Tabs defaultActiveKey='11' tabPosition={this.state.mode} style={{height: 247}}>\n        <TabPane tab='选项一' key='11'>选项一</TabPane>\n        <TabPane tab='选项二' key='12'>选项二</TabPane>\n        <TabPane tab='选项三' key='13'>选项三</TabPane>\n        <TabPane tab='选项四' key='14'>选项四</TabPane>\n        <TabPane tab='选项五' key='15'>选项五</TabPane>\n        <TabPane tab='选项六' key='16'>选项六</TabPane>\n        <TabPane tab='选项七' key='17'>选项七</TabPane>\n        <TabPane tab='选项八' key='18'>选项八</TabPane>\n        <TabPane tab='选项九' key='19'>选项九</TabPane>\n        <TabPane tab='选项十' key='20'>选项十</TabPane>\n        <TabPane tab='选项十一' key='21'>选项十一</TabPane>\n        <TabPane tab='选项十二' key='22'>选项十二</TabPane>\n        <TabPane tab='选项十三' key='23'>选项十三</TabPane>\n        <TabPane tab='选项十四' key='24'>选项十四</TabPane>\n      </Tabs>\n    </div>\n  )\n}\n}\n<TabsView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **卡片式标签页容器**\n\n设置type='card'来仿卡片式的tabs"},{type:"code",content:"import {Tabs} from 'dbox-ui';\nconst TabPane = Tabs.TabPane;\nclass TabsView extends React.Component {\n  render() {\n    return(\n      <Tabs type='card'>\n        <TabPane tab='分页一' key='25'>\n          <p>分页内容一</p>\n          <p>分页内容一</p>\n          <p>分页内容一</p>\n        </TabPane>\n        <TabPane tab='分页二' key='26'>\n          <p>分页内容二</p>\n          <p>分页内容二</p>\n          <p>分页内容二</p>\n        </TabPane>\n        <TabPane tab='分页三' key='27'>\n          <p>分页内容三</p>\n          <p>分页内容三</p>\n          <p>分页内容三</p>\n        </TabPane>\n      </Tabs>\n    )\n  }\n}\n<TabsView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **新增和关闭**\n\n动态添加和删除tabs分页"},{type:"code",content:"import {Tabs} from 'dbox-ui';\nconst TabPane = Tabs.TabPane;\nconst panes = [\n  { title: '分页一', content: '分页内容一', key: '1' },\n  { title: '分页二', content: '分页内容二', key: '2' }\n];\nclass TabsView extends React.Component {\n  constructor(props) {\n  this.newTabIndex = 0;\n  super(props);\n  this.state = {\n    panes,\n    activeKey: panes[0].key\n  }\n  this.onChange = this.onChange.bind(this);\n  this.onEdit = this.onEdit.bind(this);\n  this.add = this.add.bind(this);\n  this.remove = this.remove.bind(this)\n  };\n  add () {\n    const panes = this.state.panes;\n    const activeKey = `newTab${this.newTabIndex++}`;\n    panes.push({ title: '新增分页', content: '新增分页内容', key: activeKey });\n    this.setState({panes, activeKey});\n  };\n  remove (targetKey) {\n    let activeKey = this.state.activeKey;\n    let lastIndex;\n    this.state.panes.forEach((pane, i) => {\n      if (pane.key === targetKey) {\n        lastIndex = i - 1;\n      }\n    });\n    const panes = this.state.panes.filter(pane => pane.key !== targetKey);\n    if (lastIndex >= 0 && activeKey === targetKey) {\n      activeKey = panes[lastIndex].key;\n    }\n    this.setState({panes, activeKey});\n  };\n  onChange (activeKey) {\n    this.setState({activeKey});\n  };\n  onEdit (targetKey, action) {\n    this[action](targetKey);\n  };\n  render() {\n    return(\n      <Tabs onChange={this.onChange} activeKey={this.state.activeKey} type='editable-card' onEdit={this.onEdit}>\n        {this.state.panes.map(pane => <TabPane closable={pane.key === '1' ? false : 'true'} tab={pane.title} key={pane.key}>{pane.content}</TabPane>)}\n      </Tabs>\n     )\n  }\n}\n<TabsView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **卡片式容器**\n\n对容器设置背景使其更像是一个容器"},{type:"code",content:"import {Tabs} from 'dbox-ui';\nconst TabPane = Tabs.TabPane;\nclass TabsView extends React.Component {\n  render() {\n    return(\n      <Tabs type='cardTabs'>\n        <TabPane tab='分页一' key='28'>\n          <p>分页内容一</p>\n          <p>分页内容一</p>\n          <p>分页内容一</p>\n        </TabPane>\n        <TabPane tab='分页二' key='29'>\n          <p>分页内容二</p>\n          <p>分页内容二</p>\n          <p>分页内容二</p>\n        </TabPane>\n        <TabPane tab='分页三' key='30'>\n          <p>分页内容三</p>\n          <p>分页内容三</p>\n          <p>分页内容三</p></TabPane>\n      </Tabs>\n    )\n  }\n}\n<TabsView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **吸顶效果**\n\n页面滑动到一定距离固定tabs栏"},{type:"code",content:"import ReactDOM from 'react-dom';\nimport {Tabs} from 'dbox-ui';\nconst TabPane = Tabs.TabPane;\nclass TabsView extends React.Component {\n  componentDidMount () {\n    const element = ReactDOM.findDOMNode(this.refs.box_table);\n    const currentHeight = element.offsetTop - element.offsetHeight;\n    const left = `${element.offsetLeft -21}px`;\n    window.addEventListener('scroll', this.onScroll = () => {\n      if (window.scrollY >= currentHeight && window.scrollY < element.offsetTop) {\n        element.style.position = 'fixed';\n        element.style.top = '0';\n        element.style.left = left;\n        element.style.zIndex = '999';\n        element.style.width = '100%';\n        element.style.padding = '20px 20px';\n        element.style.backgroundColor = '#fff';\n      } else if (window.scrollY < currentHeight || window.scrollY > currentHeight + element.offsetHeight) {\n        element.style.position = 'relative';\n        element.style.padding = '0';\n        element.style.left = '0';\n      }\n    });\n  }\n  componentWillUnmount () {\n      window.removeEventListener('scroll', this.onScroll);\n  }\n  render() {\n    return(\n      <Tabs ref='box_table'>\n        <TabPane tab='分页一' key='31'>分页内容一</TabPane>\n        <TabPane tab='分页二' key='32'>分页内容二</TabPane>\n        <TabPane tab='分页三' key='33'>分页内容三</TabPane>\n      </Tabs>\n    )\n  }\n}\n<TabsView />",settings:{},evalInContext:r},{type:"markdown",content:'##### **Tabs**\n\n| 参数                 | 说明                                                     | 类型                                        | 默认值                          |\n| ------------------ | ------------------------------------------------------ | ----------------------------------------- | ---------------------------- |\n| activeKey          | 当前激活 tab 面板的 key                                       | string                                    | 无                            |\n| contentStyle       | tabs内容样式                                               | object                                    | 无                            |\n| animated           | 是否使用动画切换 Tabs，在 `tabPosition=top/bottom` 时有效           | boolean/{inkBar:boolean, tabPane:boolean} | true, 当 type="card" 时为 false |\n| defaultActiveKey   | 初始化选中面板的 key，如果没有设置 activeKey                          | string                                    | 第一个面板                        |\n| hideAdd            | 是否隐藏加号图标，在 `type="editable-card"` 时有效                  | boolean                                   | false                        |\n| tabBarExtraContent | tab bar 上额外的元素                                         | React.ReactNode                           | 无                            |\n| tabBarStyle        | tab bar 的样式对象                                          | object                                    | -                            |\n| tabPosition        | 页签位置，可选值有 `top` `right` `bottom` `left`                | string                                    | `top`                        |\n| type               | 页签的基本样式，可选 `line`、`card`、`editable-card`、`cardTabs` 类型 | string                                    | `line`                       |\n| onChange           | 切换面板的回调                                                | Function                                  | 无                            |\n| onEdit             | 新增和删除页签的回调，在 `type="editable-card"` 时有效                | (targetKey, action): void                 | 无                            |\n| onNextClick        | next 按钮被点击的回调                                          | Function                                  | 无                            |\n| onPrevClick        | prev 按钮被点击的回调                                          | Function                                  | 无                            |\n| onTabClick         | tab 被点击的回调                                             | Function                                  | 无                            |\n\n##### **Tabs.TabPane**\n\n| 参数          | 说明                               | 类型                 | 默认值    |\n| ----------- | -------------------------------- | ------------------ | ------ |\n| forceRender | 被隐藏时是否渲染 DOM 结构                  | boolean            | false  |\n| key         | 对应 activeKey                     | string             | 无      |\n| closable    | 在type="editable-card"模式下使用阻止卡片关闭 | boolean            | `true` |\n| tab         | 选项卡头显示文字                         | string / ReactNode | 无      |\n| disabled    | 禁用当前面板                           | bool               | 无      |'},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport TabsView from '../prevPage/tabs';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <TabsView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Table"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"表格"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Timeline"},u.default.createElement("span",null,"时间线"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Timeline",examples:n(1891)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/timeline":n(1892),react:n(1),"./index.jsx":n(198)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Timeline$0 = require('./index.jsx');\nconst Timeline = Timeline$0['Timeline'] || (Timeline$0.default || Timeline$0);",o);e.exports=[{type:"markdown",content:"按照时间顺序进行排列信息时使用。\n\n##### **基本用法**\n\n基本的时间轴"},{type:"code",content:"import { Timeline } from 'dbox-ui';\n<Timeline>\n  <Timeline.Item>需求评审 2018-11-21</Timeline.Item>\n  <Timeline.Item>开发 2018-12-01</Timeline.Item>\n  <Timeline.Item>测试 2018-12-15</Timeline.Item>\n  <Timeline.Item>上线 2018-12-21</Timeline.Item>\n</Timeline>",settings:{},evalInContext:r},{type:"markdown",content:"##### **进行中及排序**\n\n可通过设置 `pending` 属性展示幽灵节点。\n可通过设置`reverse` 属性用于控制节点排序，为 `false` 时按正序排列，为 `true` 时按倒序排列。"},{type:"code",content:"import { Timeline,Button } from 'dbox-ui';\nclass TimelineExample extends React.Component {\n  constructor(){\n    super();\n    this.state = {\n      reverse: false,\n    }\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick() {\n    this.setState({ reverse: !this.state.reverse });\n  }\n\n  render(){\n    return(\n      <div>\n        <Timeline pending='上线...' reverse={this.state.reverse} >\n          <Timeline.Item>需求评审 2018-11-21</Timeline.Item>\n          <Timeline.Item>开发 2018-12-01</Timeline.Item>\n          <Timeline.Item>测试 2018-12-15</Timeline.Item>\n        </Timeline>\n        <Button type='primary' style={{ marginTop: 16 }} onClick={this.handleClick}>转换顺序</Button>\n      </div>\n    )\n  }\n}\n<TimelineExample />",settings:{},evalInContext:r},{type:"markdown",content:"##### **自定义图标**\n\n可通过设置 `dot` 属性为`Icon`时添加自定义图标。"},{type:"code",content:"import { Timeline,Icon } from 'dbox-ui';\n<Timeline>\n  <Timeline.Item>需求评审 2018-11-21</Timeline.Item>\n  <Timeline.Item>开发 2018-12-01</Timeline.Item>\n  <Timeline.Item dot={<Icon type='loading' style={{ fontSize: '16px', color: 'red' }} />} >测试 2018-12-15</Timeline.Item>\n  <Timeline.Item>上线 2018-12-21</Timeline.Item>\n</Timeline>",settings:{},evalInContext:r},{type:"markdown",content:'##### **Timeline**\n\n时间轴。\n\n| 参数         | 说明                   | 类型                       | 默认值                       |\n| ---------- | -------------------- | ------------------------ | ------------------------- |\n| pending    | 指定最后一个幽灵节点是否存在或内容    | boolean/string/ReactNode | false                     |\n| pendingDot | 当最后一个幽灵节点存在时，指定其时间图点 | string/ReactNode         | `<Icon type="loading" />` |\n| reverse    | 节点排序                 | boolean                  | false                     |\n\n##### **Timeline.Item**\n\n时间轴的每一个节点。\n\n| 参数    | 说明                                | 类型            | 默认值  |\n| ----- | --------------------------------- | ------------- | ---- |\n| color | 指定圆圈颜色 `blue, red, green`，或自定义的色值 | string        | blue |\n| dot   | 自定义时间轴点                           | React.Element | -    |'},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport TimelineView from '../prevPage/timeline';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <TimelineView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Tabs"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"标签页"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Tag"},u.default.createElement("span",null,"标签"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Tag",examples:n(1894)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/tag":n(1895),react:n(1),"./index.jsx":n(193)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Tag$0 = require('./index.jsx');\nconst Tag = Tag$0['Tag'] || (Tag$0.default || Tag$0);",o);e.exports=[{type:"markdown",content:"用于标记事物的属性和维度，同时亦可进行分类。\n\n##### **基本用法**\n\n通过添加href属性区别链接状态"},{type:"code",content:"import {Tag} from 'dbox-ui';\n<div>\n  <Tag>标签</Tag>\n  <Tag href='javascript:;' target='_black'>链接</Tag>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **多彩标签**\n\n通过添加颜色进行分类"},{type:"code",content:"import {Tag} from 'dbox-ui';\n<div>\n  <Tag color='peru'>peru</Tag>\n  <Tag color='coral'>coral</Tag>\n  <Tag color='hotpink'>hotpink</Tag>\n  <Tag color='orange'>orang</Tag>\n  <Tag color='limegreen'>limegreen</Tag>\n  <Tag color='deepskyblue'>deepskyblue</Tag>\n  <Tag color='mediumslateblue'>mediumslateblue</Tag>\n  <Tag color='turquoise'>turquoise</Tag>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **可移除标签**\n\n标签可移除，支持动态删除"},{type:"code",content:"import {Tag} from 'dbox-ui';\n<div>\n  <Tag closable>可移除标签</Tag>\n  <Tag closable color='turquoise'>可移除标签</Tag>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **热门标签**\n\n通过添加hot属性进行分类"},{type:"code",content:"import {Tag} from 'dbox-ui';\n<div>\n  <span style={{marginRight: 8}}>热门话题:</span>\n  <Tag hot>电影</Tag>\n  <Tag hot checked>书籍</Tag>\n  <Tag hot>音乐</Tag>\n  <Tag hot>运动</Tag>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **动态添加和删除标签**\n\n动态添加和删除标签"},{type:"code",content:"import {Tag} from 'dbox-ui';\nconst TagGroup = Tag.Group;\n<TagGroup tags={['电影', '书籍', '音乐']} id={0} text='爱好' iconType='tag' />",settings:{},evalInContext:r},{type:"markdown",content:"##### **Tag**\n\n| 参数       | 说明                     | 类型                | 默认值       |\n| -------- | ---------------------- | ----------------- | --------- |\n| closable | 标签是否可以关闭               | boolean           | false     |\n| color    | 标签色                    | string            | -         |\n| target   | 链接跳转方式必须和href同时设置      | string可参照a链接的跳转方式 | - 默认本页面跳转 |\n| href     | 链接跳转路径                 | string            | -         |\n| hot      | 设置热门标签                 | bool              | false     |\n| checked  | 设置标签的选中状态仅适用于hot和基本状态下 | boolean           | false     |\n\n##### **tagGroup**\n\n| 参数       | 说明            | 类型     | 默认值                  |\n| -------- | ------------- | ------ | -------------------- |\n| tags     | 热门话题的默认文本     | array  | `['电影', '书籍', '音乐']` |\n| id       | 默认不可移除的标签的下标值 | number | `0`                  |\n| text     | 动态增加标签的文本内容   | string | `添加`                 |\n| iconType | 动态增加标签的Icon   | string | `plus`               |\n| color    | 动态标签的颜色       | string |                      |\n\n##### **Tag 方法**\n\n| 参数      | 说明     | 类型          | 默认值 |\n| ------- | ------ | ----------- | --- |\n| onClose | 关闭时的回调 | (e) => void | -   |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport TagView from '../prevPage/tag';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <TagView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Timeline"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"时间线"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Feedback/Alert"},u.default.createElement("span",null,"警告提示"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Alert",examples:n(1897)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/alert":n(1898),react:n(1),"./index.jsx":n(258)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Alert$0 = require('./index.jsx');\nconst Alert = Alert$0['Alert'] || (Alert$0.default || Alert$0);",o);e.exports=[{type:"markdown",content:"当需要向用户显示警告的信息时。\n非浮层的静态展现形式，始终展现，不会自动消失，用户可以选择点击关闭。\n\n##### **基本用法**"},{type:"code",content:"import { Alert } from 'dbox-ui';\n\n<Alert\n  message='成功提示'\n  type='success' />",settings:{},evalInContext:r},{type:"markdown",content:"##### **可关闭的警告提示**"},{type:"code",content:"import { Alert } from 'dbox-ui';\n\nonClose = (e) => {\n  console.log(e, 'I was closed.');\n};\n<div>\n  <Alert\n    message='警告文本警告文本警告文本警告文本警告文本警告文本警告文本警告文本警告文本警告文本警告文本警告文本'\n    type='warning'\n    closable\n    onClose={onClose} /><br />\n  <Alert\n    message='错误文本'\n    description='错误文本错误文本错误文本错误文本错误文本错误文本错误文本错误文本错误文本错误文本错误文本错误文本'\n    type='error'\n    closable\n    onClose={onClose} />\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **带有图标的警告提示**"},{type:"code",content:"import { Alert } from 'dbox-ui';\n\n<div>\n  <div style={{ marginBottom: 15 }}>\n    <Alert message='成功' type='success' showIcon />\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <Alert message='信息提示' type='info' showIcon />\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <Alert message='警告' type='warning' showIcon />\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <Alert message='错误' type='error' showIcon />\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <Alert\n      message='成功'\n      description='关于成功的文案写作的详细描述和建议.'\n      type='success'\n      showIcon/>\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <Alert\n      message='信息提示'\n      description='关于文案写作的额外描述和信息.'\n      type='info'\n      showIcon/>\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <Alert\n      message='警告'\n      description='这是一个关于文案写作的警告通知.'\n      type='warning'\n      showIcon/>\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <Alert\n      message='错误'\n      description='这是一个关于文案写作的错误通知.'\n      type='error'\n      showIcon/>\n  </div>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **四种样式**"},{type:"code",content:"import { Alert } from 'dbox-ui';\n\n <div>\n  <div style={{ marginBottom: 15 }}>\n    <Alert message='成功文本' type='success' />\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <Alert message='提示文本' type='info' />\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <Alert message='警告文本' type='warning' />\n  </div>\n  <div>\n    <Alert message='错误文本' type='error' />\n  </div>\n </div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **含有辅助性文字的文本**"},{type:"code",content:"import { Alert } from 'dbox-ui';\n\n <div>\n  <div style={{ marginBottom: 15 }}>\n    <Alert\n      message='成功文本'\n      description='成功描述成功描述成功描述成功描述成功描述'\n      type='success'\n    />\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <Alert\n      message='提示文本'\n      description='提示描述提示描述提示描述提示描述提示描述'\n      type='info'\n    />\n  </div>\n  <div style={{ marginBottom: 15 }}>\n    <Alert\n      message='警告文本'\n      description='警告描述警告描述警告描述警告描述警告描述'\n      type='warning'\n    />\n  </div>\n  <div>\n    <Alert\n      message='错误文本'\n      description='错误描述错误描述错误描述错误描述错误描述'\n      type='error'\n    />\n  </div>\n </div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **自定义关闭**"},{type:"code",content:"import { Alert } from 'dbox-ui';\n\n<Alert message='Info Text' type='info' closeText='Close Now' />",settings:{},evalInContext:r},{type:"markdown",content:"##### **平滑的卸载**"},{type:"code",content:"import { Alert } from 'dbox-ui';\n\nclass AlertView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: true,\n    }\n    this.handleClose = this.handleClose.bind(this);\n  }\n  handleClose() {\n    console.log(1)\n    this.setState({ visible: false });\n  }\n  render() {\n    return (\n      <div>\n      {\n        this.state.visible ? (\n          <Alert\n            message='Alert Message Text'\n            type='success'\n            closable\n            afterClose={this.handleClose}\n          />\n        ) : null\n      }\n      <p>placeholder text here</p>\n      </div>\n    )\n  }\n}\n<AlertView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **顶部公告**"},{type:"code",content:"import { Alert } from 'dbox-ui';\n\n<div>\n <Alert message='警告文本' banner />\n <Alert message='非常长的警告文本非常长的警告文本' banner closable />\n <Alert showIcon={false} message='没有图标的警告文本' banner />\n <Alert type='error' message='错误文本' banner />\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **API**\n\n| 参数          | 说明                                      | 类型                      | 默认值                       |     |\n| ----------- | --------------------------------------- | ----------------------- | ------------------------- | --- |\n| afterClose  | 关闭动画结束后触发的回调函数                          | () => void              | -                         |     |\n| banner      | 是否用作顶部公告                                | boolean                 | false                     |     |\n| closable    | 默认不显示关闭按钮                               | boolean                 | 无                         |     |\n| closeText   | 自定义关闭按钮                                 | string                  | ReactNode                 | 无   |\n| description | 警告提示的辅助性文字介绍                            | string                  | ReactNode                 | 无   |\n| icon        | 自定义图标，showIcon 为 true 时有效               | ReactNode               | -                         |     |\n| message     | 警告提示内容                                  | string                  | ReactNode                 | 无   |\n| showIcon    | 是否显示辅助图标                                | boolean                 | false，banner 模式下默认值为 true |     |\n| type        | 指定警告提示的样式，有四种选择 success、info、warn、error | string                  | info，banner 模式下默认值为 warn  |     |\n| onClose     | 关闭时触发的回调函数                              | (e: MouseEvent) => void | 无                         |     |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport AlertView from '../prevPage/alert';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <AlertView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/DataDisplay/Tag"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"标签"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Feedback/Drawer"},u.default.createElement("span",null,"抽屉"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Drawer",examples:n(1900)}},function(e,t,n){var a={"dbox-ui":n(21),"components/grid":n(20),"../prevPage/drawer":n(1901),react:n(1),"./index.jsx":n(657)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Drawer$0 = require('./index.jsx');\nconst Drawer = Drawer$0['Drawer'] || (Drawer$0.default || Drawer$0);",o);e.exports=[{type:"markdown",content:"##### **概述**\n\n在需要时呼出一个附加的面板来控制父窗体内容；\n在当前任务流中插入临时任务，创建或预览附加内容。比如展示协议条款，创建子对象。\n\n##### **基本用法**\n\n较简单的用法"},{type:"code",content:"import {Button, Drawer} from 'dbox-ui';\nclass DrawerView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    visible: false\n    }\n    this.showDrawer = this.showDrawer.bind(this)\n    this.onClose = this.onClose.bind(this)\n  };\n  showDrawer () {\n    this.setState({\n      visible: true,\n    });\n  }\n  onClose () {\n    this.setState({\n      visible: false,\n    });\n  };\n  render() {\n    return (\n      <div>\n        <Button type='primary' onClick={this.showDrawer}>\n          打开基础抽屉\n        </Button>\n        <Drawer\n          title='基础抽屉'\n          placement='right'\n          closable={false}\n          onClose={this.onClose}\n          visible={this.state.visible}>\n          <p>一些基本内容...</p>\n          <p style={{marginTop: 24, marginBottom: 24}}>一些基本内容...</p>\n          <p>一些基本内容...</p>\n        </Drawer>\n      </div>\n    )\n  }\n}\n<DrawerView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **四种方位**\n\n控制placement为top,bottom,left,right来确定抽屉展示位置"},{type:"code",content:"import {Button, Radio, Drawer} from 'dbox-ui';\nconst RadioGroup = Radio.RadioGroup;\nclass DrawerView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    visible: false,\n      placement: 'right'\n    }\n    this.showDrawer = this.showDrawer.bind(this)\n    this.onClose = this.onClose.bind(this)\n    this.onChange = this.onChange.bind(this)\n  };\n  onChange (e) {\n    this.setState({\n      placement: e.target.value,\n    });\n  }\n  showDrawer () {\n    this.setState({\n      visible: true,\n    });\n  }\n  onClose () {\n    this.setState({\n      visible: false,\n    });\n  };\n  render() {\n    return (\n      <div>\n        <RadioGroup\n          style={{ marginRight: 8 }}\n          defaultValue={this.state.placement}\n          onChange={this.onChange}>\n          <Radio value='top'>上</Radio>\n          <Radio value='bottom'>下</Radio>\n          <Radio value='left'>左</Radio>\n          <Radio value='right'>右</Radio>\n        </RadioGroup>\n        <br />\n        <br />\n        <Button type='primary' onClick={this.showDrawer}>\n        打开方位抽屉\n        </Button>\n        <Drawer\n          title='基础抽屉'\n          placement={this.state.placement}\n          closable={false}\n          onClose={this.onClose}\n          visible={this.state.visible}>\n          <p>一些基本内容...</p>\n          <p style={{marginTop: 24, marginBottom: 24}}>一些基本内容...</p>\n          <p>一些基本内容...</p>\n        </Drawer>\n      </div>\n    )\n  }\n}\n<DrawerView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **信息预览**\n\n展示一些基本信息"},{type:"code",content:"import {Button, Row, Drawer, Col, Divider} from 'dbox-ui';\nconst pStyle = {\n  fontSize: 16,\n  color: 'rgba(0,0,0,0.85)',\n  lineHeight: '24px',\n  display: 'block',\n  marginBottom: 16,\n};\nconst DescriptionItem = ({ title, content }) => (\n  <div\n    style={{\n      fontSize: 14,\n      lineHeight: '22px',\n      marginBottom: 7,\n      color: 'rgba(0,0,0,0.65)',\n    }}>\n    <p\n      style={{\n        marginRight: 8,\n        display: 'inline-block',\n        color: 'rgba(0,0,0,0.85)',\n      }}>\n      {title}:\n    </p>\n    {content}\n  </div>\n);\nclass DrawerView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    visible: false\n    }\n    this.showDrawer = this.showDrawer.bind(this)\n    this.onClose = this.onClose.bind(this)\n  };\n  showDrawer () {\n    this.setState({\n      visible: true,\n    });\n  }\n  onClose () {\n    this.setState({\n      visible: false,\n    });\n  };\n  render() {\n    return (\n      <div>\n        <Button type='primary' href='javascript:;' onClick={this.showDrawer}>查看个人信息</Button>\n        <Drawer\n          width={620}\n          placement='right'\n          closable={false}\n          onClose={this.onClose}\n          visible={this.state.visible}>\n          <p style={{ ...pStyle, marginBottom: 24 }}>个人信息</p>\n          <p style={pStyle}>私人信息</p>\n          <Row>\n            <Col span={12}>\n              <DescriptionItem title='名称' content='小明' />{' '}\n            </Col>\n            <Col span={12}>\n              <DescriptionItem title='账户' content='Idoll@example.com' />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={12}>\n              <DescriptionItem title='城市' content='上海' />\n            </Col>\n            <Col span={12}>\n              <DescriptionItem title='国家' content='中国' />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={12}>\n              <DescriptionItem title='生日' content='2018-8-8' />\n            </Col>\n            <Col span={12}>\n              <DescriptionItem title='个人博客' content={<a target='_black' href='http://github.com'>http://github.com</a>} />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={24}>\n              <DescriptionItem\n                title='座右铭'\n                content='不忘初心,方得始终' />\n            </Col>\n          </Row>\n          <Divider />\n          <p style={pStyle}>公司信息</p>\n          <Row>\n            <Col span={12}>\n              <DescriptionItem title='职业' content='程序猿' />\n            </Col>\n            <Col span={12}>\n              <DescriptionItem title='特长' content='码代码' />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={12}>\n              <DescriptionItem title='部门' content='开发部' />\n            </Col>\n            <Col span={12}>\n              <DescriptionItem title='业务组' content='贷款组' />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={24}>\n              <DescriptionItem\n                title='技能'\n                content='C / C + +, Javascript, software engineering, operating systems, computer networks, databases, compiler theory, computer architecture, Microcomputer Principle and Interface Technology, Computer English, Java, ASP, etc.' />\n            </Col>\n          </Row>\n          <Divider />\n          <p style={pStyle}>🔗地址</p>\n          <Row>\n            <Col span={12}>\n              <DescriptionItem title='📮邮箱' content='Dbox@example.com' />\n            </Col>\n            <Col span={12}>\n              <DescriptionItem title='📱手机' content='+86 188 8888 6666' />\n            </Col>\n          </Row>\n          <Row>\n            <Col span={24}>\n              <DescriptionItem\n                title='Github'\n                content={(\n                  <a href='http://github.com'>Github</a>\n              )} />\n            </Col>\n          </Row>\n        </Drawer>\n      </div>\n    )\n  }\n}\n<DrawerView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **多层抽屉**\n\n可在父抽屉中创建子抽屉"},{type:"code",content:"import {Button, Drawer} from 'dbox-ui';\nclass DrawerView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false,\n      placement: 'right',\n      childrenDrawer: false,\n    }\n    this.showDrawer = this.showDrawer.bind(this)\n    this.onClose = this.onClose.bind(this)\n    this.showChildrenDrawer = this.showChildrenDrawer.bind(this)\n    this.onChildrenDrawerClose = this.onChildrenDrawerClose.bind(this)\n  };\n  showDrawer () {\n    this.setState({\n      visible: true,\n    });\n  }\n  onClose () {\n    this.setState({\n      visible: false,\n    });\n  }\n  showChildrenDrawer () {\n    this.setState({\n      childrenDrawer: true,\n    });\n  };\n  onChildrenDrawerClose () {\n    this.setState({\n      childrenDrawer: false,\n    });\n  };\n  render() {\n    return (\n      <div>\n        <Button type='primary' onClick={this.showDrawer}>\n        打开多层抽屉\n        </Button>\n        <Drawer\n          title='多层级抽屉'\n          width={520}\n          closable={false}\n          onClose={this.onClose}\n          visible={this.state.visible}>\n          <Button type='primary' onClick={this.showChildrenDrawer}>\n          打开次级抽屉\n          </Button>\n          <Drawer\n            title='次级抽屉'\n            width={320}\n            closable={false}\n            onClose={this.onChildrenDrawerClose}\n            visible={this.state.childrenDrawer}>\n          这是次级抽屉\n          </Drawer>\n          <div\n            style={{\n            position: 'absolute',\n            bottom: 0,\n            width: '100%',\n            borderTop: '1px solid #e8e8e8',\n            padding: '10px 16px',\n            textAlign: 'right',\n            left: 0,\n            background: '#fff',\n            borderRadius: '0 0 4px 4px',\n          }}>\n            <Button style={{ marginRight: 8 }} onClick={this.onClose}>取消</Button>\n            <Button onClick={this.onClose} type='primary'>提交</Button>\n          </div>\n        </Drawer>\n      </div>\n     )\n  }\n}\n<DrawerView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **表单抽屉**\n\n在新抽屉中提交一些表单数据"},{type:"code",content:"import {Button, DatePicker, Form, Input, Select} from 'dbox-ui';\nimport {Row, Col} from 'components/grid';\nconst { RangePicker } = DatePicker;\nconst FormItem = Form.Item;\nconst {Option} = Select;\nconst Textarea = Input.Textarea\nclass DrawerDemo extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    visible: false\n    }\n    this.showDrawer = this.showDrawer.bind(this)\n    this.onClose = this.onClose.bind(this)\n  };\n  showDrawer () {\n    this.setState({\n      visible: true,\n    });\n  }\n  onClose () {\n    this.setState({\n      visible: false,\n    });\n  }\n  render() {\n    const { getFieldDecorator } = this.props.form;\n    return (\n      <div>\n        <Button type='primary' onClick={this.showDrawer}>\n        创建表单抽屉\n        </Button>\n        <Drawer\n          title='创建'\n          width={720}\n          placement='right'\n          onClose={this.onClose}\n          visible={this.state.visible}\n          style={{\n          height: 'calc(100% - 55px)',\n          overflow: 'auto',\n          paddingBottom: 53,\n        }}>\n          <Form layout='vertical' hideRequiredMark>\n            <Row gutter={16}>\n              <Col span={12}>\n                <FormItem label='姓名'>\n                  {getFieldDecorator('name', {\n                  rules: [{ required: true, message: '请输入用户名' }],\n                })(<Input placeholder='请输入用户名' />)}\n                </FormItem>\n              </Col>\n              <Col span={12}>\n                <FormItem label='URL'>\n                  {getFieldDecorator('url', {\n                  rules: [{ required: true, message: '请输入 url' }],\n                })(\n                  <Input\n                    style={{ width: '100%' }}\n                    addonBefore='http://'\n                    addonAfter='.com'\n                    placeholder='请输入 url'\n                  />\n                )}\n                </FormItem>\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={12}>\n                <FormItem label='选择'>\n                  {getFieldDecorator('owner', {\n                  rules: [{ required: true, message: '请选择' }],\n                })(\n                  <Select placeholder='请选择'>\n                    <Option value='liu'>刘岳然</Option>\n                    <Option value='li'>李欣桐</Option>\n                  </Select>\n                )}\n                </FormItem>\n              </Col>\n              <Col span={12}>\n                <FormItem label='类型'>\n                  {getFieldDecorator('type', {\n                  rules: [{ required: true, message: '请选择类型' }],\n                })(\n                  <Select placeholder='请选择类型'>\n                    <Option value='private'>私密</Option>\n                    <Option value='public'>公开</Option>\n                  </Select>\n                )}\n                </FormItem>\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={12}>\n                <FormItem label='批复'>\n                  {getFieldDecorator('approver', {\n                  rules: [{ required: true, message: '请选择批复人' }],\n                })(\n                  <Select placeholder='请选择批复人'>\n                    <Option value='jack'>杰瑞</Option>\n                    <Option value='tom'>汤姆</Option>\n                  </Select>\n                )}\n                </FormItem>\n              </Col>\n              <Col span={12}>\n                <FormItem label='时间'>\n                  {getFieldDecorator('dateTime', {\n                  rules: [{ required: true, message: '请选择日期时间' }],\n                })(\n                  <RangePicker\n                    style={{width: '100%'}}\n                    showTime={{ format: 'HH:mm' }}\n                    format='YYYY-MM-DD HH:mm'\n                    placeholder={['开始时间', '结束时间']}\n                  />\n                )}\n                </FormItem>\n              </Col>\n            </Row>\n            <Row gutter={16}>\n              <Col span={24}>\n                <FormItem label='描述'>\n                  {getFieldDecorator('description', {\n                  rules: [\n                    {\n                      required: true,\n                      message: '请输入描述',\n                    },\n                  ],\n                })(<Textarea rows={23} placeholder='请输入描述' />)}\n                </FormItem>\n              </Col>\n            </Row>\n          </Form>\n          <div\n            style={{\n            position: 'absolute',\n            bottom: 0,\n            width: '100%',\n            borderTop: '1px solid #e8e8e8',\n            padding: '10px 16px',\n            textAlign: 'right',\n            left: 0,\n            background: '#fff',\n            borderRadius: '0 0 4px 4px',\n          }}>\n            <Button style={{ marginRight: 8 }} onClick={this.onClose} >取消</Button>\n            <Button onClick={this.onClose} type='primary'>提交</Button>\n          </div>\n        </Drawer>\n      </div>\n    )\n  }\n}\nconst DrawerView = Form.create()(DrawerDemo);\n<DrawerView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **Drawer**\n\n| 参数             | 说明                                       | 类型                                   | 默认值     |\n| -------------- | ---------------------------------------- | ------------------------------------ | ------- |\n| closable       | 是否显示右上角的关闭按钮                             | boolean                              | true    |\n| destroyOnClose | 关闭时销毁 Drawer 里的子元素                       | boolean                              | false   |\n| maskClosable   | 点击蒙层是否允许关闭                               | boolean                              | true    |\n| mask           | 是否展示遮罩                                   | Boolean                              | true    |\n| maskStyle      | 遮罩样式                                     | object                               | {}      |\n| style          | 可用于设置 Drawer 的样式，调整浮层位置等                 | object                               | -       |\n| title          | 标题                                       | string / ReactNode                   | -       |\n| visible        | Drawer 是否可见                              | boolean                              | -       |\n| width          | 宽度                                       | string / number                      | 256     |\n| height         | 高度, 在 `placement` 为 `top` 或 `bottom` 时使用 | string / number                      | 256     |\n| className      | 对话框外层容器的类名                               | string                               | -       |\n| zIndex         | 设置 Drawer 的 `z-index`                    | Number                               | 1000    |\n| placement      | 抽屉的方向                                    | 'top'  / 'right' / 'bottom' / 'left' | 'right' |\n| onClose        | 点击遮罩层或右上角叉或取消按钮的回调                       | function(e)                          | 无       |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport DrawerView from '../prevPage/drawer';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <DrawerView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Feedback/Alert"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"警告提示"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Feedback/Modal"},u.default.createElement("span",null,"对话框"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Modal",examples:n(1903)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/modal":n(1904),react:n(1),"./index.jsx":n(668)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Modal$0 = require('./index.jsx');\nconst Modal = Modal$0['Modal'] || (Modal$0.default || Modal$0);",o);e.exports=[{type:"markdown",content:"#### **概述**\n\n需要用户处理事务，又不希望跳转页面以致打断工作流程时，可以使用 `Modal` 在当前页面正中打开一个浮层，承载相应的操作\n\n#### **普通弹出框(可用于展示和提交)**\n\n通常用于展示和提交数据"},{type:"code",content:"import {Modal, Button} from 'dbox-ui';\nclass ModalView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    visible: false,\n   }\n    this.showModal = this.showModal.bind(this);\n    this.handleOk = this.handleOk.bind(this);\n    this.handleCancel = this.handleCancel.bind(this)\n  };\n  showModal () {\n    this.setState({\n      visible: true\n    });\n  };\n  handleOk (e) {\n    this.setState({\n      visible: false\n    });\n  }\n  handleCancel (e) {\n    this.setState({\n      visible: false\n    });\n  };\n  render() {\n    return (\n      <div>\n        <Button type='primary' onClick={this.showModal}>显示对话框</Button>\n        <Modal title='我是标题' visible={this.state.visible}\n          onOk={this.handleOk} onCancel={this.handleCancel}>\n          <p>这里是一句话</p>\n          <p>或者一段文字</p>\n          <p>或者表格</p>\n          <p>或者其他嵌套组件</p>\n          <p>…………</p>\n          <p>最后一行</p>\n        </Modal>\n      </div>\n    )\n  }\n}\n<ModalView />",settings:{},evalInContext:r},{type:"markdown",content:"#### **异步关闭弹出框**\n\n在浮层内提交数据不影响当前页面的操作"},{type:"code",content:"import {Modal, Button} from 'dbox-ui';\nclass ModalView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    asyncvisible: false,\n    ModalText: '对话框的内容',\n   }\n    this.asyncshowModal = this.asyncshowModal.bind(this);\n    this.asynchandleOk = this.asynchandleOk.bind(this);\n    this.asynchandleCancel = this.asynchandleCancel.bind(this)\n  };\n  // 异步关闭弹出框\n  asyncshowModal () {\n    this.setState({\n      asyncvisible: true\n    });\n  }\n  asynchandleOk (e) {\n    this.setState({\n      ModalText: '选择确认后对话框将在 2 秒后关闭',\n      confirmLoading: true\n    });\n    setTimeout(() => {\n      this.setState({\n        asyncvisible: false,\n        confirmLoading: false,\n      });\n    }, 2000);\n  }\n  asynchandleCancel (e) {\n    console.log('点击了取消');\n    this.setState({\n      asyncvisible: false\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Button type='primary' onClick={this.asyncshowModal}>显示对话框</Button>\n        <Modal confirmLoading={this.state.confirmLoading} title='我是标题' visible={this.state.asyncvisible}\n          onOk={this.asynchandleOk} onCancel={this.asynchandleCancel}>\n          <p>{this.state.ModalText}</p>\n        </Modal>\n      </div>\n    )\n  }\n}\n<ModalView />",settings:{},evalInContext:r},{type:"markdown",content:"#### **信息提示**\n\n通过设置info，success，error来设置信息提示的类型"},{type:"code",content:"import {Modal, Button} from 'dbox-ui';\nclass ModalView extends React.Component {\n  info () {\n    Modal.info({\n      title: '这是一条通知信息',\n      content: '一些附加信息一些附加信息一些附加信息',\n      onOk: function() {},\n    });\n  }\n\n  success () {\n    Modal.success({\n      title: '这是一条通知信息',\n      content: '一些附加信息一些附加信息一些附加信息'\n    });\n  }\n\n  error () {\n    Modal.error({\n      title: '这是一条通知信息',\n      content: '一些附加信息一些附加信息一些附加信息'\n    });\n  }\n  render() {\n    return (\n      <div>\n        <Button onClick={this.info}>信息提示</Button>\n        <Button style={{marginLeft: 20, marginRight: 20}} onClick={this.success}>成功提示</Button>\n        <Button onClick={this.error}>失败提示</Button>\n      </div>\n    )\n  }\n}\n<ModalView />",settings:{},evalInContext:r},{type:"markdown",content:"#### **确认对话框**\n\n通常用来确认操作"},{type:"code",content:"import {Modal, Button} from 'dbox-ui';\nclass ModalView extends React.Component {\n  showConfirm () {\n    Modal.confirm({\n      iconType: 'close-circle',\n      title: '我是一个确认对话模态框',\n      content: <div><p>这里是描述文字…</p><p>这里是描述文字…</p></div>,\n      onOk: function() {\n        console.log('确定');\n      },\n      onCancel: function() {}\n    });\n  }\n  render() {\n    return (\n      <Button onClick={this.showConfirm}>确认对话框</Button>\n    )\n  }\n}\n<ModalView />",settings:{},evalInContext:r},{type:"markdown",content:"#### **Modal**\n\n| 参数             | 说明                 | 类型               | 默认值  |\n| -------------- | ------------------ | ---------------- | ---- |\n| visible        | 对话框是否可见            | Boolean          | 无    |\n| confirmLoading | 确定按钮 loading       | Boolean          | 无    |\n| title          | 标题                 | React.Element    | 无    |\n| closable       | 是否显示右上角的关闭按钮       | Boolean          | true |\n| onOk           | 点击确定回调             | function         | 无    |\n| onCancel       | 点击遮罩层或右上角叉或取消按钮的回调 | function(e)      | 无    |\n| width          | 宽度                 | String or Number | 560  |\n| okText         | 确认按钮文字             | String           | 确定   |\n| cancelText     | 取消按钮文字             | String           | 取消   |\n| maskClosable   | 点击蒙层是否允许关闭         | Boolean          | true |\n| style          | 可用于设置浮层的样式，调整浮层位置等 | Object           | -    |\n| wrapClassName  | 对话框外层容器的类名         | String           | -    |\n\n#### **Modal.xxx()**\n\n包括：\n\n-   `Modal.info`\n-   `Modal.success`\n-   `Modal.error`\n-   `Modal.confirm`\n\n以上均为一个函数，参数为 object，具体属性如下：\n\n| 参数         | 说明                                        | 类型                      | 默认值             |\n| ---------- | ----------------------------------------- | ----------------------- | --------------- |\n| title      | 标题                                        | React.Element or String | 无               |\n| content    | 内容                                        | React.Element or String | 无               |\n| onOk       | 点击确定回调，参数为关闭函数，返回 promise 时 resolve 后自动关闭 | function                | 无               |\n| onCancel   | 取消回调，参数为关闭函数，返回 promise 时 resolve 后自动关闭   | function                | 无               |\n| width      | 宽度                                        | String or Number        | 408             |\n| iconType   | 图标 Icon 类型                                | String                  | question-circle |\n| okText     | 确认按钮文字                                    | String                  | 确定              |\n| cancelText | 取消按钮文字                                    | String                  | 取消              |\n| bodyStyle  | Modal内body样式                              | Object                  | -               |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport ModalView from '../prevPage/modal';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <ModalView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Feedback/Drawer"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"抽屉"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Feedback/Message"},u.default.createElement("span",null,"全局提示"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Message",examples:n(1906)}},function(e,t,n){var a={"dbox-ui":n(21),react:n(1),"./index.jsx":n(666)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Message$0 = require('./index.jsx');\nconst Message = Message$0['Message'] || (Message$0.default || Message$0);",o);e.exports=[{type:"markdown",content:"可提供成功、警告和错误等反馈信息,让用户知晓当前信息的状态。\n顶部居中显示并自动消失的方式，是一种不打断用户操作的轻量级提示方式,给与用户良好的视觉体验。\n\n##### **基本类型信息展示**"},{type:"code",content:"import { Switch, Message, Button } from 'dbox-ui';\n  let normal = false;\n  onChange = () => {\n    normal = !normal\n  }\n  success = () => {\n    Message.success('这是成功信息提示', 30, () => console.log(1111), normal);\n  };\n  error = () => {\n    Message.error('这是错误信息提示', normal);\n  }\n  warn = () => {\n    Message.warn('这是警告信息提示', 3, normal);\n  };\n  info = () => {\n    Message.info('这是基本的信息提示', 3, () => console.log('关闭回调'), normal);\n  };\n  <div>\n    <h4>可切换Message以背景色展示</h4>\n    <Switch defaultChecked onChange={onChange} /><br /><br />\n    <Button style={{ marginRight: 10 }} onClick={success}>成功</Button>\n    <Button type='danger' style={{ marginRight: 10 }} onClick={error}>失败</Button>\n    <Button onClick={warn} style={{ marginRight: 10 }}>警告</Button>\n    <Button onClick={info}>信息</Button>\n  </div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **修改延时**"},{type:"code",content:"import { Switch, Message, Button } from 'dbox-ui';\n\nlet normal = false;\nonChange = () => {\n  normal = !normal\n}\nDelayInfo = () => {\n  Message.info('这是基本的信息提示，并且在10s之后会自动关闭', 10, normal);\n};\n<div>\n  <h4>可切换Message以背景色展示</h4>\n  <Switch defaultChecked onChange={onChange} /><br /><br />\n  <Button onClick={DelayInfo}>10s后关闭</Button>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **加载中**"},{type:"code",content:"import { Switch, Message, Button } from 'dbox-ui';\n\nLoadingSuccess = () => {\n  const hide = Message.loading('活动加载中..', 10);\n    setTimeout(hide, 250000);\n  };\n<Button onClick={LoadingSuccess}>加载中</Button>",settings:{},evalInContext:r},{type:"markdown",content:"##### **Promise接口**"},{type:"code",content:"import { Switch, Message, Button, Icon } from 'dbox-ui';\n\nlet normal = false;\nonChange = () => {\n  normal = !normal\n}\nconst PromiseSuccess = () => {\n  Message.loading('活动加载中..', 2.5)\n  Message.open({\n    content: 'open触发了',\n    normal: normal,\n    icon: <Icon type='check-circle' />,\n  })\n    .then(() => Message.success('加载结束', 2.5))\n    .then(() => Message.info('加载中的加载结束', 2.5));\n    };\n  <div>\n    <Button onClick={PromiseSuccess}>Promise</Button>\n  </div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **API**\n\n组件提供了静态方法，使用参数和方式如下\n\n-   Message.success(content, [duration], onClose, true)\n-   Message.error(content, [duration], onClose, true)\n-   Message.info(content, [duration], onClose, true)\n-   Message.warning(content, [duration], onClose, true)\n-   Message.warn(content, [duration], onClose, true)\n-   Message.loading(content, [duration], onClose)(不支持normal背景色展示)\n\n| 参数       | 说明                    | 类型       | 默认值       |     |\n| -------- | --------------------- | -------- | --------- | --- |\n| content  | 提示内容                  | string   | ReactNode | -   |\n| duration | 自动关闭的延时,单位秒。设为0时不自动关闭 | number   | 3         |     |\n| onClose  | 关闭时触发的回调函数            | Function | -         |     |\n| normal   | 是否采用无背景色的信息提示         | boolean  | false     |     |\n\n##### **API**\n\n组件同时提供promise接口\n\n-   Message[level]\\(content, [duration]).then(afterClose)\n-   Message[level]\\(content, [duration], onClose).then(afterClose)\n    其中Message[level]是组件已经提供的静态方法。then接口返回值是Promise。\n-   Message.open(config)\n\n| 参数       | 说明                    | 类型        | 默认值       |     |\n| -------- | --------------------- | --------- | --------- | --- |\n| content  | 提示内容                  | string    | ReactNode | -   |\n| duration | 自动关闭的延时,单位秒。设为0时不自动关闭 | number    | 3         |     |\n| onClose  | 关闭时触发的回调函数            | Function  | -         |     |\n| icon     | 自定义图标                 | ReactNode | -         |     |\n\n##### **全局方法**\n\n还提供了全局配置和全局销毁方法：\n\n-   Message.config(options)\n-   Message.destroy()\n\n##### **message.config**\n\nMessage.config({\n  top: 100,\n  duration: 2,\n  maxCount: 3\n})\n\n| 参数       | 说明                      | 类型     | 默认值 |\n| -------- | ----------------------- | ------ | --- |\n| duration | 默认自动关闭延时                | number | 3   |\n| maxCount | 最大显示数，超过限制时，最早的消息会被自动关闭 | number | -   |\n| top      | 消息距离顶部的位置               | number | 24  |"},{type:"code",content:"import {PrevPage, BackTop} from 'dbox-ui';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <PrevPage />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Progress",examples:n(1908)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/progress":n(1909),react:n(1),"./progress.jsx":n(671)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Progress$0 = require('./progress.jsx');\nconst Progress = Progress$0['Progress'] || (Progress$0.default || Progress$0);",o);e.exports=[{type:"markdown",content:"在操作需要较长时间才能完成时，为用户显示该操作的当前进度和状态。\n当一个操作会打断当前界面，或者需要在后台运行，且耗时可能超过2秒时；\n当需要显示一个操作完成的百分比时。\n\n##### **线条型进度条**\n\n指定status，默认是default，也可给active，exception和success"},{type:"code",content:"import { Progress } from 'dbox-ui';\n\nclass ProgressView  extends React.Component {\n  render() {\n    return (\n      <div style={{ width: '700px' }}>\n        <Progress type='line' />\n        <Progress type='line' percent={50} status='active' />\n        <Progress type='line' percent={70} status='exception' />\n        <Progress type='line' percent={100} />\n        <Progress type='line' percent={30} showInfo={false} />\n      </div>\n    )\n  }\n}\n<ProgressView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **迷你线条进度条**\n\n指定size为small可实现较小进度条"},{type:"code",content:"import { Progress } from 'dbox-ui';\n\nclass ProgressView extends React.Component {\n  render() {\n    return (\n      <div style={{ width: '600px' }}>\n        <Progress size='small' type='line' />\n        <Progress size='small' type='line' percent={50} status='active' />\n        <Progress size='small' type='line' percent={70} status='exception' />\n        <Progress size='small' type='line' percent={100} />\n        <Progress size='small' type='line' percent={30} showInfo={false} />\n      </div>\n    )\n  }\n}\n<ProgressView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **圆形进度条**\n\n指定type为circle可实现圆形进度条"},{type:"code",content:"import { Progress } from 'dbox-ui';\n\nconst ProgressView = () => {\n  return (\n    <div >\n      <Progress type='circle' percent={50} />\n      <Progress type='circle' percent={70} status='exception' />\n      <Progress type='circle' percent={100} />\n    </div>\n  )\n}\n<ProgressView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **迷你圆形进度条**\n\n给出宽度可实现迷你的圆形进度条"},{type:"code",content:"import { Progress } from 'dbox-ui';\n\nconst ProgressView = () => {\n  return (\n    <div >\n      <Progress type='circle' width={80} percent={50} />\n      <Progress type='circle' width={80} percent={70} status='exception' />\n      <Progress type='circle' width={80} percent={100} />\n    </div>\n  )\n}\n<ProgressView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **动态进度条**\n\n点击按钮可动态显示进度"},{type:"code",content:"import { Progress, Button } from 'dbox-ui';\n\nconst ButtonGroup = Button.Group;\nclass ProgressView  extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      percent: 0\n    }\n    this.increase = this.increase.bind(this);\n    this.decrease = this.decrease.bind(this);\n  }\n  increase() {\n    let percent = this.state.percent + 10;\n    if (percent > 100) {\n      percent = 100;\n    }\n    this.setState({percent});\n  }\n  decrease() {\n    let percent = this.state.percent - 10;\n    if (percent < 0) {\n      percent = 0;\n    }\n    this.setState({percent});\n  }\n  render() {\n    return (\n      <div style={{ width: '800px' }}>\n        <Progress type='line' percent={this.state.percent} />\n        <Progress type='circle' percent={this.state.percent} />\n        <ButtonGroup>\n          <Button onClick={this.decrease} icon='remove' />\n          <Button onClick={this.increase} icon='plus' />\n        </ButtonGroup>\n      </div>\n    )\n  }\n}\n<ProgressView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **自定义圆形进度条**\n\n指定format字段定义一个函数，返回需要的格式。"},{type:"code",content:"import { Progress } from 'dbox-ui';\n\nconst ProgressView = () => {\n  return (\n      <div>\n        <Progress type='circle' percent={50} format={(percent) => `${percent}Day`} />\n        <Progress type='circle' percent={100} format={() => 'Finish'} />\n      </div>\n    )\n}\n<ProgressView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **API**\n\n| 属性                          | 说明                                   | 类型                | 默认值                        |\n| --------------------------- | ------------------------------------ | ----------------- | -------------------------- |\n| format                      | 内容的模板函数                              | function(percent) | `percent => percent + '%'` |\n| percent                     | 百分比                                  | number            | 0                          |\n| showInfo                    | 是否显示进度数值或状态图标                        | boolean           | true                       |\n| status                      | 状态，可选：`success` `exception` `active` | string            | -                          |\n| strokeWidth `(type=line)`   | 进度条线的宽度，单位 px                        | number            | 8                          |\n| strokeWidth `(type=circle)` | 圆形进度条线的宽度，单位是进度条画布宽度的百分比             | number            | 6                          |\n| type                        | 类型，可选 `line` `circle`                | string            | line                       |\n| width `(type=circle)`       | 圆形进度条画布宽度，单位 px                      | number            | 132                        |\n\n<style>.idoll-progress{margin:0 10px 10px 0}</style>"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport ProgressView from '../prevPage/progress';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <ProgressView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Feedback/Message"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"全局提示"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Feedback/Popconfirm"},u.default.createElement("span",null,"气泡确认框"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Popconfirm",examples:n(1911)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/popConfirm":n(1912),react:n(1),"./index.jsx":n(669)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Popconfirm$0 = require('./index.jsx');\nconst Popconfirm = Popconfirm$0['Popconfirm'] || (Popconfirm$0.default || Popconfirm$0);",o);e.exports=[{type:"markdown",content:"用户操作需要进一步确认，会在操作元素附近弹出浮层提示。\n\n##### **基本用法**\n\n最简单用法"},{type:"code",content:"import { Popconfirm,Message } from 'dbox-ui';\nclass PopconfirmDemo extends React.Component {\n    constructor() {\n        super();\n        this.confirm = this.confirm.bind(this);\n        this.cancel = this.cancel.bind(this);\n    }\n\n    confirm(){\n        Message.success('删除成功');\n    }\n    cancel(){\n        Message.error('删除取消');\n    }\n    render() {\n        return (\n            <div id='popconfirm' style={{marginLeft: '100px'}}>\n                <Popconfirm title='确定删除当前信息?' onConfirm={this.confirm} onCancel={this.cancel} okText='确认删除' cancelText='取消'>\n                <a href='#'>删除</a>\n                </Popconfirm>\n            </div>\n        )\n    }\n}\n\n<PopconfirmDemo />",settings:{},evalInContext:r},{type:"markdown",content:"##### **12个方向**\n\n弹出框位置有十二个方向。可通过设置 `placement` 属性控制。"},{type:"code",content:"import { Popconfirm,Button,Message } from 'dbox-ui';\nconst buttonWidth = '70px';\nconst text = '确定要删除吗';\nclass PopconfirmDemo extends React.Component {\n    constructor() {\n        super();\n        this.confirm = this.confirm.bind(this);\n        this.cancel = this.cancel.bind(this);\n    }\n\n    confirm(){\n        Message.success('删除成功');\n    }\n    cancel(){\n        Message.error('删除取消');\n    }\n    render() {\n        return (\n        <div>\n            <div style={{ marginLeft: buttonWidth, whiteSpace: 'nowrap' }}>\n            <Popconfirm placement='topLeft' title={text} onConfirm={this.confirm} onCancel={this.cancel} okText='确认删除' cancelText='取消'>\n                <Button>TL</Button>\n            </Popconfirm>\n            <Popconfirm placement='top' title={text} onConfirm={this.confirm} onCancel={this.cancel} okText='确认删除' cancelText='取消'>\n                <Button style={{ marginLeft: '10px', marginRight: '10px' }}>Top</Button>\n            </Popconfirm>\n            <Popconfirm placement='topRight' title={text} onConfirm={this.confirm} onCancel={this.cancel}  okText='确认删除' cancelText='取消'>\n                <Button>TR</Button>\n            </Popconfirm>\n            </div>\n            <div style={{ width: buttonWidth, float: 'left' }}>\n            <Popconfirm placement='leftTop' title={text} onConfirm={this.confirm} onCancel={this.cancel} okText='确认删除' cancelText='取消'>\n                <Button>LT</Button>\n            </Popconfirm>\n            <Popconfirm placement='left' title={text} onConfirm={this.confirm} onCancel={this.cancel} okText='确认删除' cancelText='取消'>\n                <Button style={{ marginTop: '10px', marginBottom: '10px' }}>Left</Button>\n            </Popconfirm>\n            <Popconfirm placement='leftBottom' title={text} onConfirm={this.confirm} onCancel={this.cancel} okText='确认删除' cancelText='取消'>\n                <Button>LB</Button>\n            </Popconfirm>\n            </div>\n            <div style={{ width: buttonWidth, marginLeft: (70 * 4) + 24 }}>\n            <Popconfirm placement='rightTop' title={text} onConfirm={this.confirm} onCancel={this.cancel} okText='确认删除' cancelText='取消'>\n                <Button>RT</Button>\n            </Popconfirm>\n            <Popconfirm placement='right' title={text} onConfirm={this.confirm} onCancel={this.cancel}  okText='确认删除' cancelText='取消'>\n                <Button style={{ marginTop: '10px', marginBottom: '10px' }}>Right</Button>\n            </Popconfirm>\n            <Popconfirm placement='rightBottom' title={text} onConfirm={this.confirm} onCancel={this.cancel} okText='确认删除' cancelText='取消'>\n                <Button>RB</Button>\n            </Popconfirm>\n            </div>\n            <div style={{ marginLeft: buttonWidth, clear: 'both', whiteSpace: 'nowrap' }}>\n            <Popconfirm placement='bottomLeft' title={text} onConfirm={this.confirm} onCancel={this.cancel} okText='确认删除' cancelText='取消'>\n                <Button>BL</Button>\n            </Popconfirm>\n            <Popconfirm placement='bottom' title={text} onConfirm={this.confirm} onCancel={this.cancel}  okText='确认删除' cancelText='取消'>\n                <Button style={{ marginLeft: '10px', marginRight: '10px' }}>Bottom</Button>\n            </Popconfirm>\n            <Popconfirm placement='bottomRight' title={text} onConfirm={this.confirm} onCancel={this.cancel} okText='确认删除' cancelText='取消'>\n                <Button>BR</Button>\n            </Popconfirm>\n            </div>\n        </div>\n        )\n    }\n}\n<PopconfirmDemo />",settings:{},evalInContext:r},{type:"markdown",content:"##### **条件触发**\n\n可以判断是否需要弹出。"},{type:"code",content:"import { Popconfirm,Switch,Message } from 'dbox-ui';\nclass PopconfirmDemo extends React.Component {\n    constructor() {\n        super();\n        this.state = {\n             visible: false,\n        }\n        this.confirm = this.confirm.bind(this);\n        this.handleVisibleChange = this.handleVisibleChange.bind(this);\n        this.changeCondition = this.changeCondition.bind(this);\n    }\n\n    confirm(){\n        this.setState({ visible: false });\n        Message.success('删除成功');\n    }\n\n    changeCondition(value){\n        this.setState({ condition: value });\n    }\n\n    handleVisibleChange(visible) {\n        if (!visible) {\n            this.setState({ visible });\n            return;\n        }\n\n        if (this.state.condition) {\n            this.confirm(); // next step\n        } else {\n            this.setState({ visible }); // 显示popconfirm\n        }\n   }\n\n    render(){\n        return (\n            <div>\n        <Popconfirm\n          title='确定要删除吗？'\n          visible={this.state.visible}\n          onVisibleChange={this.handleVisibleChange}\n          onConfirm={this.confirm}\n          onCancel={this.cancel}\n          okText='确认删除'\n          cancelText='取消'\n        >\n          <a href='#'>删除任务</a>\n        </Popconfirm>\n        <br />\n        <br />\n        是否直接删除：<Switch defaultChecked onChange={this.changeCondition} />\n        </div>\n        )\n    }\n}\n<PopconfirmDemo />",settings:{},evalInContext:r},{type:"markdown",content:'##### **Popconfirm**\n\n| 参数         | 说明              | 类型               | 默认值                                   |\n| ---------- | --------------- | ---------------- | ------------------------------------- |\n| cancelText | 取消按钮文字          | string           | 取消                                    |\n| okText     | 确认按钮文字          | string           | 确定                                    |\n| okType     | 确认按钮类型          | string           | danger                                |\n| title      | 确认框的描述          | string/ReactNode | 无                                     |\n| onCancel   | 点击取消的回调         | function(e)      | 无                                     |\n| onConfirm  | 点击确认的回调         | function(e)      | 无                                     |\n| icon       | 自定义弹出气泡 Icon 图标 | ReactNode        | &lt;Icon type="exclamation-circle" /> |\n\n更多属性请参考 [Tooltip]。\n\n#### **注意**\n\n请确保 `Popconfirm` 的子元素能接受 `onMouseEnter`、`onMouseLeave`、`onFocus`、`onClick` 事件。'},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport PopconfirmView from '../prevPage/popConfirm';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <PopconfirmView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Feedback/Progress"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"进度条"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Feedback/Spin"},u.default.createElement("span",null,"加载中"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Spin",examples:n(1914)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/spin":n(1915),react:n(1),"./index.jsx":n(197)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Spin$0 = require('./index.jsx');\nconst Spin = Spin$0['Spin'] || (Spin$0.default || Spin$0);",o);e.exports=[{type:"markdown",content:"页面局部处于等待异步数据或正在渲染过程时，可以适当的缓解用户因为等待页面渲染而带来的焦虑。\n\n##### **简单的加载中**"},{type:"code",content:"import { Spin } from 'dbox-ui';\n\n<div style={{ marginTop: 51, marginLeft: 100 }}><Spin /></div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **三种不同大小的加载中**"},{type:"code",content:"import { Spin } from 'dbox-ui';\n\n<div style={{ width: 300, display: 'flex', justifyContent: 'space-between', marginTop: 50 }}>\n  <Spin size='small' />\n  <Spin />\n  <Spin size='large' />\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **放在容器中**"},{type:"code",content:"import { Spin } from 'dbox-ui';\n\nconst style = {\n  textAlign: 'center',\n  background: 'rgba(0, 0, 0, 0.05)',\n  borderRadius: 4,\n  marginBottom: 20,\n  paddingTop: 30,\n  paddingBottom: 30,\n  paddingLeft: 50,\n  paddingRight: 50,\n  marginTop: 20,\n  marginBotton: 20\n}\nclass SpinView extends React.Component {\n  render () {\n    return (\n      <div style={style}>\n        <Spin />\n      </div>\n    )\n  }\n}\n<SpinView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **自定义描述文案**"},{type:"code",content:"import { Spin, Alert } from 'dbox-ui';\n\n<Spin tip='Loading...'>\n  <Alert\n    message='Alert信息标题'\n    description='关于此警报上下文的详细信息.'\n    type='info'\n  />\n</Spin>",settings:{},evalInContext:r},{type:"markdown",content:"##### **卡片加载中**"},{type:"code",content:"import { Alert, Spin, Switch } from 'dbox-ui';\n\nconst container = (\n  <Alert\n    message='Alert message title'\n    description='Further details about the context of this alert.'\n    type='info'\n  />\n);\nclass SpinViewLoading extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    loading: false\n  }\n  this.toggle = this.toggle.bind(this);\n}\n  toggle(value) {\n    this.setState({ loading: value });\n  }\n  render() {\n    return (\n      <div>\n        <Spin spinning={this.state.loading} delay={500}>{container}</Spin>\n        <div style={{ marginTop: 16 }}>\n          Loading state：<Switch onChange={this.toggle} />\n        </div>\n      </div>\n    )\n  }\n}\n<SpinViewLoading />",settings:{},evalInContext:r},{type:"markdown",content:"##### **自定义颜色**"},{type:"code",content:"const style = {\n  textAlign: 'center',\n  background: '#13B886',\n  borderRadius: 4,\n  marginBottom: 20,\n  paddingTop: 30,\n  paddingBottom: 30,\n  paddingLeft: 50,\n  paddingRight: 50,\n  marginTop: 20,\n  marginBotton: 20\n}\nclass SpinView extends React.Component {\n  render () {\n    return (\n      <div style={style}>\n        <Spin color={['#fff', 'rgba(255, 255, 255, 0.05)', 'rgba(255, 255, 255, 0.05)', 'rgba(255, 255, 255, 0.05)']} />\n      </div>\n    )\n  }\n}\n<SpinView />",settings:{},evalInContext:r},{type:"markdown",content:"##### **API**\n\n| 参数       | 说明                                  | 类型          | 默认值       |\n| -------- | ----------------------------------- | ----------- | --------- |\n| delay    | 延迟显示加载效果的时间（防止闪烁）                   | number (毫秒) | -         |\n| size     | 组件大小，可选值为 `small` `default` `large` | string      | 'default' |\n| spinning | 是否旋转                                | boolean     | true      |\n| tip      | 当作为包裹元素时，可以自定义描述文案                  | string      | -         |\n| color    | 在深色背景下，spin的四个边框颜色自定义               | Array       |           |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport SpinView from '../prevPage/spin';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <SpinView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Feedback/Popconfirm"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"气泡确认框"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Others/Anchor"},u.default.createElement("span",null,"锚点"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Anchor",examples:n(1917)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/anchor":n(1918),react:n(1),"./index.jsx":n(259)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Anchor$0 = require('./index.jsx');\nconst Anchor = Anchor$0['Anchor'] || (Anchor$0.default || Anchor$0);",o);e.exports=[{type:"markdown",content:"用于快速定位页面内容。\n\n##### **基本用法**"},{type:"code",content:"import { Anchor } from 'dbox-ui';\nconst { Link } = Anchor;\n\n<div>\n  <span className='demo-anchor'>\n    <Anchor>\n      <Link href='#components-anchor-demo-1' title='项目一' />\n      <Link href='#components-anchor-demo-2' title='项目二' />\n      <Link href='#components-anchor-demo-3' title='项目三' />\n      <Link href=\"#API\" title=\"API\">\n        <Link href='#components-anchor-demo-4' title='项目四' />\n        <Link href='#components-anchor-demo-5' title='项目五' />\n      </Link>\n    </Anchor>\n  </span>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **Anchor Props**\n\n| 参数           | 说明                | 类型                               | 默认值          |\n| ------------ | ----------------- | -------------------------------- | ------------ |\n| bounds       | 锚点区域边界            | number                           | 5(px)        |\n| getContainer | 指定滚动的容器           | () => HTMLElement                | () => window |\n| offsetBottom | 距离窗口底部达到指定偏移量后触发  | number                           | -            |\n| offsetTop    | 距离窗口顶部达到指定偏移量后触发  | number                           | -            |\n| onClick      | click 事件的 handler | Function(e: Event, link: Object) | -            |\n\n##### **Link Props**\n\n| 参数    | 说明   | 类型                 | 默认值 |\n| ----- | ---- | ------------------ | --- |\n| href  | 锚点链接 | string             | -   |\n| title | 文字内容 | string , ReactNode | -   |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport AnchorView from '../prevPage/anchor';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <AnchorView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Feedback/Spin"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"加载中"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Others/BackTop"},u.default.createElement("span",null,"返回顶部"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"BackTop",examples:n(1920)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/backTop":n(1921),react:n(1),"./index.jsx":n(267)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst BackTop$0 = require('./index.jsx');\nconst BackTop = BackTop$0['BackTop'] || (BackTop$0.default || BackTop$0);",o);e.exports=[{type:"markdown",content:"当页面内容区域比较长时,给与触发让用户快速回到页面的顶部。\n\n##### **基本用法**"},{type:"code",content:"<div>\n  <BackTop />\n    向下滚动以查看右下方的灰色\n    <strong style={{ color: 'rgba(64, 64, 64, 0.6)' }}> gray </strong>\n    按钮。\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **自定义样式**"},{type:"code",content:"<div>\n<BackTop>\n  <div style={{height: 40,width: 40, marginTop: 40, textAlign: 'center',borderRadius: 4,fontSize: 20,backgroundColor: '#13B886',color: '#fff',lineHeight: '40px', fontSize: 14}}>返回</div>\n</BackTop>\n  向下滚动以查看右下方的文字按钮。\n\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **API**\n\n| 参数               | 说明                                | 类型       | 默认值          |\n| ---------------- | --------------------------------- | -------- | ------------ |\n| target           | 设置需要监听其滚动事件的元素，值为一个返回对应 DOM 元素的函数 | Function | () => window |\n| visibilityHeight | 滚动高度达到此参数值才出现 BackTop             | number   | 400          |\n| onClick          | 点击按钮的回调函数                         | Function | -            |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport BackTopView from '../prevPage/backTop';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <BackTopView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Others/Anchor"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"锚点"))),u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Others/Divider"},u.default.createElement("span",null,"分割线"),u.default.createElement(d.default,{type:"right",className:"prevIcon prevNext"}))))}}]),PageView}(u.default.Component);t.default=c},function(e,t,n){e.exports={methods:[],doclets:{},displayName:"Divider",examples:n(1923)}},function(e,t,n){var a={"dbox-ui":n(21),"../prevPage/divider":n(1924),react:n(1),"./index.jsx":n(655)},o=n(22).default.bind(null,a),r=n(23).default.bind(null,"const React$0 = require('react');\nconst React = React$0['React'] || (React$0.default || React$0);\nconst Divider$0 = require('./index.jsx');\nconst Divider = Divider$0['Divider'] || (Divider$0.default || Divider$0);",o);e.exports=[{type:"markdown",content:"文本段落进行分割。\n对行内文字或者链接进行分割。\n\n##### **水平分割线**"},{type:"code",content:"<div>\n  <p>默认为水平分割线(实线)</p>\n  <Divider />\n  <p>默认为水平分割线(虚线)</p>\n  <Divider dashed />\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **竖分割线**"},{type:"code",content:"<div>\n  测试\n  <Divider type='vertical' />\n  <a href='#'>链接</a>\n  <Divider type='vertical' />\n  <a href='#'>链接</a>\n</div>",settings:{},evalInContext:r},{type:"markdown",content:"##### **API**\n\n| 参数        | 说明       | 类型                            | 默认值          |\n| --------- | -------- | ----------------------------- | ------------ |\n| dashed    | 是否虚线     | Boolean                       | false        |\n| type      | 水平还是垂直类型 | enum: `horizontal` `vertical` | `horizontal` |\n| className | 分割线样式类   | string                        | -            |\n| style     | 分割线样式对象  | object                        | -            |"},{type:"code",content:"import {BackTop} from 'dbox-ui';\nimport DividerView from '../prevPage/divider';\n<div>\n  <BackTop visibilityHeight={20} style={{position: 'fixed', right: '50px'}}/>\n  <DividerView />\n</div>",settings:{noeditor:!0},evalInContext:r}]},function(e,t,n){"use strict";Object.defineProperty(t,"__esModule",{value:!0});var a=_interopRequireDefault(n(11)),o=_interopRequireDefault(n(5)),r=_interopRequireDefault(n(7)),l=_interopRequireDefault(n(4)),i=_interopRequireDefault(n(6)),u=_interopRequireDefault(n(1)),s=n(20),d=_interopRequireDefault(n(17));function _interopRequireDefault(e){return e&&e.__esModule?e:{default:e}}n(24);var c=function(e){function PageView(){return(0,o.default)(this,PageView),(0,l.default)(this,(PageView.__proto__||(0,a.default)(PageView)).apply(this,arguments))}return(0,i.default)(PageView,e),(0,r.default)(PageView,[{key:"render",value:function render(){return u.default.createElement(s.Row,{type:"flex",justify:"space-between",align:"middle",className:"prevNextNav"},u.default.createElement(s.Col,null,u.default.createElement("a",{className:"prevPage",href:"/doc.html#/Components/Others/BackTop"},u.default.createElement(d.default,{type:"left",className:"prevIcon"}),u.default.createElement("span",null,"返回顶部"))))}}]),PageView}(u.default.Component);t.default=c}],[[847,1,3,2]]]);